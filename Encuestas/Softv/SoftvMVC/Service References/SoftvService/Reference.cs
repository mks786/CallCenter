//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SoftvMVC.SoftvService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SoftvService.IUsuario")]
    public interface IUsuario {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsuario/GetUsuario", ReplyAction="http://tempuri.org/IUsuario/GetUsuarioResponse")]
        Softv.Entities.UsuarioEntity GetUsuario(System.Nullable<int> IdUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsuario/GetUsuario", ReplyAction="http://tempuri.org/IUsuario/GetUsuarioResponse")]
        System.Threading.Tasks.Task<Softv.Entities.UsuarioEntity> GetUsuarioAsync(System.Nullable<int> IdUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsuario/GetDeepUsuario", ReplyAction="http://tempuri.org/IUsuario/GetDeepUsuarioResponse")]
        Softv.Entities.UsuarioEntity GetDeepUsuario(System.Nullable<int> IdUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsuario/GetDeepUsuario", ReplyAction="http://tempuri.org/IUsuario/GetDeepUsuarioResponse")]
        System.Threading.Tasks.Task<Softv.Entities.UsuarioEntity> GetDeepUsuarioAsync(System.Nullable<int> IdUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsuario/GetUsuarioList", ReplyAction="http://tempuri.org/IUsuario/GetUsuarioListResponse")]
        System.Collections.Generic.List<Softv.Entities.UsuarioEntity> GetUsuarioList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsuario/GetUsuarioList", ReplyAction="http://tempuri.org/IUsuario/GetUsuarioListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.UsuarioEntity>> GetUsuarioListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsuario/GetUsuarioPagedList", ReplyAction="http://tempuri.org/IUsuario/GetUsuarioPagedListResponse")]
        Globals.SoftvList<Softv.Entities.UsuarioEntity> GetUsuarioPagedList(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsuario/GetUsuarioPagedList", ReplyAction="http://tempuri.org/IUsuario/GetUsuarioPagedListResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.UsuarioEntity>> GetUsuarioPagedListAsync(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsuario/GetUsuarioPagedListXml", ReplyAction="http://tempuri.org/IUsuario/GetUsuarioPagedListXmlResponse")]
        Globals.SoftvList<Softv.Entities.UsuarioEntity> GetUsuarioPagedListXml(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsuario/GetUsuarioPagedListXml", ReplyAction="http://tempuri.org/IUsuario/GetUsuarioPagedListXmlResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.UsuarioEntity>> GetUsuarioPagedListXmlAsync(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsuario/AddUsuario", ReplyAction="http://tempuri.org/IUsuario/AddUsuarioResponse")]
        int AddUsuario(Softv.Entities.UsuarioEntity objUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsuario/AddUsuario", ReplyAction="http://tempuri.org/IUsuario/AddUsuarioResponse")]
        System.Threading.Tasks.Task<int> AddUsuarioAsync(Softv.Entities.UsuarioEntity objUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsuario/UpdateUsuario", ReplyAction="http://tempuri.org/IUsuario/UpdateUsuarioResponse")]
        int UpdateUsuario(Softv.Entities.UsuarioEntity objUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsuario/UpdateUsuario", ReplyAction="http://tempuri.org/IUsuario/UpdateUsuarioResponse")]
        System.Threading.Tasks.Task<int> UpdateUsuarioAsync(Softv.Entities.UsuarioEntity objUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsuario/DeleteUsuario", ReplyAction="http://tempuri.org/IUsuario/DeleteUsuarioResponse")]
        int DeleteUsuario(System.Nullable<int> IdUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsuario/DeleteUsuario", ReplyAction="http://tempuri.org/IUsuario/DeleteUsuarioResponse")]
        System.Threading.Tasks.Task<int> DeleteUsuarioAsync(System.Nullable<int> IdUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsuario/ChangeStateUsuario", ReplyAction="http://tempuri.org/IUsuario/ChangeStateUsuarioResponse")]
        int ChangeStateUsuario(Softv.Entities.UsuarioEntity objUsuario, bool State);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsuario/ChangeStateUsuario", ReplyAction="http://tempuri.org/IUsuario/ChangeStateUsuarioResponse")]
        System.Threading.Tasks.Task<int> ChangeStateUsuarioAsync(Softv.Entities.UsuarioEntity objUsuario, bool State);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsuario/GetusuarioByUserAndPass", ReplyAction="http://tempuri.org/IUsuario/GetusuarioByUserAndPassResponse")]
        Softv.Entities.UsuarioEntity GetusuarioByUserAndPass(string Usuario, string Pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsuario/GetusuarioByUserAndPass", ReplyAction="http://tempuri.org/IUsuario/GetusuarioByUserAndPassResponse")]
        System.Threading.Tasks.Task<Softv.Entities.UsuarioEntity> GetusuarioByUserAndPassAsync(string Usuario, string Pass);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUsuarioChannel : SoftvMVC.SoftvService.IUsuario, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UsuarioClient : System.ServiceModel.ClientBase<SoftvMVC.SoftvService.IUsuario>, SoftvMVC.SoftvService.IUsuario {
        
        public UsuarioClient() {
        }
        
        public UsuarioClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UsuarioClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UsuarioClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UsuarioClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Softv.Entities.UsuarioEntity GetUsuario(System.Nullable<int> IdUsuario) {
            return base.Channel.GetUsuario(IdUsuario);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.UsuarioEntity> GetUsuarioAsync(System.Nullable<int> IdUsuario) {
            return base.Channel.GetUsuarioAsync(IdUsuario);
        }
        
        public Softv.Entities.UsuarioEntity GetDeepUsuario(System.Nullable<int> IdUsuario) {
            return base.Channel.GetDeepUsuario(IdUsuario);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.UsuarioEntity> GetDeepUsuarioAsync(System.Nullable<int> IdUsuario) {
            return base.Channel.GetDeepUsuarioAsync(IdUsuario);
        }
        
        public System.Collections.Generic.List<Softv.Entities.UsuarioEntity> GetUsuarioList() {
            return base.Channel.GetUsuarioList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.UsuarioEntity>> GetUsuarioListAsync() {
            return base.Channel.GetUsuarioListAsync();
        }
        
        public Globals.SoftvList<Softv.Entities.UsuarioEntity> GetUsuarioPagedList(int page, int pageSize) {
            return base.Channel.GetUsuarioPagedList(page, pageSize);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.UsuarioEntity>> GetUsuarioPagedListAsync(int page, int pageSize) {
            return base.Channel.GetUsuarioPagedListAsync(page, pageSize);
        }
        
        public Globals.SoftvList<Softv.Entities.UsuarioEntity> GetUsuarioPagedListXml(int page, int pageSize, string xml) {
            return base.Channel.GetUsuarioPagedListXml(page, pageSize, xml);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.UsuarioEntity>> GetUsuarioPagedListXmlAsync(int page, int pageSize, string xml) {
            return base.Channel.GetUsuarioPagedListXmlAsync(page, pageSize, xml);
        }
        
        public int AddUsuario(Softv.Entities.UsuarioEntity objUsuario) {
            return base.Channel.AddUsuario(objUsuario);
        }
        
        public System.Threading.Tasks.Task<int> AddUsuarioAsync(Softv.Entities.UsuarioEntity objUsuario) {
            return base.Channel.AddUsuarioAsync(objUsuario);
        }
        
        public int UpdateUsuario(Softv.Entities.UsuarioEntity objUsuario) {
            return base.Channel.UpdateUsuario(objUsuario);
        }
        
        public System.Threading.Tasks.Task<int> UpdateUsuarioAsync(Softv.Entities.UsuarioEntity objUsuario) {
            return base.Channel.UpdateUsuarioAsync(objUsuario);
        }
        
        public int DeleteUsuario(System.Nullable<int> IdUsuario) {
            return base.Channel.DeleteUsuario(IdUsuario);
        }
        
        public System.Threading.Tasks.Task<int> DeleteUsuarioAsync(System.Nullable<int> IdUsuario) {
            return base.Channel.DeleteUsuarioAsync(IdUsuario);
        }
        
        public int ChangeStateUsuario(Softv.Entities.UsuarioEntity objUsuario, bool State) {
            return base.Channel.ChangeStateUsuario(objUsuario, State);
        }
        
        public System.Threading.Tasks.Task<int> ChangeStateUsuarioAsync(Softv.Entities.UsuarioEntity objUsuario, bool State) {
            return base.Channel.ChangeStateUsuarioAsync(objUsuario, State);
        }
        
        public Softv.Entities.UsuarioEntity GetusuarioByUserAndPass(string Usuario, string Pass) {
            return base.Channel.GetusuarioByUserAndPass(Usuario, Pass);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.UsuarioEntity> GetusuarioByUserAndPassAsync(string Usuario, string Pass) {
            return base.Channel.GetusuarioByUserAndPassAsync(Usuario, Pass);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SoftvService.IRole")]
    public interface IRole {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRole/GetRole", ReplyAction="http://tempuri.org/IRole/GetRoleResponse")]
        Softv.Entities.RoleEntity GetRole(System.Nullable<int> IdRol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRole/GetRole", ReplyAction="http://tempuri.org/IRole/GetRoleResponse")]
        System.Threading.Tasks.Task<Softv.Entities.RoleEntity> GetRoleAsync(System.Nullable<int> IdRol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRole/GetDeepRole", ReplyAction="http://tempuri.org/IRole/GetDeepRoleResponse")]
        Softv.Entities.RoleEntity GetDeepRole(System.Nullable<int> IdRol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRole/GetDeepRole", ReplyAction="http://tempuri.org/IRole/GetDeepRoleResponse")]
        System.Threading.Tasks.Task<Softv.Entities.RoleEntity> GetDeepRoleAsync(System.Nullable<int> IdRol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRole/GetRoleList", ReplyAction="http://tempuri.org/IRole/GetRoleListResponse")]
        System.Collections.Generic.List<Softv.Entities.RoleEntity> GetRoleList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRole/GetRoleList", ReplyAction="http://tempuri.org/IRole/GetRoleListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.RoleEntity>> GetRoleListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRole/GetRolePagedList", ReplyAction="http://tempuri.org/IRole/GetRolePagedListResponse")]
        Globals.SoftvList<Softv.Entities.RoleEntity> GetRolePagedList(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRole/GetRolePagedList", ReplyAction="http://tempuri.org/IRole/GetRolePagedListResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.RoleEntity>> GetRolePagedListAsync(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRole/GetRolePagedListXml", ReplyAction="http://tempuri.org/IRole/GetRolePagedListXmlResponse")]
        Globals.SoftvList<Softv.Entities.RoleEntity> GetRolePagedListXml(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRole/GetRolePagedListXml", ReplyAction="http://tempuri.org/IRole/GetRolePagedListXmlResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.RoleEntity>> GetRolePagedListXmlAsync(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRole/AddRole", ReplyAction="http://tempuri.org/IRole/AddRoleResponse")]
        int AddRole(Softv.Entities.RoleEntity objRole);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRole/AddRole", ReplyAction="http://tempuri.org/IRole/AddRoleResponse")]
        System.Threading.Tasks.Task<int> AddRoleAsync(Softv.Entities.RoleEntity objRole);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRole/UpdateRole", ReplyAction="http://tempuri.org/IRole/UpdateRoleResponse")]
        int UpdateRole(Softv.Entities.RoleEntity objRole);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRole/UpdateRole", ReplyAction="http://tempuri.org/IRole/UpdateRoleResponse")]
        System.Threading.Tasks.Task<int> UpdateRoleAsync(Softv.Entities.RoleEntity objRole);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRole/DeleteRole", ReplyAction="http://tempuri.org/IRole/DeleteRoleResponse")]
        int DeleteRole(System.Nullable<int> IdRol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRole/DeleteRole", ReplyAction="http://tempuri.org/IRole/DeleteRoleResponse")]
        System.Threading.Tasks.Task<int> DeleteRoleAsync(System.Nullable<int> IdRol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRole/ChangeStateRole", ReplyAction="http://tempuri.org/IRole/ChangeStateRoleResponse")]
        int ChangeStateRole(Softv.Entities.RoleEntity objRole, bool State);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRole/ChangeStateRole", ReplyAction="http://tempuri.org/IRole/ChangeStateRoleResponse")]
        System.Threading.Tasks.Task<int> ChangeStateRoleAsync(Softv.Entities.RoleEntity objRole, bool State);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRoleChannel : SoftvMVC.SoftvService.IRole, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RoleClient : System.ServiceModel.ClientBase<SoftvMVC.SoftvService.IRole>, SoftvMVC.SoftvService.IRole {
        
        public RoleClient() {
        }
        
        public RoleClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RoleClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RoleClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RoleClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Softv.Entities.RoleEntity GetRole(System.Nullable<int> IdRol) {
            return base.Channel.GetRole(IdRol);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.RoleEntity> GetRoleAsync(System.Nullable<int> IdRol) {
            return base.Channel.GetRoleAsync(IdRol);
        }
        
        public Softv.Entities.RoleEntity GetDeepRole(System.Nullable<int> IdRol) {
            return base.Channel.GetDeepRole(IdRol);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.RoleEntity> GetDeepRoleAsync(System.Nullable<int> IdRol) {
            return base.Channel.GetDeepRoleAsync(IdRol);
        }
        
        public System.Collections.Generic.List<Softv.Entities.RoleEntity> GetRoleList() {
            return base.Channel.GetRoleList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.RoleEntity>> GetRoleListAsync() {
            return base.Channel.GetRoleListAsync();
        }
        
        public Globals.SoftvList<Softv.Entities.RoleEntity> GetRolePagedList(int page, int pageSize) {
            return base.Channel.GetRolePagedList(page, pageSize);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.RoleEntity>> GetRolePagedListAsync(int page, int pageSize) {
            return base.Channel.GetRolePagedListAsync(page, pageSize);
        }
        
        public Globals.SoftvList<Softv.Entities.RoleEntity> GetRolePagedListXml(int page, int pageSize, string xml) {
            return base.Channel.GetRolePagedListXml(page, pageSize, xml);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.RoleEntity>> GetRolePagedListXmlAsync(int page, int pageSize, string xml) {
            return base.Channel.GetRolePagedListXmlAsync(page, pageSize, xml);
        }
        
        public int AddRole(Softv.Entities.RoleEntity objRole) {
            return base.Channel.AddRole(objRole);
        }
        
        public System.Threading.Tasks.Task<int> AddRoleAsync(Softv.Entities.RoleEntity objRole) {
            return base.Channel.AddRoleAsync(objRole);
        }
        
        public int UpdateRole(Softv.Entities.RoleEntity objRole) {
            return base.Channel.UpdateRole(objRole);
        }
        
        public System.Threading.Tasks.Task<int> UpdateRoleAsync(Softv.Entities.RoleEntity objRole) {
            return base.Channel.UpdateRoleAsync(objRole);
        }
        
        public int DeleteRole(System.Nullable<int> IdRol) {
            return base.Channel.DeleteRole(IdRol);
        }
        
        public System.Threading.Tasks.Task<int> DeleteRoleAsync(System.Nullable<int> IdRol) {
            return base.Channel.DeleteRoleAsync(IdRol);
        }
        
        public int ChangeStateRole(Softv.Entities.RoleEntity objRole, bool State) {
            return base.Channel.ChangeStateRole(objRole, State);
        }
        
        public System.Threading.Tasks.Task<int> ChangeStateRoleAsync(Softv.Entities.RoleEntity objRole, bool State) {
            return base.Channel.ChangeStateRoleAsync(objRole, State);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SoftvService.IModule")]
    public interface IModule {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModule/GetModule", ReplyAction="http://tempuri.org/IModule/GetModuleResponse")]
        Softv.Entities.ModuleEntity GetModule(System.Nullable<int> IdModule);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModule/GetModule", ReplyAction="http://tempuri.org/IModule/GetModuleResponse")]
        System.Threading.Tasks.Task<Softv.Entities.ModuleEntity> GetModuleAsync(System.Nullable<int> IdModule);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModule/GetDeepModule", ReplyAction="http://tempuri.org/IModule/GetDeepModuleResponse")]
        Softv.Entities.ModuleEntity GetDeepModule(System.Nullable<int> IdModule);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModule/GetDeepModule", ReplyAction="http://tempuri.org/IModule/GetDeepModuleResponse")]
        System.Threading.Tasks.Task<Softv.Entities.ModuleEntity> GetDeepModuleAsync(System.Nullable<int> IdModule);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModule/GetModuleList", ReplyAction="http://tempuri.org/IModule/GetModuleListResponse")]
        System.Collections.Generic.List<Softv.Entities.ModuleEntity> GetModuleList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModule/GetModuleList", ReplyAction="http://tempuri.org/IModule/GetModuleListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.ModuleEntity>> GetModuleListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModule/GetModulePagedList", ReplyAction="http://tempuri.org/IModule/GetModulePagedListResponse")]
        Globals.SoftvList<Softv.Entities.ModuleEntity> GetModulePagedList(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModule/GetModulePagedList", ReplyAction="http://tempuri.org/IModule/GetModulePagedListResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.ModuleEntity>> GetModulePagedListAsync(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModule/GetModulePagedListXml", ReplyAction="http://tempuri.org/IModule/GetModulePagedListXmlResponse")]
        Globals.SoftvList<Softv.Entities.ModuleEntity> GetModulePagedListXml(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModule/GetModulePagedListXml", ReplyAction="http://tempuri.org/IModule/GetModulePagedListXmlResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.ModuleEntity>> GetModulePagedListXmlAsync(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModule/AddModule", ReplyAction="http://tempuri.org/IModule/AddModuleResponse")]
        int AddModule(Softv.Entities.ModuleEntity objModule);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModule/AddModule", ReplyAction="http://tempuri.org/IModule/AddModuleResponse")]
        System.Threading.Tasks.Task<int> AddModuleAsync(Softv.Entities.ModuleEntity objModule);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModule/UpdateModule", ReplyAction="http://tempuri.org/IModule/UpdateModuleResponse")]
        int UpdateModule(Softv.Entities.ModuleEntity objModule);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModule/UpdateModule", ReplyAction="http://tempuri.org/IModule/UpdateModuleResponse")]
        System.Threading.Tasks.Task<int> UpdateModuleAsync(Softv.Entities.ModuleEntity objModule);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModule/DeleteModule", ReplyAction="http://tempuri.org/IModule/DeleteModuleResponse")]
        int DeleteModule(System.Nullable<int> IdModule);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModule/DeleteModule", ReplyAction="http://tempuri.org/IModule/DeleteModuleResponse")]
        System.Threading.Tasks.Task<int> DeleteModuleAsync(System.Nullable<int> IdModule);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IModuleChannel : SoftvMVC.SoftvService.IModule, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ModuleClient : System.ServiceModel.ClientBase<SoftvMVC.SoftvService.IModule>, SoftvMVC.SoftvService.IModule {
        
        public ModuleClient() {
        }
        
        public ModuleClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ModuleClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ModuleClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ModuleClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Softv.Entities.ModuleEntity GetModule(System.Nullable<int> IdModule) {
            return base.Channel.GetModule(IdModule);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.ModuleEntity> GetModuleAsync(System.Nullable<int> IdModule) {
            return base.Channel.GetModuleAsync(IdModule);
        }
        
        public Softv.Entities.ModuleEntity GetDeepModule(System.Nullable<int> IdModule) {
            return base.Channel.GetDeepModule(IdModule);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.ModuleEntity> GetDeepModuleAsync(System.Nullable<int> IdModule) {
            return base.Channel.GetDeepModuleAsync(IdModule);
        }
        
        public System.Collections.Generic.List<Softv.Entities.ModuleEntity> GetModuleList() {
            return base.Channel.GetModuleList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.ModuleEntity>> GetModuleListAsync() {
            return base.Channel.GetModuleListAsync();
        }
        
        public Globals.SoftvList<Softv.Entities.ModuleEntity> GetModulePagedList(int page, int pageSize) {
            return base.Channel.GetModulePagedList(page, pageSize);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.ModuleEntity>> GetModulePagedListAsync(int page, int pageSize) {
            return base.Channel.GetModulePagedListAsync(page, pageSize);
        }
        
        public Globals.SoftvList<Softv.Entities.ModuleEntity> GetModulePagedListXml(int page, int pageSize, string xml) {
            return base.Channel.GetModulePagedListXml(page, pageSize, xml);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.ModuleEntity>> GetModulePagedListXmlAsync(int page, int pageSize, string xml) {
            return base.Channel.GetModulePagedListXmlAsync(page, pageSize, xml);
        }
        
        public int AddModule(Softv.Entities.ModuleEntity objModule) {
            return base.Channel.AddModule(objModule);
        }
        
        public System.Threading.Tasks.Task<int> AddModuleAsync(Softv.Entities.ModuleEntity objModule) {
            return base.Channel.AddModuleAsync(objModule);
        }
        
        public int UpdateModule(Softv.Entities.ModuleEntity objModule) {
            return base.Channel.UpdateModule(objModule);
        }
        
        public System.Threading.Tasks.Task<int> UpdateModuleAsync(Softv.Entities.ModuleEntity objModule) {
            return base.Channel.UpdateModuleAsync(objModule);
        }
        
        public int DeleteModule(System.Nullable<int> IdModule) {
            return base.Channel.DeleteModule(IdModule);
        }
        
        public System.Threading.Tasks.Task<int> DeleteModuleAsync(System.Nullable<int> IdModule) {
            return base.Channel.DeleteModuleAsync(IdModule);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SoftvService.IPermiso")]
    public interface IPermiso {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPermiso/GetXmlPermiso", ReplyAction="http://tempuri.org/IPermiso/GetXmlPermisoResponse")]
        Globals.SoftvList<Softv.Entities.PermisoEntity> GetXmlPermiso(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPermiso/GetXmlPermiso", ReplyAction="http://tempuri.org/IPermiso/GetXmlPermisoResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.PermisoEntity>> GetXmlPermisoAsync(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPermiso/MargePermiso", ReplyAction="http://tempuri.org/IPermiso/MargePermisoResponse")]
        int MargePermiso(int BaseIdUser, string BaseRemoteIp, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPermiso/MargePermiso", ReplyAction="http://tempuri.org/IPermiso/MargePermisoResponse")]
        System.Threading.Tasks.Task<int> MargePermisoAsync(int BaseIdUser, string BaseRemoteIp, string xml);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPermisoChannel : SoftvMVC.SoftvService.IPermiso, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PermisoClient : System.ServiceModel.ClientBase<SoftvMVC.SoftvService.IPermiso>, SoftvMVC.SoftvService.IPermiso {
        
        public PermisoClient() {
        }
        
        public PermisoClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PermisoClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PermisoClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PermisoClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Globals.SoftvList<Softv.Entities.PermisoEntity> GetXmlPermiso(string xml) {
            return base.Channel.GetXmlPermiso(xml);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.PermisoEntity>> GetXmlPermisoAsync(string xml) {
            return base.Channel.GetXmlPermisoAsync(xml);
        }
        
        public int MargePermiso(int BaseIdUser, string BaseRemoteIp, string xml) {
            return base.Channel.MargePermiso(BaseIdUser, BaseRemoteIp, xml);
        }
        
        public System.Threading.Tasks.Task<int> MargePermisoAsync(int BaseIdUser, string BaseRemoteIp, string xml) {
            return base.Channel.MargePermisoAsync(BaseIdUser, BaseRemoteIp, xml);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SoftvService.IEncuesta")]
    public interface IEncuesta {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEncuesta/GetEncuesta", ReplyAction="http://tempuri.org/IEncuesta/GetEncuestaResponse")]
        Softv.Entities.EncuestaEntity GetEncuesta(System.Nullable<int> IdEncuesta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEncuesta/GetEncuesta", ReplyAction="http://tempuri.org/IEncuesta/GetEncuestaResponse")]
        System.Threading.Tasks.Task<Softv.Entities.EncuestaEntity> GetEncuestaAsync(System.Nullable<int> IdEncuesta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEncuesta/GetDeepEncuesta", ReplyAction="http://tempuri.org/IEncuesta/GetDeepEncuestaResponse")]
        Softv.Entities.EncuestaEntity GetDeepEncuesta(System.Nullable<int> IdEncuesta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEncuesta/GetDeepEncuesta", ReplyAction="http://tempuri.org/IEncuesta/GetDeepEncuestaResponse")]
        System.Threading.Tasks.Task<Softv.Entities.EncuestaEntity> GetDeepEncuestaAsync(System.Nullable<int> IdEncuesta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEncuesta/GetEncuestaList", ReplyAction="http://tempuri.org/IEncuesta/GetEncuestaListResponse")]
        System.Collections.Generic.List<Softv.Entities.EncuestaEntity> GetEncuestaList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEncuesta/GetEncuestaList", ReplyAction="http://tempuri.org/IEncuesta/GetEncuestaListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.EncuestaEntity>> GetEncuestaListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEncuesta/GetEncuestaPagedList", ReplyAction="http://tempuri.org/IEncuesta/GetEncuestaPagedListResponse")]
        Globals.SoftvList<Softv.Entities.EncuestaEntity> GetEncuestaPagedList(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEncuesta/GetEncuestaPagedList", ReplyAction="http://tempuri.org/IEncuesta/GetEncuestaPagedListResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.EncuestaEntity>> GetEncuestaPagedListAsync(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEncuesta/GetEncuestaPagedListXml", ReplyAction="http://tempuri.org/IEncuesta/GetEncuestaPagedListXmlResponse")]
        Globals.SoftvList<Softv.Entities.EncuestaEntity> GetEncuestaPagedListXml(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEncuesta/GetEncuestaPagedListXml", ReplyAction="http://tempuri.org/IEncuesta/GetEncuestaPagedListXmlResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.EncuestaEntity>> GetEncuestaPagedListXmlAsync(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEncuesta/AddEncuesta", ReplyAction="http://tempuri.org/IEncuesta/AddEncuestaResponse")]
        int AddEncuesta(string data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEncuesta/AddEncuesta", ReplyAction="http://tempuri.org/IEncuesta/AddEncuestaResponse")]
        System.Threading.Tasks.Task<int> AddEncuestaAsync(string data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEncuesta/UpdateEncuesta", ReplyAction="http://tempuri.org/IEncuesta/UpdateEncuestaResponse")]
        int UpdateEncuesta(string data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEncuesta/UpdateEncuesta", ReplyAction="http://tempuri.org/IEncuesta/UpdateEncuestaResponse")]
        System.Threading.Tasks.Task<int> UpdateEncuestaAsync(string data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEncuesta/DeleteEncuesta", ReplyAction="http://tempuri.org/IEncuesta/DeleteEncuestaResponse")]
        int DeleteEncuesta(System.Nullable<int> IdEncuesta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEncuesta/DeleteEncuesta", ReplyAction="http://tempuri.org/IEncuesta/DeleteEncuestaResponse")]
        System.Threading.Tasks.Task<int> DeleteEncuestaAsync(System.Nullable<int> IdEncuesta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEncuesta/AddEncuestaRel", ReplyAction="http://tempuri.org/IEncuesta/AddEncuestaRelResponse")]
        System.Nullable<int> AddEncuestaRel(Softv.Entities.EncuestaEntity lstEncuesta, System.Collections.Generic.List<Softv.Entities.PreguntaEntity> PreguntaAdd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEncuesta/AddEncuestaRel", ReplyAction="http://tempuri.org/IEncuesta/AddEncuestaRelResponse")]
        System.Threading.Tasks.Task<System.Nullable<int>> AddEncuestaRelAsync(Softv.Entities.EncuestaEntity lstEncuesta, System.Collections.Generic.List<Softv.Entities.PreguntaEntity> PreguntaAdd);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEncuestaChannel : SoftvMVC.SoftvService.IEncuesta, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EncuestaClient : System.ServiceModel.ClientBase<SoftvMVC.SoftvService.IEncuesta>, SoftvMVC.SoftvService.IEncuesta {
        
        public EncuestaClient() {
        }
        
        public EncuestaClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EncuestaClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EncuestaClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EncuestaClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Softv.Entities.EncuestaEntity GetEncuesta(System.Nullable<int> IdEncuesta) {
            return base.Channel.GetEncuesta(IdEncuesta);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.EncuestaEntity> GetEncuestaAsync(System.Nullable<int> IdEncuesta) {
            return base.Channel.GetEncuestaAsync(IdEncuesta);
        }
        
        public Softv.Entities.EncuestaEntity GetDeepEncuesta(System.Nullable<int> IdEncuesta) {
            return base.Channel.GetDeepEncuesta(IdEncuesta);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.EncuestaEntity> GetDeepEncuestaAsync(System.Nullable<int> IdEncuesta) {
            return base.Channel.GetDeepEncuestaAsync(IdEncuesta);
        }
        
        public System.Collections.Generic.List<Softv.Entities.EncuestaEntity> GetEncuestaList() {
            return base.Channel.GetEncuestaList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.EncuestaEntity>> GetEncuestaListAsync() {
            return base.Channel.GetEncuestaListAsync();
        }
        
        public Globals.SoftvList<Softv.Entities.EncuestaEntity> GetEncuestaPagedList(int page, int pageSize) {
            return base.Channel.GetEncuestaPagedList(page, pageSize);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.EncuestaEntity>> GetEncuestaPagedListAsync(int page, int pageSize) {
            return base.Channel.GetEncuestaPagedListAsync(page, pageSize);
        }
        
        public Globals.SoftvList<Softv.Entities.EncuestaEntity> GetEncuestaPagedListXml(int page, int pageSize, string xml) {
            return base.Channel.GetEncuestaPagedListXml(page, pageSize, xml);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.EncuestaEntity>> GetEncuestaPagedListXmlAsync(int page, int pageSize, string xml) {
            return base.Channel.GetEncuestaPagedListXmlAsync(page, pageSize, xml);
        }
        
        public int AddEncuesta(string data) {
            return base.Channel.AddEncuesta(data);
        }
        
        public System.Threading.Tasks.Task<int> AddEncuestaAsync(string data) {
            return base.Channel.AddEncuestaAsync(data);
        }
        
        public int UpdateEncuesta(string data) {
            return base.Channel.UpdateEncuesta(data);
        }
        
        public System.Threading.Tasks.Task<int> UpdateEncuestaAsync(string data) {
            return base.Channel.UpdateEncuestaAsync(data);
        }
        
        public int DeleteEncuesta(System.Nullable<int> IdEncuesta) {
            return base.Channel.DeleteEncuesta(IdEncuesta);
        }
        
        public System.Threading.Tasks.Task<int> DeleteEncuestaAsync(System.Nullable<int> IdEncuesta) {
            return base.Channel.DeleteEncuestaAsync(IdEncuesta);
        }
        
        public System.Nullable<int> AddEncuestaRel(Softv.Entities.EncuestaEntity lstEncuesta, System.Collections.Generic.List<Softv.Entities.PreguntaEntity> PreguntaAdd) {
            return base.Channel.AddEncuestaRel(lstEncuesta, PreguntaAdd);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<int>> AddEncuestaRelAsync(Softv.Entities.EncuestaEntity lstEncuesta, System.Collections.Generic.List<Softv.Entities.PreguntaEntity> PreguntaAdd) {
            return base.Channel.AddEncuestaRelAsync(lstEncuesta, PreguntaAdd);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SoftvService.IPregunta")]
    public interface IPregunta {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPregunta/GetPregunta", ReplyAction="http://tempuri.org/IPregunta/GetPreguntaResponse")]
        Softv.Entities.PreguntaEntity GetPregunta(System.Nullable<int> IdPregunta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPregunta/GetPregunta", ReplyAction="http://tempuri.org/IPregunta/GetPreguntaResponse")]
        System.Threading.Tasks.Task<Softv.Entities.PreguntaEntity> GetPreguntaAsync(System.Nullable<int> IdPregunta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPregunta/GetDeepPregunta", ReplyAction="http://tempuri.org/IPregunta/GetDeepPreguntaResponse")]
        Softv.Entities.PreguntaEntity GetDeepPregunta(System.Nullable<int> IdPregunta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPregunta/GetDeepPregunta", ReplyAction="http://tempuri.org/IPregunta/GetDeepPreguntaResponse")]
        System.Threading.Tasks.Task<Softv.Entities.PreguntaEntity> GetDeepPreguntaAsync(System.Nullable<int> IdPregunta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPregunta/GetPreguntaList", ReplyAction="http://tempuri.org/IPregunta/GetPreguntaListResponse")]
        System.Collections.Generic.List<Softv.Entities.PreguntaEntity> GetPreguntaList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPregunta/GetPreguntaList", ReplyAction="http://tempuri.org/IPregunta/GetPreguntaListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.PreguntaEntity>> GetPreguntaListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPregunta/GetPreguntaPagedList", ReplyAction="http://tempuri.org/IPregunta/GetPreguntaPagedListResponse")]
        Globals.SoftvList<Softv.Entities.PreguntaEntity> GetPreguntaPagedList(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPregunta/GetPreguntaPagedList", ReplyAction="http://tempuri.org/IPregunta/GetPreguntaPagedListResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.PreguntaEntity>> GetPreguntaPagedListAsync(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPregunta/GetPreguntaPagedListXml", ReplyAction="http://tempuri.org/IPregunta/GetPreguntaPagedListXmlResponse")]
        Globals.SoftvList<Softv.Entities.PreguntaEntity> GetPreguntaPagedListXml(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPregunta/GetPreguntaPagedListXml", ReplyAction="http://tempuri.org/IPregunta/GetPreguntaPagedListXmlResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.PreguntaEntity>> GetPreguntaPagedListXmlAsync(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPregunta/AddPregunta", ReplyAction="http://tempuri.org/IPregunta/AddPreguntaResponse")]
        int AddPregunta(Softv.Entities.PreguntaEntity objPregunta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPregunta/AddPregunta", ReplyAction="http://tempuri.org/IPregunta/AddPreguntaResponse")]
        System.Threading.Tasks.Task<int> AddPreguntaAsync(Softv.Entities.PreguntaEntity objPregunta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPregunta/UpdatePregunta", ReplyAction="http://tempuri.org/IPregunta/UpdatePreguntaResponse")]
        int UpdatePregunta(Softv.Entities.PreguntaEntity objPregunta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPregunta/UpdatePregunta", ReplyAction="http://tempuri.org/IPregunta/UpdatePreguntaResponse")]
        System.Threading.Tasks.Task<int> UpdatePreguntaAsync(Softv.Entities.PreguntaEntity objPregunta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPregunta/DeletePregunta", ReplyAction="http://tempuri.org/IPregunta/DeletePreguntaResponse")]
        int DeletePregunta(System.Nullable<int> IdPregunta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPregunta/DeletePregunta", ReplyAction="http://tempuri.org/IPregunta/DeletePreguntaResponse")]
        System.Threading.Tasks.Task<int> DeletePreguntaAsync(System.Nullable<int> IdPregunta);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPreguntaChannel : SoftvMVC.SoftvService.IPregunta, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PreguntaClient : System.ServiceModel.ClientBase<SoftvMVC.SoftvService.IPregunta>, SoftvMVC.SoftvService.IPregunta {
        
        public PreguntaClient() {
        }
        
        public PreguntaClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PreguntaClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PreguntaClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PreguntaClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Softv.Entities.PreguntaEntity GetPregunta(System.Nullable<int> IdPregunta) {
            return base.Channel.GetPregunta(IdPregunta);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.PreguntaEntity> GetPreguntaAsync(System.Nullable<int> IdPregunta) {
            return base.Channel.GetPreguntaAsync(IdPregunta);
        }
        
        public Softv.Entities.PreguntaEntity GetDeepPregunta(System.Nullable<int> IdPregunta) {
            return base.Channel.GetDeepPregunta(IdPregunta);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.PreguntaEntity> GetDeepPreguntaAsync(System.Nullable<int> IdPregunta) {
            return base.Channel.GetDeepPreguntaAsync(IdPregunta);
        }
        
        public System.Collections.Generic.List<Softv.Entities.PreguntaEntity> GetPreguntaList() {
            return base.Channel.GetPreguntaList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.PreguntaEntity>> GetPreguntaListAsync() {
            return base.Channel.GetPreguntaListAsync();
        }
        
        public Globals.SoftvList<Softv.Entities.PreguntaEntity> GetPreguntaPagedList(int page, int pageSize) {
            return base.Channel.GetPreguntaPagedList(page, pageSize);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.PreguntaEntity>> GetPreguntaPagedListAsync(int page, int pageSize) {
            return base.Channel.GetPreguntaPagedListAsync(page, pageSize);
        }
        
        public Globals.SoftvList<Softv.Entities.PreguntaEntity> GetPreguntaPagedListXml(int page, int pageSize, string xml) {
            return base.Channel.GetPreguntaPagedListXml(page, pageSize, xml);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.PreguntaEntity>> GetPreguntaPagedListXmlAsync(int page, int pageSize, string xml) {
            return base.Channel.GetPreguntaPagedListXmlAsync(page, pageSize, xml);
        }
        
        public int AddPregunta(Softv.Entities.PreguntaEntity objPregunta) {
            return base.Channel.AddPregunta(objPregunta);
        }
        
        public System.Threading.Tasks.Task<int> AddPreguntaAsync(Softv.Entities.PreguntaEntity objPregunta) {
            return base.Channel.AddPreguntaAsync(objPregunta);
        }
        
        public int UpdatePregunta(Softv.Entities.PreguntaEntity objPregunta) {
            return base.Channel.UpdatePregunta(objPregunta);
        }
        
        public System.Threading.Tasks.Task<int> UpdatePreguntaAsync(Softv.Entities.PreguntaEntity objPregunta) {
            return base.Channel.UpdatePreguntaAsync(objPregunta);
        }
        
        public int DeletePregunta(System.Nullable<int> IdPregunta) {
            return base.Channel.DeletePregunta(IdPregunta);
        }
        
        public System.Threading.Tasks.Task<int> DeletePreguntaAsync(System.Nullable<int> IdPregunta) {
            return base.Channel.DeletePreguntaAsync(IdPregunta);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SoftvService.ITipoPreguntas")]
    public interface ITipoPreguntas {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoPreguntas/GetTipoPreguntas", ReplyAction="http://tempuri.org/ITipoPreguntas/GetTipoPreguntasResponse")]
        Softv.Entities.TipoPreguntasEntity GetTipoPreguntas(System.Nullable<int> IdTipoPregunta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoPreguntas/GetTipoPreguntas", ReplyAction="http://tempuri.org/ITipoPreguntas/GetTipoPreguntasResponse")]
        System.Threading.Tasks.Task<Softv.Entities.TipoPreguntasEntity> GetTipoPreguntasAsync(System.Nullable<int> IdTipoPregunta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoPreguntas/GetDeepTipoPreguntas", ReplyAction="http://tempuri.org/ITipoPreguntas/GetDeepTipoPreguntasResponse")]
        Softv.Entities.TipoPreguntasEntity GetDeepTipoPreguntas(System.Nullable<int> IdTipoPregunta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoPreguntas/GetDeepTipoPreguntas", ReplyAction="http://tempuri.org/ITipoPreguntas/GetDeepTipoPreguntasResponse")]
        System.Threading.Tasks.Task<Softv.Entities.TipoPreguntasEntity> GetDeepTipoPreguntasAsync(System.Nullable<int> IdTipoPregunta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoPreguntas/GetTipoPreguntasList", ReplyAction="http://tempuri.org/ITipoPreguntas/GetTipoPreguntasListResponse")]
        System.Collections.Generic.List<Softv.Entities.TipoPreguntasEntity> GetTipoPreguntasList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoPreguntas/GetTipoPreguntasList", ReplyAction="http://tempuri.org/ITipoPreguntas/GetTipoPreguntasListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.TipoPreguntasEntity>> GetTipoPreguntasListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoPreguntas/GetTipoPreguntasPagedList", ReplyAction="http://tempuri.org/ITipoPreguntas/GetTipoPreguntasPagedListResponse")]
        Globals.SoftvList<Softv.Entities.TipoPreguntasEntity> GetTipoPreguntasPagedList(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoPreguntas/GetTipoPreguntasPagedList", ReplyAction="http://tempuri.org/ITipoPreguntas/GetTipoPreguntasPagedListResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.TipoPreguntasEntity>> GetTipoPreguntasPagedListAsync(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoPreguntas/GetTipoPreguntasPagedListXml", ReplyAction="http://tempuri.org/ITipoPreguntas/GetTipoPreguntasPagedListXmlResponse")]
        Globals.SoftvList<Softv.Entities.TipoPreguntasEntity> GetTipoPreguntasPagedListXml(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoPreguntas/GetTipoPreguntasPagedListXml", ReplyAction="http://tempuri.org/ITipoPreguntas/GetTipoPreguntasPagedListXmlResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.TipoPreguntasEntity>> GetTipoPreguntasPagedListXmlAsync(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoPreguntas/AddTipoPreguntas", ReplyAction="http://tempuri.org/ITipoPreguntas/AddTipoPreguntasResponse")]
        int AddTipoPreguntas(Softv.Entities.TipoPreguntasEntity objTipoPreguntas);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoPreguntas/AddTipoPreguntas", ReplyAction="http://tempuri.org/ITipoPreguntas/AddTipoPreguntasResponse")]
        System.Threading.Tasks.Task<int> AddTipoPreguntasAsync(Softv.Entities.TipoPreguntasEntity objTipoPreguntas);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoPreguntas/UpdateTipoPreguntas", ReplyAction="http://tempuri.org/ITipoPreguntas/UpdateTipoPreguntasResponse")]
        int UpdateTipoPreguntas(Softv.Entities.TipoPreguntasEntity objTipoPreguntas);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoPreguntas/UpdateTipoPreguntas", ReplyAction="http://tempuri.org/ITipoPreguntas/UpdateTipoPreguntasResponse")]
        System.Threading.Tasks.Task<int> UpdateTipoPreguntasAsync(Softv.Entities.TipoPreguntasEntity objTipoPreguntas);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoPreguntas/DeleteTipoPreguntas", ReplyAction="http://tempuri.org/ITipoPreguntas/DeleteTipoPreguntasResponse")]
        int DeleteTipoPreguntas(System.Nullable<int> IdTipoPregunta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoPreguntas/DeleteTipoPreguntas", ReplyAction="http://tempuri.org/ITipoPreguntas/DeleteTipoPreguntasResponse")]
        System.Threading.Tasks.Task<int> DeleteTipoPreguntasAsync(System.Nullable<int> IdTipoPregunta);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITipoPreguntasChannel : SoftvMVC.SoftvService.ITipoPreguntas, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TipoPreguntasClient : System.ServiceModel.ClientBase<SoftvMVC.SoftvService.ITipoPreguntas>, SoftvMVC.SoftvService.ITipoPreguntas {
        
        public TipoPreguntasClient() {
        }
        
        public TipoPreguntasClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TipoPreguntasClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TipoPreguntasClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TipoPreguntasClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Softv.Entities.TipoPreguntasEntity GetTipoPreguntas(System.Nullable<int> IdTipoPregunta) {
            return base.Channel.GetTipoPreguntas(IdTipoPregunta);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.TipoPreguntasEntity> GetTipoPreguntasAsync(System.Nullable<int> IdTipoPregunta) {
            return base.Channel.GetTipoPreguntasAsync(IdTipoPregunta);
        }
        
        public Softv.Entities.TipoPreguntasEntity GetDeepTipoPreguntas(System.Nullable<int> IdTipoPregunta) {
            return base.Channel.GetDeepTipoPreguntas(IdTipoPregunta);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.TipoPreguntasEntity> GetDeepTipoPreguntasAsync(System.Nullable<int> IdTipoPregunta) {
            return base.Channel.GetDeepTipoPreguntasAsync(IdTipoPregunta);
        }
        
        public System.Collections.Generic.List<Softv.Entities.TipoPreguntasEntity> GetTipoPreguntasList() {
            return base.Channel.GetTipoPreguntasList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.TipoPreguntasEntity>> GetTipoPreguntasListAsync() {
            return base.Channel.GetTipoPreguntasListAsync();
        }
        
        public Globals.SoftvList<Softv.Entities.TipoPreguntasEntity> GetTipoPreguntasPagedList(int page, int pageSize) {
            return base.Channel.GetTipoPreguntasPagedList(page, pageSize);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.TipoPreguntasEntity>> GetTipoPreguntasPagedListAsync(int page, int pageSize) {
            return base.Channel.GetTipoPreguntasPagedListAsync(page, pageSize);
        }
        
        public Globals.SoftvList<Softv.Entities.TipoPreguntasEntity> GetTipoPreguntasPagedListXml(int page, int pageSize, string xml) {
            return base.Channel.GetTipoPreguntasPagedListXml(page, pageSize, xml);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.TipoPreguntasEntity>> GetTipoPreguntasPagedListXmlAsync(int page, int pageSize, string xml) {
            return base.Channel.GetTipoPreguntasPagedListXmlAsync(page, pageSize, xml);
        }
        
        public int AddTipoPreguntas(Softv.Entities.TipoPreguntasEntity objTipoPreguntas) {
            return base.Channel.AddTipoPreguntas(objTipoPreguntas);
        }
        
        public System.Threading.Tasks.Task<int> AddTipoPreguntasAsync(Softv.Entities.TipoPreguntasEntity objTipoPreguntas) {
            return base.Channel.AddTipoPreguntasAsync(objTipoPreguntas);
        }
        
        public int UpdateTipoPreguntas(Softv.Entities.TipoPreguntasEntity objTipoPreguntas) {
            return base.Channel.UpdateTipoPreguntas(objTipoPreguntas);
        }
        
        public System.Threading.Tasks.Task<int> UpdateTipoPreguntasAsync(Softv.Entities.TipoPreguntasEntity objTipoPreguntas) {
            return base.Channel.UpdateTipoPreguntasAsync(objTipoPreguntas);
        }
        
        public int DeleteTipoPreguntas(System.Nullable<int> IdTipoPregunta) {
            return base.Channel.DeleteTipoPreguntas(IdTipoPregunta);
        }
        
        public System.Threading.Tasks.Task<int> DeleteTipoPreguntasAsync(System.Nullable<int> IdTipoPregunta) {
            return base.Channel.DeleteTipoPreguntasAsync(IdTipoPregunta);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SoftvService.IRelEncuestaClientes")]
    public interface IRelEncuestaClientes {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelEncuestaClientes/GetRelEncuestaClientes", ReplyAction="http://tempuri.org/IRelEncuestaClientes/GetRelEncuestaClientesResponse")]
        Softv.Entities.RelEncuestaClientesEntity GetRelEncuestaClientes(System.Nullable<int> IdProceso);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelEncuestaClientes/GetRelEncuestaClientes", ReplyAction="http://tempuri.org/IRelEncuestaClientes/GetRelEncuestaClientesResponse")]
        System.Threading.Tasks.Task<Softv.Entities.RelEncuestaClientesEntity> GetRelEncuestaClientesAsync(System.Nullable<int> IdProceso);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelEncuestaClientes/GetDeepRelEncuestaClientes", ReplyAction="http://tempuri.org/IRelEncuestaClientes/GetDeepRelEncuestaClientesResponse")]
        Softv.Entities.RelEncuestaClientesEntity GetDeepRelEncuestaClientes(System.Nullable<int> IdProceso);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelEncuestaClientes/GetDeepRelEncuestaClientes", ReplyAction="http://tempuri.org/IRelEncuestaClientes/GetDeepRelEncuestaClientesResponse")]
        System.Threading.Tasks.Task<Softv.Entities.RelEncuestaClientesEntity> GetDeepRelEncuestaClientesAsync(System.Nullable<int> IdProceso);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelEncuestaClientes/GetRelEncuestaClientesList", ReplyAction="http://tempuri.org/IRelEncuestaClientes/GetRelEncuestaClientesListResponse")]
        System.Collections.Generic.List<Softv.Entities.RelEncuestaClientesEntity> GetRelEncuestaClientesList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelEncuestaClientes/GetRelEncuestaClientesList", ReplyAction="http://tempuri.org/IRelEncuestaClientes/GetRelEncuestaClientesListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.RelEncuestaClientesEntity>> GetRelEncuestaClientesListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelEncuestaClientes/GetRelEncuestaClientesPagedList", ReplyAction="http://tempuri.org/IRelEncuestaClientes/GetRelEncuestaClientesPagedListResponse")]
        Globals.SoftvList<Softv.Entities.RelEncuestaClientesEntity> GetRelEncuestaClientesPagedList(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelEncuestaClientes/GetRelEncuestaClientesPagedList", ReplyAction="http://tempuri.org/IRelEncuestaClientes/GetRelEncuestaClientesPagedListResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.RelEncuestaClientesEntity>> GetRelEncuestaClientesPagedListAsync(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelEncuestaClientes/GetRelEncuestaClientesPagedListXml", ReplyAction="http://tempuri.org/IRelEncuestaClientes/GetRelEncuestaClientesPagedListXmlRespons" +
            "e")]
        Globals.SoftvList<Softv.Entities.RelEncuestaClientesEntity> GetRelEncuestaClientesPagedListXml(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelEncuestaClientes/GetRelEncuestaClientesPagedListXml", ReplyAction="http://tempuri.org/IRelEncuestaClientes/GetRelEncuestaClientesPagedListXmlRespons" +
            "e")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.RelEncuestaClientesEntity>> GetRelEncuestaClientesPagedListXmlAsync(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelEncuestaClientes/AddRelEncuestaClientes", ReplyAction="http://tempuri.org/IRelEncuestaClientes/AddRelEncuestaClientesResponse")]
        int AddRelEncuestaClientes(Softv.Entities.RelEncuestaClientesEntity objRelEncuestaClientes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelEncuestaClientes/AddRelEncuestaClientes", ReplyAction="http://tempuri.org/IRelEncuestaClientes/AddRelEncuestaClientesResponse")]
        System.Threading.Tasks.Task<int> AddRelEncuestaClientesAsync(Softv.Entities.RelEncuestaClientesEntity objRelEncuestaClientes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelEncuestaClientes/UpdateRelEncuestaClientes", ReplyAction="http://tempuri.org/IRelEncuestaClientes/UpdateRelEncuestaClientesResponse")]
        int UpdateRelEncuestaClientes(Softv.Entities.RelEncuestaClientesEntity objRelEncuestaClientes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelEncuestaClientes/UpdateRelEncuestaClientes", ReplyAction="http://tempuri.org/IRelEncuestaClientes/UpdateRelEncuestaClientesResponse")]
        System.Threading.Tasks.Task<int> UpdateRelEncuestaClientesAsync(Softv.Entities.RelEncuestaClientesEntity objRelEncuestaClientes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelEncuestaClientes/DeleteRelEncuestaClientes", ReplyAction="http://tempuri.org/IRelEncuestaClientes/DeleteRelEncuestaClientesResponse")]
        int DeleteRelEncuestaClientes(System.Nullable<int> IdProceso);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelEncuestaClientes/DeleteRelEncuestaClientes", ReplyAction="http://tempuri.org/IRelEncuestaClientes/DeleteRelEncuestaClientesResponse")]
        System.Threading.Tasks.Task<int> DeleteRelEncuestaClientesAsync(System.Nullable<int> IdProceso);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRelEncuestaClientesChannel : SoftvMVC.SoftvService.IRelEncuestaClientes, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RelEncuestaClientesClient : System.ServiceModel.ClientBase<SoftvMVC.SoftvService.IRelEncuestaClientes>, SoftvMVC.SoftvService.IRelEncuestaClientes {
        
        public RelEncuestaClientesClient() {
        }
        
        public RelEncuestaClientesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RelEncuestaClientesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RelEncuestaClientesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RelEncuestaClientesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Softv.Entities.RelEncuestaClientesEntity GetRelEncuestaClientes(System.Nullable<int> IdProceso) {
            return base.Channel.GetRelEncuestaClientes(IdProceso);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.RelEncuestaClientesEntity> GetRelEncuestaClientesAsync(System.Nullable<int> IdProceso) {
            return base.Channel.GetRelEncuestaClientesAsync(IdProceso);
        }
        
        public Softv.Entities.RelEncuestaClientesEntity GetDeepRelEncuestaClientes(System.Nullable<int> IdProceso) {
            return base.Channel.GetDeepRelEncuestaClientes(IdProceso);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.RelEncuestaClientesEntity> GetDeepRelEncuestaClientesAsync(System.Nullable<int> IdProceso) {
            return base.Channel.GetDeepRelEncuestaClientesAsync(IdProceso);
        }
        
        public System.Collections.Generic.List<Softv.Entities.RelEncuestaClientesEntity> GetRelEncuestaClientesList() {
            return base.Channel.GetRelEncuestaClientesList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.RelEncuestaClientesEntity>> GetRelEncuestaClientesListAsync() {
            return base.Channel.GetRelEncuestaClientesListAsync();
        }
        
        public Globals.SoftvList<Softv.Entities.RelEncuestaClientesEntity> GetRelEncuestaClientesPagedList(int page, int pageSize) {
            return base.Channel.GetRelEncuestaClientesPagedList(page, pageSize);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.RelEncuestaClientesEntity>> GetRelEncuestaClientesPagedListAsync(int page, int pageSize) {
            return base.Channel.GetRelEncuestaClientesPagedListAsync(page, pageSize);
        }
        
        public Globals.SoftvList<Softv.Entities.RelEncuestaClientesEntity> GetRelEncuestaClientesPagedListXml(int page, int pageSize, string xml) {
            return base.Channel.GetRelEncuestaClientesPagedListXml(page, pageSize, xml);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.RelEncuestaClientesEntity>> GetRelEncuestaClientesPagedListXmlAsync(int page, int pageSize, string xml) {
            return base.Channel.GetRelEncuestaClientesPagedListXmlAsync(page, pageSize, xml);
        }
        
        public int AddRelEncuestaClientes(Softv.Entities.RelEncuestaClientesEntity objRelEncuestaClientes) {
            return base.Channel.AddRelEncuestaClientes(objRelEncuestaClientes);
        }
        
        public System.Threading.Tasks.Task<int> AddRelEncuestaClientesAsync(Softv.Entities.RelEncuestaClientesEntity objRelEncuestaClientes) {
            return base.Channel.AddRelEncuestaClientesAsync(objRelEncuestaClientes);
        }
        
        public int UpdateRelEncuestaClientes(Softv.Entities.RelEncuestaClientesEntity objRelEncuestaClientes) {
            return base.Channel.UpdateRelEncuestaClientes(objRelEncuestaClientes);
        }
        
        public System.Threading.Tasks.Task<int> UpdateRelEncuestaClientesAsync(Softv.Entities.RelEncuestaClientesEntity objRelEncuestaClientes) {
            return base.Channel.UpdateRelEncuestaClientesAsync(objRelEncuestaClientes);
        }
        
        public int DeleteRelEncuestaClientes(System.Nullable<int> IdProceso) {
            return base.Channel.DeleteRelEncuestaClientes(IdProceso);
        }
        
        public System.Threading.Tasks.Task<int> DeleteRelEncuestaClientesAsync(System.Nullable<int> IdProceso) {
            return base.Channel.DeleteRelEncuestaClientesAsync(IdProceso);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SoftvService.IRelPreguntaOpcMults")]
    public interface IRelPreguntaOpcMults {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelPreguntaOpcMults/GetRelPreguntaOpcMults", ReplyAction="http://tempuri.org/IRelPreguntaOpcMults/GetRelPreguntaOpcMultsResponse")]
        Softv.Entities.RelPreguntaOpcMultsEntity GetRelPreguntaOpcMults(System.Nullable<int> IdPregunta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelPreguntaOpcMults/GetRelPreguntaOpcMults", ReplyAction="http://tempuri.org/IRelPreguntaOpcMults/GetRelPreguntaOpcMultsResponse")]
        System.Threading.Tasks.Task<Softv.Entities.RelPreguntaOpcMultsEntity> GetRelPreguntaOpcMultsAsync(System.Nullable<int> IdPregunta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelPreguntaOpcMults/GetDeepRelPreguntaOpcMults", ReplyAction="http://tempuri.org/IRelPreguntaOpcMults/GetDeepRelPreguntaOpcMultsResponse")]
        Softv.Entities.RelPreguntaOpcMultsEntity GetDeepRelPreguntaOpcMults(System.Nullable<int> IdPregunta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelPreguntaOpcMults/GetDeepRelPreguntaOpcMults", ReplyAction="http://tempuri.org/IRelPreguntaOpcMults/GetDeepRelPreguntaOpcMultsResponse")]
        System.Threading.Tasks.Task<Softv.Entities.RelPreguntaOpcMultsEntity> GetDeepRelPreguntaOpcMultsAsync(System.Nullable<int> IdPregunta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelPreguntaOpcMults/GetRelPreguntaOpcMultsList", ReplyAction="http://tempuri.org/IRelPreguntaOpcMults/GetRelPreguntaOpcMultsListResponse")]
        System.Collections.Generic.List<Softv.Entities.RelPreguntaOpcMultsEntity> GetRelPreguntaOpcMultsList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelPreguntaOpcMults/GetRelPreguntaOpcMultsList", ReplyAction="http://tempuri.org/IRelPreguntaOpcMults/GetRelPreguntaOpcMultsListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.RelPreguntaOpcMultsEntity>> GetRelPreguntaOpcMultsListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelPreguntaOpcMults/GetRelPreguntaOpcMultsPagedList", ReplyAction="http://tempuri.org/IRelPreguntaOpcMults/GetRelPreguntaOpcMultsPagedListResponse")]
        Globals.SoftvList<Softv.Entities.RelPreguntaOpcMultsEntity> GetRelPreguntaOpcMultsPagedList(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelPreguntaOpcMults/GetRelPreguntaOpcMultsPagedList", ReplyAction="http://tempuri.org/IRelPreguntaOpcMults/GetRelPreguntaOpcMultsPagedListResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.RelPreguntaOpcMultsEntity>> GetRelPreguntaOpcMultsPagedListAsync(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelPreguntaOpcMults/GetRelPreguntaOpcMultsPagedListXml", ReplyAction="http://tempuri.org/IRelPreguntaOpcMults/GetRelPreguntaOpcMultsPagedListXmlRespons" +
            "e")]
        Globals.SoftvList<Softv.Entities.RelPreguntaOpcMultsEntity> GetRelPreguntaOpcMultsPagedListXml(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelPreguntaOpcMults/GetRelPreguntaOpcMultsPagedListXml", ReplyAction="http://tempuri.org/IRelPreguntaOpcMults/GetRelPreguntaOpcMultsPagedListXmlRespons" +
            "e")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.RelPreguntaOpcMultsEntity>> GetRelPreguntaOpcMultsPagedListXmlAsync(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelPreguntaOpcMults/AddRelPreguntaOpcMults", ReplyAction="http://tempuri.org/IRelPreguntaOpcMults/AddRelPreguntaOpcMultsResponse")]
        int AddRelPreguntaOpcMults(Softv.Entities.RelPreguntaOpcMultsEntity objRelPreguntaOpcMults);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelPreguntaOpcMults/AddRelPreguntaOpcMults", ReplyAction="http://tempuri.org/IRelPreguntaOpcMults/AddRelPreguntaOpcMultsResponse")]
        System.Threading.Tasks.Task<int> AddRelPreguntaOpcMultsAsync(Softv.Entities.RelPreguntaOpcMultsEntity objRelPreguntaOpcMults);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelPreguntaOpcMults/UpdateRelPreguntaOpcMults", ReplyAction="http://tempuri.org/IRelPreguntaOpcMults/UpdateRelPreguntaOpcMultsResponse")]
        int UpdateRelPreguntaOpcMults(Softv.Entities.RelPreguntaOpcMultsEntity objRelPreguntaOpcMults);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelPreguntaOpcMults/UpdateRelPreguntaOpcMults", ReplyAction="http://tempuri.org/IRelPreguntaOpcMults/UpdateRelPreguntaOpcMultsResponse")]
        System.Threading.Tasks.Task<int> UpdateRelPreguntaOpcMultsAsync(Softv.Entities.RelPreguntaOpcMultsEntity objRelPreguntaOpcMults);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelPreguntaOpcMults/DeleteRelPreguntaOpcMults", ReplyAction="http://tempuri.org/IRelPreguntaOpcMults/DeleteRelPreguntaOpcMultsResponse")]
        int DeleteRelPreguntaOpcMults(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> IdPregunta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelPreguntaOpcMults/DeleteRelPreguntaOpcMults", ReplyAction="http://tempuri.org/IRelPreguntaOpcMults/DeleteRelPreguntaOpcMultsResponse")]
        System.Threading.Tasks.Task<int> DeleteRelPreguntaOpcMultsAsync(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> IdPregunta);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRelPreguntaOpcMultsChannel : SoftvMVC.SoftvService.IRelPreguntaOpcMults, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RelPreguntaOpcMultsClient : System.ServiceModel.ClientBase<SoftvMVC.SoftvService.IRelPreguntaOpcMults>, SoftvMVC.SoftvService.IRelPreguntaOpcMults {
        
        public RelPreguntaOpcMultsClient() {
        }
        
        public RelPreguntaOpcMultsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RelPreguntaOpcMultsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RelPreguntaOpcMultsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RelPreguntaOpcMultsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Softv.Entities.RelPreguntaOpcMultsEntity GetRelPreguntaOpcMults(System.Nullable<int> IdPregunta) {
            return base.Channel.GetRelPreguntaOpcMults(IdPregunta);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.RelPreguntaOpcMultsEntity> GetRelPreguntaOpcMultsAsync(System.Nullable<int> IdPregunta) {
            return base.Channel.GetRelPreguntaOpcMultsAsync(IdPregunta);
        }
        
        public Softv.Entities.RelPreguntaOpcMultsEntity GetDeepRelPreguntaOpcMults(System.Nullable<int> IdPregunta) {
            return base.Channel.GetDeepRelPreguntaOpcMults(IdPregunta);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.RelPreguntaOpcMultsEntity> GetDeepRelPreguntaOpcMultsAsync(System.Nullable<int> IdPregunta) {
            return base.Channel.GetDeepRelPreguntaOpcMultsAsync(IdPregunta);
        }
        
        public System.Collections.Generic.List<Softv.Entities.RelPreguntaOpcMultsEntity> GetRelPreguntaOpcMultsList() {
            return base.Channel.GetRelPreguntaOpcMultsList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.RelPreguntaOpcMultsEntity>> GetRelPreguntaOpcMultsListAsync() {
            return base.Channel.GetRelPreguntaOpcMultsListAsync();
        }
        
        public Globals.SoftvList<Softv.Entities.RelPreguntaOpcMultsEntity> GetRelPreguntaOpcMultsPagedList(int page, int pageSize) {
            return base.Channel.GetRelPreguntaOpcMultsPagedList(page, pageSize);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.RelPreguntaOpcMultsEntity>> GetRelPreguntaOpcMultsPagedListAsync(int page, int pageSize) {
            return base.Channel.GetRelPreguntaOpcMultsPagedListAsync(page, pageSize);
        }
        
        public Globals.SoftvList<Softv.Entities.RelPreguntaOpcMultsEntity> GetRelPreguntaOpcMultsPagedListXml(int page, int pageSize, string xml) {
            return base.Channel.GetRelPreguntaOpcMultsPagedListXml(page, pageSize, xml);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.RelPreguntaOpcMultsEntity>> GetRelPreguntaOpcMultsPagedListXmlAsync(int page, int pageSize, string xml) {
            return base.Channel.GetRelPreguntaOpcMultsPagedListXmlAsync(page, pageSize, xml);
        }
        
        public int AddRelPreguntaOpcMults(Softv.Entities.RelPreguntaOpcMultsEntity objRelPreguntaOpcMults) {
            return base.Channel.AddRelPreguntaOpcMults(objRelPreguntaOpcMults);
        }
        
        public System.Threading.Tasks.Task<int> AddRelPreguntaOpcMultsAsync(Softv.Entities.RelPreguntaOpcMultsEntity objRelPreguntaOpcMults) {
            return base.Channel.AddRelPreguntaOpcMultsAsync(objRelPreguntaOpcMults);
        }
        
        public int UpdateRelPreguntaOpcMults(Softv.Entities.RelPreguntaOpcMultsEntity objRelPreguntaOpcMults) {
            return base.Channel.UpdateRelPreguntaOpcMults(objRelPreguntaOpcMults);
        }
        
        public System.Threading.Tasks.Task<int> UpdateRelPreguntaOpcMultsAsync(Softv.Entities.RelPreguntaOpcMultsEntity objRelPreguntaOpcMults) {
            return base.Channel.UpdateRelPreguntaOpcMultsAsync(objRelPreguntaOpcMults);
        }
        
        public int DeleteRelPreguntaOpcMults(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> IdPregunta) {
            return base.Channel.DeleteRelPreguntaOpcMults(BaseRemoteIp, BaseIdUser, IdPregunta);
        }
        
        public System.Threading.Tasks.Task<int> DeleteRelPreguntaOpcMultsAsync(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> IdPregunta) {
            return base.Channel.DeleteRelPreguntaOpcMultsAsync(BaseRemoteIp, BaseIdUser, IdPregunta);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SoftvService.IRelPreguntaEncuestas")]
    public interface IRelPreguntaEncuestas {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelPreguntaEncuestas/GetRelPreguntaEncuestas", ReplyAction="http://tempuri.org/IRelPreguntaEncuestas/GetRelPreguntaEncuestasResponse")]
        Softv.Entities.RelPreguntaEncuestasEntity GetRelPreguntaEncuestas(System.Nullable<int> IdPregunta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelPreguntaEncuestas/GetRelPreguntaEncuestas", ReplyAction="http://tempuri.org/IRelPreguntaEncuestas/GetRelPreguntaEncuestasResponse")]
        System.Threading.Tasks.Task<Softv.Entities.RelPreguntaEncuestasEntity> GetRelPreguntaEncuestasAsync(System.Nullable<int> IdPregunta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelPreguntaEncuestas/GetDeepRelPreguntaEncuestas", ReplyAction="http://tempuri.org/IRelPreguntaEncuestas/GetDeepRelPreguntaEncuestasResponse")]
        Softv.Entities.RelPreguntaEncuestasEntity GetDeepRelPreguntaEncuestas(System.Nullable<int> IdPregunta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelPreguntaEncuestas/GetDeepRelPreguntaEncuestas", ReplyAction="http://tempuri.org/IRelPreguntaEncuestas/GetDeepRelPreguntaEncuestasResponse")]
        System.Threading.Tasks.Task<Softv.Entities.RelPreguntaEncuestasEntity> GetDeepRelPreguntaEncuestasAsync(System.Nullable<int> IdPregunta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelPreguntaEncuestas/GetRelPreguntaEncuestasList", ReplyAction="http://tempuri.org/IRelPreguntaEncuestas/GetRelPreguntaEncuestasListResponse")]
        System.Collections.Generic.List<Softv.Entities.RelPreguntaEncuestasEntity> GetRelPreguntaEncuestasList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelPreguntaEncuestas/GetRelPreguntaEncuestasList", ReplyAction="http://tempuri.org/IRelPreguntaEncuestas/GetRelPreguntaEncuestasListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.RelPreguntaEncuestasEntity>> GetRelPreguntaEncuestasListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelPreguntaEncuestas/GetRelPreguntaEncuestasPagedList", ReplyAction="http://tempuri.org/IRelPreguntaEncuestas/GetRelPreguntaEncuestasPagedListResponse" +
            "")]
        Globals.SoftvList<Softv.Entities.RelPreguntaEncuestasEntity> GetRelPreguntaEncuestasPagedList(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelPreguntaEncuestas/GetRelPreguntaEncuestasPagedList", ReplyAction="http://tempuri.org/IRelPreguntaEncuestas/GetRelPreguntaEncuestasPagedListResponse" +
            "")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.RelPreguntaEncuestasEntity>> GetRelPreguntaEncuestasPagedListAsync(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelPreguntaEncuestas/GetRelPreguntaEncuestasPagedListXml", ReplyAction="http://tempuri.org/IRelPreguntaEncuestas/GetRelPreguntaEncuestasPagedListXmlRespo" +
            "nse")]
        Globals.SoftvList<Softv.Entities.RelPreguntaEncuestasEntity> GetRelPreguntaEncuestasPagedListXml(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelPreguntaEncuestas/GetRelPreguntaEncuestasPagedListXml", ReplyAction="http://tempuri.org/IRelPreguntaEncuestas/GetRelPreguntaEncuestasPagedListXmlRespo" +
            "nse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.RelPreguntaEncuestasEntity>> GetRelPreguntaEncuestasPagedListXmlAsync(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelPreguntaEncuestas/AddRelPreguntaEncuestas", ReplyAction="http://tempuri.org/IRelPreguntaEncuestas/AddRelPreguntaEncuestasResponse")]
        int AddRelPreguntaEncuestas(Softv.Entities.RelPreguntaEncuestasEntity objRelPreguntaEncuestas);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelPreguntaEncuestas/AddRelPreguntaEncuestas", ReplyAction="http://tempuri.org/IRelPreguntaEncuestas/AddRelPreguntaEncuestasResponse")]
        System.Threading.Tasks.Task<int> AddRelPreguntaEncuestasAsync(Softv.Entities.RelPreguntaEncuestasEntity objRelPreguntaEncuestas);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelPreguntaEncuestas/UpdateRelPreguntaEncuestas", ReplyAction="http://tempuri.org/IRelPreguntaEncuestas/UpdateRelPreguntaEncuestasResponse")]
        int UpdateRelPreguntaEncuestas(Softv.Entities.RelPreguntaEncuestasEntity objRelPreguntaEncuestas);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelPreguntaEncuestas/UpdateRelPreguntaEncuestas", ReplyAction="http://tempuri.org/IRelPreguntaEncuestas/UpdateRelPreguntaEncuestasResponse")]
        System.Threading.Tasks.Task<int> UpdateRelPreguntaEncuestasAsync(Softv.Entities.RelPreguntaEncuestasEntity objRelPreguntaEncuestas);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelPreguntaEncuestas/DeleteRelPreguntaEncuestas", ReplyAction="http://tempuri.org/IRelPreguntaEncuestas/DeleteRelPreguntaEncuestasResponse")]
        int DeleteRelPreguntaEncuestas(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> IdPregunta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelPreguntaEncuestas/DeleteRelPreguntaEncuestas", ReplyAction="http://tempuri.org/IRelPreguntaEncuestas/DeleteRelPreguntaEncuestasResponse")]
        System.Threading.Tasks.Task<int> DeleteRelPreguntaEncuestasAsync(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> IdPregunta);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRelPreguntaEncuestasChannel : SoftvMVC.SoftvService.IRelPreguntaEncuestas, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RelPreguntaEncuestasClient : System.ServiceModel.ClientBase<SoftvMVC.SoftvService.IRelPreguntaEncuestas>, SoftvMVC.SoftvService.IRelPreguntaEncuestas {
        
        public RelPreguntaEncuestasClient() {
        }
        
        public RelPreguntaEncuestasClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RelPreguntaEncuestasClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RelPreguntaEncuestasClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RelPreguntaEncuestasClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Softv.Entities.RelPreguntaEncuestasEntity GetRelPreguntaEncuestas(System.Nullable<int> IdPregunta) {
            return base.Channel.GetRelPreguntaEncuestas(IdPregunta);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.RelPreguntaEncuestasEntity> GetRelPreguntaEncuestasAsync(System.Nullable<int> IdPregunta) {
            return base.Channel.GetRelPreguntaEncuestasAsync(IdPregunta);
        }
        
        public Softv.Entities.RelPreguntaEncuestasEntity GetDeepRelPreguntaEncuestas(System.Nullable<int> IdPregunta) {
            return base.Channel.GetDeepRelPreguntaEncuestas(IdPregunta);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.RelPreguntaEncuestasEntity> GetDeepRelPreguntaEncuestasAsync(System.Nullable<int> IdPregunta) {
            return base.Channel.GetDeepRelPreguntaEncuestasAsync(IdPregunta);
        }
        
        public System.Collections.Generic.List<Softv.Entities.RelPreguntaEncuestasEntity> GetRelPreguntaEncuestasList() {
            return base.Channel.GetRelPreguntaEncuestasList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.RelPreguntaEncuestasEntity>> GetRelPreguntaEncuestasListAsync() {
            return base.Channel.GetRelPreguntaEncuestasListAsync();
        }
        
        public Globals.SoftvList<Softv.Entities.RelPreguntaEncuestasEntity> GetRelPreguntaEncuestasPagedList(int page, int pageSize) {
            return base.Channel.GetRelPreguntaEncuestasPagedList(page, pageSize);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.RelPreguntaEncuestasEntity>> GetRelPreguntaEncuestasPagedListAsync(int page, int pageSize) {
            return base.Channel.GetRelPreguntaEncuestasPagedListAsync(page, pageSize);
        }
        
        public Globals.SoftvList<Softv.Entities.RelPreguntaEncuestasEntity> GetRelPreguntaEncuestasPagedListXml(int page, int pageSize, string xml) {
            return base.Channel.GetRelPreguntaEncuestasPagedListXml(page, pageSize, xml);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.RelPreguntaEncuestasEntity>> GetRelPreguntaEncuestasPagedListXmlAsync(int page, int pageSize, string xml) {
            return base.Channel.GetRelPreguntaEncuestasPagedListXmlAsync(page, pageSize, xml);
        }
        
        public int AddRelPreguntaEncuestas(Softv.Entities.RelPreguntaEncuestasEntity objRelPreguntaEncuestas) {
            return base.Channel.AddRelPreguntaEncuestas(objRelPreguntaEncuestas);
        }
        
        public System.Threading.Tasks.Task<int> AddRelPreguntaEncuestasAsync(Softv.Entities.RelPreguntaEncuestasEntity objRelPreguntaEncuestas) {
            return base.Channel.AddRelPreguntaEncuestasAsync(objRelPreguntaEncuestas);
        }
        
        public int UpdateRelPreguntaEncuestas(Softv.Entities.RelPreguntaEncuestasEntity objRelPreguntaEncuestas) {
            return base.Channel.UpdateRelPreguntaEncuestas(objRelPreguntaEncuestas);
        }
        
        public System.Threading.Tasks.Task<int> UpdateRelPreguntaEncuestasAsync(Softv.Entities.RelPreguntaEncuestasEntity objRelPreguntaEncuestas) {
            return base.Channel.UpdateRelPreguntaEncuestasAsync(objRelPreguntaEncuestas);
        }
        
        public int DeleteRelPreguntaEncuestas(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> IdPregunta) {
            return base.Channel.DeleteRelPreguntaEncuestas(BaseRemoteIp, BaseIdUser, IdPregunta);
        }
        
        public System.Threading.Tasks.Task<int> DeleteRelPreguntaEncuestasAsync(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> IdPregunta) {
            return base.Channel.DeleteRelPreguntaEncuestasAsync(BaseRemoteIp, BaseIdUser, IdPregunta);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SoftvService.IResOpcMults")]
    public interface IResOpcMults {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResOpcMults/GetResOpcMults", ReplyAction="http://tempuri.org/IResOpcMults/GetResOpcMultsResponse")]
        Softv.Entities.ResOpcMultsEntity GetResOpcMults(System.Nullable<int> Id_ResOpcMult);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResOpcMults/GetResOpcMults", ReplyAction="http://tempuri.org/IResOpcMults/GetResOpcMultsResponse")]
        System.Threading.Tasks.Task<Softv.Entities.ResOpcMultsEntity> GetResOpcMultsAsync(System.Nullable<int> Id_ResOpcMult);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResOpcMults/GetDeepResOpcMults", ReplyAction="http://tempuri.org/IResOpcMults/GetDeepResOpcMultsResponse")]
        Softv.Entities.ResOpcMultsEntity GetDeepResOpcMults(System.Nullable<int> Id_ResOpcMult);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResOpcMults/GetDeepResOpcMults", ReplyAction="http://tempuri.org/IResOpcMults/GetDeepResOpcMultsResponse")]
        System.Threading.Tasks.Task<Softv.Entities.ResOpcMultsEntity> GetDeepResOpcMultsAsync(System.Nullable<int> Id_ResOpcMult);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResOpcMults/GetResOpcMultsList", ReplyAction="http://tempuri.org/IResOpcMults/GetResOpcMultsListResponse")]
        System.Collections.Generic.List<Softv.Entities.ResOpcMultsEntity> GetResOpcMultsList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResOpcMults/GetResOpcMultsList", ReplyAction="http://tempuri.org/IResOpcMults/GetResOpcMultsListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.ResOpcMultsEntity>> GetResOpcMultsListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResOpcMults/GetResOpcMultsPagedList", ReplyAction="http://tempuri.org/IResOpcMults/GetResOpcMultsPagedListResponse")]
        Globals.SoftvList<Softv.Entities.ResOpcMultsEntity> GetResOpcMultsPagedList(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResOpcMults/GetResOpcMultsPagedList", ReplyAction="http://tempuri.org/IResOpcMults/GetResOpcMultsPagedListResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.ResOpcMultsEntity>> GetResOpcMultsPagedListAsync(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResOpcMults/GetResOpcMultsPagedListXml", ReplyAction="http://tempuri.org/IResOpcMults/GetResOpcMultsPagedListXmlResponse")]
        Globals.SoftvList<Softv.Entities.ResOpcMultsEntity> GetResOpcMultsPagedListXml(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResOpcMults/GetResOpcMultsPagedListXml", ReplyAction="http://tempuri.org/IResOpcMults/GetResOpcMultsPagedListXmlResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.ResOpcMultsEntity>> GetResOpcMultsPagedListXmlAsync(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResOpcMults/AddResOpcMults", ReplyAction="http://tempuri.org/IResOpcMults/AddResOpcMultsResponse")]
        int AddResOpcMults(Softv.Entities.ResOpcMultsEntity objResOpcMults);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResOpcMults/AddResOpcMults", ReplyAction="http://tempuri.org/IResOpcMults/AddResOpcMultsResponse")]
        System.Threading.Tasks.Task<int> AddResOpcMultsAsync(Softv.Entities.ResOpcMultsEntity objResOpcMults);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResOpcMults/UpdateResOpcMults", ReplyAction="http://tempuri.org/IResOpcMults/UpdateResOpcMultsResponse")]
        int UpdateResOpcMults(Softv.Entities.ResOpcMultsEntity objResOpcMults);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResOpcMults/UpdateResOpcMults", ReplyAction="http://tempuri.org/IResOpcMults/UpdateResOpcMultsResponse")]
        System.Threading.Tasks.Task<int> UpdateResOpcMultsAsync(Softv.Entities.ResOpcMultsEntity objResOpcMults);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResOpcMults/DeleteResOpcMults", ReplyAction="http://tempuri.org/IResOpcMults/DeleteResOpcMultsResponse")]
        int DeleteResOpcMults(System.Nullable<int> Id_ResOpcMult);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResOpcMults/DeleteResOpcMults", ReplyAction="http://tempuri.org/IResOpcMults/DeleteResOpcMultsResponse")]
        System.Threading.Tasks.Task<int> DeleteResOpcMultsAsync(System.Nullable<int> Id_ResOpcMult);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IResOpcMultsChannel : SoftvMVC.SoftvService.IResOpcMults, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ResOpcMultsClient : System.ServiceModel.ClientBase<SoftvMVC.SoftvService.IResOpcMults>, SoftvMVC.SoftvService.IResOpcMults {
        
        public ResOpcMultsClient() {
        }
        
        public ResOpcMultsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ResOpcMultsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ResOpcMultsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ResOpcMultsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Softv.Entities.ResOpcMultsEntity GetResOpcMults(System.Nullable<int> Id_ResOpcMult) {
            return base.Channel.GetResOpcMults(Id_ResOpcMult);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.ResOpcMultsEntity> GetResOpcMultsAsync(System.Nullable<int> Id_ResOpcMult) {
            return base.Channel.GetResOpcMultsAsync(Id_ResOpcMult);
        }
        
        public Softv.Entities.ResOpcMultsEntity GetDeepResOpcMults(System.Nullable<int> Id_ResOpcMult) {
            return base.Channel.GetDeepResOpcMults(Id_ResOpcMult);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.ResOpcMultsEntity> GetDeepResOpcMultsAsync(System.Nullable<int> Id_ResOpcMult) {
            return base.Channel.GetDeepResOpcMultsAsync(Id_ResOpcMult);
        }
        
        public System.Collections.Generic.List<Softv.Entities.ResOpcMultsEntity> GetResOpcMultsList() {
            return base.Channel.GetResOpcMultsList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.ResOpcMultsEntity>> GetResOpcMultsListAsync() {
            return base.Channel.GetResOpcMultsListAsync();
        }
        
        public Globals.SoftvList<Softv.Entities.ResOpcMultsEntity> GetResOpcMultsPagedList(int page, int pageSize) {
            return base.Channel.GetResOpcMultsPagedList(page, pageSize);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.ResOpcMultsEntity>> GetResOpcMultsPagedListAsync(int page, int pageSize) {
            return base.Channel.GetResOpcMultsPagedListAsync(page, pageSize);
        }
        
        public Globals.SoftvList<Softv.Entities.ResOpcMultsEntity> GetResOpcMultsPagedListXml(int page, int pageSize, string xml) {
            return base.Channel.GetResOpcMultsPagedListXml(page, pageSize, xml);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.ResOpcMultsEntity>> GetResOpcMultsPagedListXmlAsync(int page, int pageSize, string xml) {
            return base.Channel.GetResOpcMultsPagedListXmlAsync(page, pageSize, xml);
        }
        
        public int AddResOpcMults(Softv.Entities.ResOpcMultsEntity objResOpcMults) {
            return base.Channel.AddResOpcMults(objResOpcMults);
        }
        
        public System.Threading.Tasks.Task<int> AddResOpcMultsAsync(Softv.Entities.ResOpcMultsEntity objResOpcMults) {
            return base.Channel.AddResOpcMultsAsync(objResOpcMults);
        }
        
        public int UpdateResOpcMults(Softv.Entities.ResOpcMultsEntity objResOpcMults) {
            return base.Channel.UpdateResOpcMults(objResOpcMults);
        }
        
        public System.Threading.Tasks.Task<int> UpdateResOpcMultsAsync(Softv.Entities.ResOpcMultsEntity objResOpcMults) {
            return base.Channel.UpdateResOpcMultsAsync(objResOpcMults);
        }
        
        public int DeleteResOpcMults(System.Nullable<int> Id_ResOpcMult) {
            return base.Channel.DeleteResOpcMults(Id_ResOpcMult);
        }
        
        public System.Threading.Tasks.Task<int> DeleteResOpcMultsAsync(System.Nullable<int> Id_ResOpcMult) {
            return base.Channel.DeleteResOpcMultsAsync(Id_ResOpcMult);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SoftvService.IRelEnProcesos")]
    public interface IRelEnProcesos {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelEnProcesos/GetRelEnProcesos", ReplyAction="http://tempuri.org/IRelEnProcesos/GetRelEnProcesosResponse")]
        Softv.Entities.RelEnProcesosEntity GetRelEnProcesos(System.Nullable<int> IdProceso);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelEnProcesos/GetRelEnProcesos", ReplyAction="http://tempuri.org/IRelEnProcesos/GetRelEnProcesosResponse")]
        System.Threading.Tasks.Task<Softv.Entities.RelEnProcesosEntity> GetRelEnProcesosAsync(System.Nullable<int> IdProceso);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelEnProcesos/GetDeepRelEnProcesos", ReplyAction="http://tempuri.org/IRelEnProcesos/GetDeepRelEnProcesosResponse")]
        Softv.Entities.RelEnProcesosEntity GetDeepRelEnProcesos(System.Nullable<int> IdProceso);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelEnProcesos/GetDeepRelEnProcesos", ReplyAction="http://tempuri.org/IRelEnProcesos/GetDeepRelEnProcesosResponse")]
        System.Threading.Tasks.Task<Softv.Entities.RelEnProcesosEntity> GetDeepRelEnProcesosAsync(System.Nullable<int> IdProceso);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelEnProcesos/GetRelEnProcesosList", ReplyAction="http://tempuri.org/IRelEnProcesos/GetRelEnProcesosListResponse")]
        System.Collections.Generic.List<Softv.Entities.RelEnProcesosEntity> GetRelEnProcesosList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelEnProcesos/GetRelEnProcesosList", ReplyAction="http://tempuri.org/IRelEnProcesos/GetRelEnProcesosListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.RelEnProcesosEntity>> GetRelEnProcesosListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelEnProcesos/GetRelEnProcesosPagedList", ReplyAction="http://tempuri.org/IRelEnProcesos/GetRelEnProcesosPagedListResponse")]
        Globals.SoftvList<Softv.Entities.RelEnProcesosEntity> GetRelEnProcesosPagedList(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelEnProcesos/GetRelEnProcesosPagedList", ReplyAction="http://tempuri.org/IRelEnProcesos/GetRelEnProcesosPagedListResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.RelEnProcesosEntity>> GetRelEnProcesosPagedListAsync(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelEnProcesos/GetRelEnProcesosPagedListXml", ReplyAction="http://tempuri.org/IRelEnProcesos/GetRelEnProcesosPagedListXmlResponse")]
        Globals.SoftvList<Softv.Entities.RelEnProcesosEntity> GetRelEnProcesosPagedListXml(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelEnProcesos/GetRelEnProcesosPagedListXml", ReplyAction="http://tempuri.org/IRelEnProcesos/GetRelEnProcesosPagedListXmlResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.RelEnProcesosEntity>> GetRelEnProcesosPagedListXmlAsync(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelEnProcesos/AddRelEnProcesos", ReplyAction="http://tempuri.org/IRelEnProcesos/AddRelEnProcesosResponse")]
        int AddRelEnProcesos(Softv.Entities.RelEnProcesosEntity objRelEnProcesos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelEnProcesos/AddRelEnProcesos", ReplyAction="http://tempuri.org/IRelEnProcesos/AddRelEnProcesosResponse")]
        System.Threading.Tasks.Task<int> AddRelEnProcesosAsync(Softv.Entities.RelEnProcesosEntity objRelEnProcesos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelEnProcesos/UpdateRelEnProcesos", ReplyAction="http://tempuri.org/IRelEnProcesos/UpdateRelEnProcesosResponse")]
        int UpdateRelEnProcesos(Softv.Entities.RelEnProcesosEntity objRelEnProcesos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelEnProcesos/UpdateRelEnProcesos", ReplyAction="http://tempuri.org/IRelEnProcesos/UpdateRelEnProcesosResponse")]
        System.Threading.Tasks.Task<int> UpdateRelEnProcesosAsync(Softv.Entities.RelEnProcesosEntity objRelEnProcesos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelEnProcesos/DeleteRelEnProcesos", ReplyAction="http://tempuri.org/IRelEnProcesos/DeleteRelEnProcesosResponse")]
        int DeleteRelEnProcesos(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> IdProceso);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelEnProcesos/DeleteRelEnProcesos", ReplyAction="http://tempuri.org/IRelEnProcesos/DeleteRelEnProcesosResponse")]
        System.Threading.Tasks.Task<int> DeleteRelEnProcesosAsync(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> IdProceso);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRelEnProcesosChannel : SoftvMVC.SoftvService.IRelEnProcesos, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RelEnProcesosClient : System.ServiceModel.ClientBase<SoftvMVC.SoftvService.IRelEnProcesos>, SoftvMVC.SoftvService.IRelEnProcesos {
        
        public RelEnProcesosClient() {
        }
        
        public RelEnProcesosClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RelEnProcesosClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RelEnProcesosClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RelEnProcesosClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Softv.Entities.RelEnProcesosEntity GetRelEnProcesos(System.Nullable<int> IdProceso) {
            return base.Channel.GetRelEnProcesos(IdProceso);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.RelEnProcesosEntity> GetRelEnProcesosAsync(System.Nullable<int> IdProceso) {
            return base.Channel.GetRelEnProcesosAsync(IdProceso);
        }
        
        public Softv.Entities.RelEnProcesosEntity GetDeepRelEnProcesos(System.Nullable<int> IdProceso) {
            return base.Channel.GetDeepRelEnProcesos(IdProceso);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.RelEnProcesosEntity> GetDeepRelEnProcesosAsync(System.Nullable<int> IdProceso) {
            return base.Channel.GetDeepRelEnProcesosAsync(IdProceso);
        }
        
        public System.Collections.Generic.List<Softv.Entities.RelEnProcesosEntity> GetRelEnProcesosList() {
            return base.Channel.GetRelEnProcesosList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.RelEnProcesosEntity>> GetRelEnProcesosListAsync() {
            return base.Channel.GetRelEnProcesosListAsync();
        }
        
        public Globals.SoftvList<Softv.Entities.RelEnProcesosEntity> GetRelEnProcesosPagedList(int page, int pageSize) {
            return base.Channel.GetRelEnProcesosPagedList(page, pageSize);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.RelEnProcesosEntity>> GetRelEnProcesosPagedListAsync(int page, int pageSize) {
            return base.Channel.GetRelEnProcesosPagedListAsync(page, pageSize);
        }
        
        public Globals.SoftvList<Softv.Entities.RelEnProcesosEntity> GetRelEnProcesosPagedListXml(int page, int pageSize, string xml) {
            return base.Channel.GetRelEnProcesosPagedListXml(page, pageSize, xml);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.RelEnProcesosEntity>> GetRelEnProcesosPagedListXmlAsync(int page, int pageSize, string xml) {
            return base.Channel.GetRelEnProcesosPagedListXmlAsync(page, pageSize, xml);
        }
        
        public int AddRelEnProcesos(Softv.Entities.RelEnProcesosEntity objRelEnProcesos) {
            return base.Channel.AddRelEnProcesos(objRelEnProcesos);
        }
        
        public System.Threading.Tasks.Task<int> AddRelEnProcesosAsync(Softv.Entities.RelEnProcesosEntity objRelEnProcesos) {
            return base.Channel.AddRelEnProcesosAsync(objRelEnProcesos);
        }
        
        public int UpdateRelEnProcesos(Softv.Entities.RelEnProcesosEntity objRelEnProcesos) {
            return base.Channel.UpdateRelEnProcesos(objRelEnProcesos);
        }
        
        public System.Threading.Tasks.Task<int> UpdateRelEnProcesosAsync(Softv.Entities.RelEnProcesosEntity objRelEnProcesos) {
            return base.Channel.UpdateRelEnProcesosAsync(objRelEnProcesos);
        }
        
        public int DeleteRelEnProcesos(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> IdProceso) {
            return base.Channel.DeleteRelEnProcesos(BaseRemoteIp, BaseIdUser, IdProceso);
        }
        
        public System.Threading.Tasks.Task<int> DeleteRelEnProcesosAsync(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> IdProceso) {
            return base.Channel.DeleteRelEnProcesosAsync(BaseRemoteIp, BaseIdUser, IdProceso);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SoftvService.IConexion")]
    public interface IConexion {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConexion/GetConexion", ReplyAction="http://tempuri.org/IConexion/GetConexionResponse")]
        Softv.Entities.ConexionEntity GetConexion(System.Nullable<int> IdConexion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConexion/GetConexion", ReplyAction="http://tempuri.org/IConexion/GetConexionResponse")]
        System.Threading.Tasks.Task<Softv.Entities.ConexionEntity> GetConexionAsync(System.Nullable<int> IdConexion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConexion/GetDeepConexion", ReplyAction="http://tempuri.org/IConexion/GetDeepConexionResponse")]
        Softv.Entities.ConexionEntity GetDeepConexion(System.Nullable<int> IdConexion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConexion/GetDeepConexion", ReplyAction="http://tempuri.org/IConexion/GetDeepConexionResponse")]
        System.Threading.Tasks.Task<Softv.Entities.ConexionEntity> GetDeepConexionAsync(System.Nullable<int> IdConexion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConexion/GetConexionList", ReplyAction="http://tempuri.org/IConexion/GetConexionListResponse")]
        System.Collections.Generic.List<Softv.Entities.ConexionEntity> GetConexionList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConexion/GetConexionList", ReplyAction="http://tempuri.org/IConexion/GetConexionListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.ConexionEntity>> GetConexionListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConexion/GetConexionPagedList", ReplyAction="http://tempuri.org/IConexion/GetConexionPagedListResponse")]
        Globals.SoftvList<Softv.Entities.ConexionEntity> GetConexionPagedList(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConexion/GetConexionPagedList", ReplyAction="http://tempuri.org/IConexion/GetConexionPagedListResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.ConexionEntity>> GetConexionPagedListAsync(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConexion/GetConexionPagedListXml", ReplyAction="http://tempuri.org/IConexion/GetConexionPagedListXmlResponse")]
        Globals.SoftvList<Softv.Entities.ConexionEntity> GetConexionPagedListXml(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConexion/GetConexionPagedListXml", ReplyAction="http://tempuri.org/IConexion/GetConexionPagedListXmlResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.ConexionEntity>> GetConexionPagedListXmlAsync(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConexion/AddConexion", ReplyAction="http://tempuri.org/IConexion/AddConexionResponse")]
        int AddConexion(Softv.Entities.ConexionEntity objConexion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConexion/AddConexion", ReplyAction="http://tempuri.org/IConexion/AddConexionResponse")]
        System.Threading.Tasks.Task<int> AddConexionAsync(Softv.Entities.ConexionEntity objConexion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConexion/UpdateConexion", ReplyAction="http://tempuri.org/IConexion/UpdateConexionResponse")]
        int UpdateConexion(Softv.Entities.ConexionEntity objConexion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConexion/UpdateConexion", ReplyAction="http://tempuri.org/IConexion/UpdateConexionResponse")]
        System.Threading.Tasks.Task<int> UpdateConexionAsync(Softv.Entities.ConexionEntity objConexion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConexion/DeleteConexion", ReplyAction="http://tempuri.org/IConexion/DeleteConexionResponse")]
        int DeleteConexion(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> IdConexion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConexion/DeleteConexion", ReplyAction="http://tempuri.org/IConexion/DeleteConexionResponse")]
        System.Threading.Tasks.Task<int> DeleteConexionAsync(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> IdConexion);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IConexionChannel : SoftvMVC.SoftvService.IConexion, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConexionClient : System.ServiceModel.ClientBase<SoftvMVC.SoftvService.IConexion>, SoftvMVC.SoftvService.IConexion {
        
        public ConexionClient() {
        }
        
        public ConexionClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ConexionClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConexionClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConexionClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Softv.Entities.ConexionEntity GetConexion(System.Nullable<int> IdConexion) {
            return base.Channel.GetConexion(IdConexion);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.ConexionEntity> GetConexionAsync(System.Nullable<int> IdConexion) {
            return base.Channel.GetConexionAsync(IdConexion);
        }
        
        public Softv.Entities.ConexionEntity GetDeepConexion(System.Nullable<int> IdConexion) {
            return base.Channel.GetDeepConexion(IdConexion);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.ConexionEntity> GetDeepConexionAsync(System.Nullable<int> IdConexion) {
            return base.Channel.GetDeepConexionAsync(IdConexion);
        }
        
        public System.Collections.Generic.List<Softv.Entities.ConexionEntity> GetConexionList() {
            return base.Channel.GetConexionList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.ConexionEntity>> GetConexionListAsync() {
            return base.Channel.GetConexionListAsync();
        }
        
        public Globals.SoftvList<Softv.Entities.ConexionEntity> GetConexionPagedList(int page, int pageSize) {
            return base.Channel.GetConexionPagedList(page, pageSize);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.ConexionEntity>> GetConexionPagedListAsync(int page, int pageSize) {
            return base.Channel.GetConexionPagedListAsync(page, pageSize);
        }
        
        public Globals.SoftvList<Softv.Entities.ConexionEntity> GetConexionPagedListXml(int page, int pageSize, string xml) {
            return base.Channel.GetConexionPagedListXml(page, pageSize, xml);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.ConexionEntity>> GetConexionPagedListXmlAsync(int page, int pageSize, string xml) {
            return base.Channel.GetConexionPagedListXmlAsync(page, pageSize, xml);
        }
        
        public int AddConexion(Softv.Entities.ConexionEntity objConexion) {
            return base.Channel.AddConexion(objConexion);
        }
        
        public System.Threading.Tasks.Task<int> AddConexionAsync(Softv.Entities.ConexionEntity objConexion) {
            return base.Channel.AddConexionAsync(objConexion);
        }
        
        public int UpdateConexion(Softv.Entities.ConexionEntity objConexion) {
            return base.Channel.UpdateConexion(objConexion);
        }
        
        public System.Threading.Tasks.Task<int> UpdateConexionAsync(Softv.Entities.ConexionEntity objConexion) {
            return base.Channel.UpdateConexionAsync(objConexion);
        }
        
        public int DeleteConexion(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> IdConexion) {
            return base.Channel.DeleteConexion(BaseRemoteIp, BaseIdUser, IdConexion);
        }
        
        public System.Threading.Tasks.Task<int> DeleteConexionAsync(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> IdConexion) {
            return base.Channel.DeleteConexionAsync(BaseRemoteIp, BaseIdUser, IdConexion);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SoftvService.ICLIENTE")]
    public interface ICLIENTE {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICLIENTE/GetCLIENTE", ReplyAction="http://tempuri.org/ICLIENTE/GetCLIENTEResponse")]
        Softv.Entities.CLIENTEEntity GetCLIENTE(System.Nullable<long> CONTRATO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICLIENTE/GetCLIENTE", ReplyAction="http://tempuri.org/ICLIENTE/GetCLIENTEResponse")]
        System.Threading.Tasks.Task<Softv.Entities.CLIENTEEntity> GetCLIENTEAsync(System.Nullable<long> CONTRATO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICLIENTE/GetDeepCLIENTE", ReplyAction="http://tempuri.org/ICLIENTE/GetDeepCLIENTEResponse")]
        Softv.Entities.CLIENTEEntity GetDeepCLIENTE(System.Nullable<long> CONTRATO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICLIENTE/GetDeepCLIENTE", ReplyAction="http://tempuri.org/ICLIENTE/GetDeepCLIENTEResponse")]
        System.Threading.Tasks.Task<Softv.Entities.CLIENTEEntity> GetDeepCLIENTEAsync(System.Nullable<long> CONTRATO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICLIENTE/GetCLIENTEList", ReplyAction="http://tempuri.org/ICLIENTE/GetCLIENTEListResponse")]
        System.Collections.Generic.List<Softv.Entities.CLIENTEEntity> GetCLIENTEList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICLIENTE/GetCLIENTEList", ReplyAction="http://tempuri.org/ICLIENTE/GetCLIENTEListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.CLIENTEEntity>> GetCLIENTEListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICLIENTE/GetCLIENTEPagedList", ReplyAction="http://tempuri.org/ICLIENTE/GetCLIENTEPagedListResponse")]
        Globals.SoftvList<Softv.Entities.CLIENTEEntity> GetCLIENTEPagedList(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICLIENTE/GetCLIENTEPagedList", ReplyAction="http://tempuri.org/ICLIENTE/GetCLIENTEPagedListResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.CLIENTEEntity>> GetCLIENTEPagedListAsync(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICLIENTE/GetCLIENTEPagedListXml", ReplyAction="http://tempuri.org/ICLIENTE/GetCLIENTEPagedListXmlResponse")]
        Globals.SoftvList<Softv.Entities.CLIENTEEntity> GetCLIENTEPagedListXml(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICLIENTE/GetCLIENTEPagedListXml", ReplyAction="http://tempuri.org/ICLIENTE/GetCLIENTEPagedListXmlResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.CLIENTEEntity>> GetCLIENTEPagedListXmlAsync(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICLIENTE/AddCLIENTE", ReplyAction="http://tempuri.org/ICLIENTE/AddCLIENTEResponse")]
        int AddCLIENTE(Softv.Entities.CLIENTEEntity objCLIENTE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICLIENTE/AddCLIENTE", ReplyAction="http://tempuri.org/ICLIENTE/AddCLIENTEResponse")]
        System.Threading.Tasks.Task<int> AddCLIENTEAsync(Softv.Entities.CLIENTEEntity objCLIENTE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICLIENTE/UpdateCLIENTE", ReplyAction="http://tempuri.org/ICLIENTE/UpdateCLIENTEResponse")]
        int UpdateCLIENTE(Softv.Entities.CLIENTEEntity objCLIENTE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICLIENTE/UpdateCLIENTE", ReplyAction="http://tempuri.org/ICLIENTE/UpdateCLIENTEResponse")]
        System.Threading.Tasks.Task<int> UpdateCLIENTEAsync(Softv.Entities.CLIENTEEntity objCLIENTE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICLIENTE/DeleteCLIENTE", ReplyAction="http://tempuri.org/ICLIENTE/DeleteCLIENTEResponse")]
        int DeleteCLIENTE(string BaseRemoteIp, int BaseIdUser, System.Nullable<long> CONTRATO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICLIENTE/DeleteCLIENTE", ReplyAction="http://tempuri.org/ICLIENTE/DeleteCLIENTEResponse")]
        System.Threading.Tasks.Task<int> DeleteCLIENTEAsync(string BaseRemoteIp, int BaseIdUser, System.Nullable<long> CONTRATO);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICLIENTEChannel : SoftvMVC.SoftvService.ICLIENTE, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CLIENTEClient : System.ServiceModel.ClientBase<SoftvMVC.SoftvService.ICLIENTE>, SoftvMVC.SoftvService.ICLIENTE {
        
        public CLIENTEClient() {
        }
        
        public CLIENTEClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CLIENTEClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CLIENTEClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CLIENTEClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Softv.Entities.CLIENTEEntity GetCLIENTE(System.Nullable<long> CONTRATO) {
            return base.Channel.GetCLIENTE(CONTRATO);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.CLIENTEEntity> GetCLIENTEAsync(System.Nullable<long> CONTRATO) {
            return base.Channel.GetCLIENTEAsync(CONTRATO);
        }
        
        public Softv.Entities.CLIENTEEntity GetDeepCLIENTE(System.Nullable<long> CONTRATO) {
            return base.Channel.GetDeepCLIENTE(CONTRATO);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.CLIENTEEntity> GetDeepCLIENTEAsync(System.Nullable<long> CONTRATO) {
            return base.Channel.GetDeepCLIENTEAsync(CONTRATO);
        }
        
        public System.Collections.Generic.List<Softv.Entities.CLIENTEEntity> GetCLIENTEList() {
            return base.Channel.GetCLIENTEList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.CLIENTEEntity>> GetCLIENTEListAsync() {
            return base.Channel.GetCLIENTEListAsync();
        }
        
        public Globals.SoftvList<Softv.Entities.CLIENTEEntity> GetCLIENTEPagedList(int page, int pageSize) {
            return base.Channel.GetCLIENTEPagedList(page, pageSize);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.CLIENTEEntity>> GetCLIENTEPagedListAsync(int page, int pageSize) {
            return base.Channel.GetCLIENTEPagedListAsync(page, pageSize);
        }
        
        public Globals.SoftvList<Softv.Entities.CLIENTEEntity> GetCLIENTEPagedListXml(int page, int pageSize, string xml) {
            return base.Channel.GetCLIENTEPagedListXml(page, pageSize, xml);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.CLIENTEEntity>> GetCLIENTEPagedListXmlAsync(int page, int pageSize, string xml) {
            return base.Channel.GetCLIENTEPagedListXmlAsync(page, pageSize, xml);
        }
        
        public int AddCLIENTE(Softv.Entities.CLIENTEEntity objCLIENTE) {
            return base.Channel.AddCLIENTE(objCLIENTE);
        }
        
        public System.Threading.Tasks.Task<int> AddCLIENTEAsync(Softv.Entities.CLIENTEEntity objCLIENTE) {
            return base.Channel.AddCLIENTEAsync(objCLIENTE);
        }
        
        public int UpdateCLIENTE(Softv.Entities.CLIENTEEntity objCLIENTE) {
            return base.Channel.UpdateCLIENTE(objCLIENTE);
        }
        
        public System.Threading.Tasks.Task<int> UpdateCLIENTEAsync(Softv.Entities.CLIENTEEntity objCLIENTE) {
            return base.Channel.UpdateCLIENTEAsync(objCLIENTE);
        }
        
        public int DeleteCLIENTE(string BaseRemoteIp, int BaseIdUser, System.Nullable<long> CONTRATO) {
            return base.Channel.DeleteCLIENTE(BaseRemoteIp, BaseIdUser, CONTRATO);
        }
        
        public System.Threading.Tasks.Task<int> DeleteCLIENTEAsync(string BaseRemoteIp, int BaseIdUser, System.Nullable<long> CONTRATO) {
            return base.Channel.DeleteCLIENTEAsync(BaseRemoteIp, BaseIdUser, CONTRATO);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SoftvService.ITurno")]
    public interface ITurno {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITurno/GetTurno", ReplyAction="http://tempuri.org/ITurno/GetTurnoResponse")]
        Softv.Entities.TurnoEntity GetTurno(System.Nullable<int> IdTurno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITurno/GetTurno", ReplyAction="http://tempuri.org/ITurno/GetTurnoResponse")]
        System.Threading.Tasks.Task<Softv.Entities.TurnoEntity> GetTurnoAsync(System.Nullable<int> IdTurno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITurno/GetDeepTurno", ReplyAction="http://tempuri.org/ITurno/GetDeepTurnoResponse")]
        Softv.Entities.TurnoEntity GetDeepTurno(System.Nullable<int> IdTurno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITurno/GetDeepTurno", ReplyAction="http://tempuri.org/ITurno/GetDeepTurnoResponse")]
        System.Threading.Tasks.Task<Softv.Entities.TurnoEntity> GetDeepTurnoAsync(System.Nullable<int> IdTurno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITurno/GetTurnoList", ReplyAction="http://tempuri.org/ITurno/GetTurnoListResponse")]
        System.Collections.Generic.List<Softv.Entities.TurnoEntity> GetTurnoList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITurno/GetTurnoList", ReplyAction="http://tempuri.org/ITurno/GetTurnoListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.TurnoEntity>> GetTurnoListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITurno/GetTurnoPagedList", ReplyAction="http://tempuri.org/ITurno/GetTurnoPagedListResponse")]
        Globals.SoftvList<Softv.Entities.TurnoEntity> GetTurnoPagedList(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITurno/GetTurnoPagedList", ReplyAction="http://tempuri.org/ITurno/GetTurnoPagedListResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.TurnoEntity>> GetTurnoPagedListAsync(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITurno/GetTurnoPagedListXml", ReplyAction="http://tempuri.org/ITurno/GetTurnoPagedListXmlResponse")]
        Globals.SoftvList<Softv.Entities.TurnoEntity> GetTurnoPagedListXml(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITurno/GetTurnoPagedListXml", ReplyAction="http://tempuri.org/ITurno/GetTurnoPagedListXmlResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.TurnoEntity>> GetTurnoPagedListXmlAsync(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITurno/AddTurno", ReplyAction="http://tempuri.org/ITurno/AddTurnoResponse")]
        int AddTurno(Softv.Entities.TurnoEntity objTurno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITurno/AddTurno", ReplyAction="http://tempuri.org/ITurno/AddTurnoResponse")]
        System.Threading.Tasks.Task<int> AddTurnoAsync(Softv.Entities.TurnoEntity objTurno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITurno/UpdateTurno", ReplyAction="http://tempuri.org/ITurno/UpdateTurnoResponse")]
        int UpdateTurno(Softv.Entities.TurnoEntity objTurno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITurno/UpdateTurno", ReplyAction="http://tempuri.org/ITurno/UpdateTurnoResponse")]
        System.Threading.Tasks.Task<int> UpdateTurnoAsync(Softv.Entities.TurnoEntity objTurno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITurno/DeleteTurno", ReplyAction="http://tempuri.org/ITurno/DeleteTurnoResponse")]
        int DeleteTurno(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> IdTurno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITurno/DeleteTurno", ReplyAction="http://tempuri.org/ITurno/DeleteTurnoResponse")]
        System.Threading.Tasks.Task<int> DeleteTurnoAsync(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> IdTurno);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITurnoChannel : SoftvMVC.SoftvService.ITurno, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TurnoClient : System.ServiceModel.ClientBase<SoftvMVC.SoftvService.ITurno>, SoftvMVC.SoftvService.ITurno {
        
        public TurnoClient() {
        }
        
        public TurnoClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TurnoClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TurnoClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TurnoClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Softv.Entities.TurnoEntity GetTurno(System.Nullable<int> IdTurno) {
            return base.Channel.GetTurno(IdTurno);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.TurnoEntity> GetTurnoAsync(System.Nullable<int> IdTurno) {
            return base.Channel.GetTurnoAsync(IdTurno);
        }
        
        public Softv.Entities.TurnoEntity GetDeepTurno(System.Nullable<int> IdTurno) {
            return base.Channel.GetDeepTurno(IdTurno);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.TurnoEntity> GetDeepTurnoAsync(System.Nullable<int> IdTurno) {
            return base.Channel.GetDeepTurnoAsync(IdTurno);
        }
        
        public System.Collections.Generic.List<Softv.Entities.TurnoEntity> GetTurnoList() {
            return base.Channel.GetTurnoList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.TurnoEntity>> GetTurnoListAsync() {
            return base.Channel.GetTurnoListAsync();
        }
        
        public Globals.SoftvList<Softv.Entities.TurnoEntity> GetTurnoPagedList(int page, int pageSize) {
            return base.Channel.GetTurnoPagedList(page, pageSize);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.TurnoEntity>> GetTurnoPagedListAsync(int page, int pageSize) {
            return base.Channel.GetTurnoPagedListAsync(page, pageSize);
        }
        
        public Globals.SoftvList<Softv.Entities.TurnoEntity> GetTurnoPagedListXml(int page, int pageSize, string xml) {
            return base.Channel.GetTurnoPagedListXml(page, pageSize, xml);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.TurnoEntity>> GetTurnoPagedListXmlAsync(int page, int pageSize, string xml) {
            return base.Channel.GetTurnoPagedListXmlAsync(page, pageSize, xml);
        }
        
        public int AddTurno(Softv.Entities.TurnoEntity objTurno) {
            return base.Channel.AddTurno(objTurno);
        }
        
        public System.Threading.Tasks.Task<int> AddTurnoAsync(Softv.Entities.TurnoEntity objTurno) {
            return base.Channel.AddTurnoAsync(objTurno);
        }
        
        public int UpdateTurno(Softv.Entities.TurnoEntity objTurno) {
            return base.Channel.UpdateTurno(objTurno);
        }
        
        public System.Threading.Tasks.Task<int> UpdateTurnoAsync(Softv.Entities.TurnoEntity objTurno) {
            return base.Channel.UpdateTurnoAsync(objTurno);
        }
        
        public int DeleteTurno(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> IdTurno) {
            return base.Channel.DeleteTurno(BaseRemoteIp, BaseIdUser, IdTurno);
        }
        
        public System.Threading.Tasks.Task<int> DeleteTurnoAsync(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> IdTurno) {
            return base.Channel.DeleteTurnoAsync(BaseRemoteIp, BaseIdUser, IdTurno);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SoftvService.ILlamada")]
    public interface ILlamada {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILlamada/GetLlamada", ReplyAction="http://tempuri.org/ILlamada/GetLlamadaResponse")]
        Softv.Entities.LlamadaEntity GetLlamada(System.Nullable<int> IdLlamada);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILlamada/GetLlamada", ReplyAction="http://tempuri.org/ILlamada/GetLlamadaResponse")]
        System.Threading.Tasks.Task<Softv.Entities.LlamadaEntity> GetLlamadaAsync(System.Nullable<int> IdLlamada);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILlamada/GetDeepLlamada", ReplyAction="http://tempuri.org/ILlamada/GetDeepLlamadaResponse")]
        Softv.Entities.LlamadaEntity GetDeepLlamada(System.Nullable<int> IdLlamada);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILlamada/GetDeepLlamada", ReplyAction="http://tempuri.org/ILlamada/GetDeepLlamadaResponse")]
        System.Threading.Tasks.Task<Softv.Entities.LlamadaEntity> GetDeepLlamadaAsync(System.Nullable<int> IdLlamada);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILlamada/GetLlamadaList", ReplyAction="http://tempuri.org/ILlamada/GetLlamadaListResponse")]
        System.Collections.Generic.List<Softv.Entities.LlamadaEntity> GetLlamadaList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILlamada/GetLlamadaList", ReplyAction="http://tempuri.org/ILlamada/GetLlamadaListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.LlamadaEntity>> GetLlamadaListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILlamada/GetLlamadaPagedList", ReplyAction="http://tempuri.org/ILlamada/GetLlamadaPagedListResponse")]
        Globals.SoftvList<Softv.Entities.LlamadaEntity> GetLlamadaPagedList(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILlamada/GetLlamadaPagedList", ReplyAction="http://tempuri.org/ILlamada/GetLlamadaPagedListResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.LlamadaEntity>> GetLlamadaPagedListAsync(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILlamada/GetLlamadaPagedListXml", ReplyAction="http://tempuri.org/ILlamada/GetLlamadaPagedListXmlResponse")]
        Globals.SoftvList<Softv.Entities.LlamadaEntity> GetLlamadaPagedListXml(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILlamada/GetLlamadaPagedListXml", ReplyAction="http://tempuri.org/ILlamada/GetLlamadaPagedListXmlResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.LlamadaEntity>> GetLlamadaPagedListXmlAsync(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILlamada/AddLlamada", ReplyAction="http://tempuri.org/ILlamada/AddLlamadaResponse")]
        int AddLlamada(Softv.Entities.LlamadaEntity objLlamada);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILlamada/AddLlamada", ReplyAction="http://tempuri.org/ILlamada/AddLlamadaResponse")]
        System.Threading.Tasks.Task<int> AddLlamadaAsync(Softv.Entities.LlamadaEntity objLlamada);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILlamada/UpdateLlamada", ReplyAction="http://tempuri.org/ILlamada/UpdateLlamadaResponse")]
        int UpdateLlamada(Softv.Entities.LlamadaEntity objLlamada);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILlamada/UpdateLlamada", ReplyAction="http://tempuri.org/ILlamada/UpdateLlamadaResponse")]
        System.Threading.Tasks.Task<int> UpdateLlamadaAsync(Softv.Entities.LlamadaEntity objLlamada);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILlamada/DeleteLlamada", ReplyAction="http://tempuri.org/ILlamada/DeleteLlamadaResponse")]
        int DeleteLlamada(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> IdLlamada);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILlamada/DeleteLlamada", ReplyAction="http://tempuri.org/ILlamada/DeleteLlamadaResponse")]
        System.Threading.Tasks.Task<int> DeleteLlamadaAsync(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> IdLlamada);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILlamadaChannel : SoftvMVC.SoftvService.ILlamada, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LlamadaClient : System.ServiceModel.ClientBase<SoftvMVC.SoftvService.ILlamada>, SoftvMVC.SoftvService.ILlamada {
        
        public LlamadaClient() {
        }
        
        public LlamadaClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LlamadaClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LlamadaClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LlamadaClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Softv.Entities.LlamadaEntity GetLlamada(System.Nullable<int> IdLlamada) {
            return base.Channel.GetLlamada(IdLlamada);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.LlamadaEntity> GetLlamadaAsync(System.Nullable<int> IdLlamada) {
            return base.Channel.GetLlamadaAsync(IdLlamada);
        }
        
        public Softv.Entities.LlamadaEntity GetDeepLlamada(System.Nullable<int> IdLlamada) {
            return base.Channel.GetDeepLlamada(IdLlamada);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.LlamadaEntity> GetDeepLlamadaAsync(System.Nullable<int> IdLlamada) {
            return base.Channel.GetDeepLlamadaAsync(IdLlamada);
        }
        
        public System.Collections.Generic.List<Softv.Entities.LlamadaEntity> GetLlamadaList() {
            return base.Channel.GetLlamadaList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.LlamadaEntity>> GetLlamadaListAsync() {
            return base.Channel.GetLlamadaListAsync();
        }
        
        public Globals.SoftvList<Softv.Entities.LlamadaEntity> GetLlamadaPagedList(int page, int pageSize) {
            return base.Channel.GetLlamadaPagedList(page, pageSize);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.LlamadaEntity>> GetLlamadaPagedListAsync(int page, int pageSize) {
            return base.Channel.GetLlamadaPagedListAsync(page, pageSize);
        }
        
        public Globals.SoftvList<Softv.Entities.LlamadaEntity> GetLlamadaPagedListXml(int page, int pageSize, string xml) {
            return base.Channel.GetLlamadaPagedListXml(page, pageSize, xml);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.LlamadaEntity>> GetLlamadaPagedListXmlAsync(int page, int pageSize, string xml) {
            return base.Channel.GetLlamadaPagedListXmlAsync(page, pageSize, xml);
        }
        
        public int AddLlamada(Softv.Entities.LlamadaEntity objLlamada) {
            return base.Channel.AddLlamada(objLlamada);
        }
        
        public System.Threading.Tasks.Task<int> AddLlamadaAsync(Softv.Entities.LlamadaEntity objLlamada) {
            return base.Channel.AddLlamadaAsync(objLlamada);
        }
        
        public int UpdateLlamada(Softv.Entities.LlamadaEntity objLlamada) {
            return base.Channel.UpdateLlamada(objLlamada);
        }
        
        public System.Threading.Tasks.Task<int> UpdateLlamadaAsync(Softv.Entities.LlamadaEntity objLlamada) {
            return base.Channel.UpdateLlamadaAsync(objLlamada);
        }
        
        public int DeleteLlamada(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> IdLlamada) {
            return base.Channel.DeleteLlamada(BaseRemoteIp, BaseIdUser, IdLlamada);
        }
        
        public System.Threading.Tasks.Task<int> DeleteLlamadaAsync(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> IdLlamada) {
            return base.Channel.DeleteLlamadaAsync(BaseRemoteIp, BaseIdUser, IdLlamada);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SoftvService.IRel_Clientes_TiposClientes")]
    public interface IRel_Clientes_TiposClientes {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRel_Clientes_TiposClientes/GetRel_Clientes_TiposClientes", ReplyAction="http://tempuri.org/IRel_Clientes_TiposClientes/GetRel_Clientes_TiposClientesRespo" +
            "nse")]
        Softv.Entities.Rel_Clientes_TiposClientesEntity GetRel_Clientes_TiposClientes(System.Nullable<long> CONTRATO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRel_Clientes_TiposClientes/GetRel_Clientes_TiposClientes", ReplyAction="http://tempuri.org/IRel_Clientes_TiposClientes/GetRel_Clientes_TiposClientesRespo" +
            "nse")]
        System.Threading.Tasks.Task<Softv.Entities.Rel_Clientes_TiposClientesEntity> GetRel_Clientes_TiposClientesAsync(System.Nullable<long> CONTRATO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRel_Clientes_TiposClientes/GetDeepRel_Clientes_TiposClientes", ReplyAction="http://tempuri.org/IRel_Clientes_TiposClientes/GetDeepRel_Clientes_TiposClientesR" +
            "esponse")]
        Softv.Entities.Rel_Clientes_TiposClientesEntity GetDeepRel_Clientes_TiposClientes(System.Nullable<long> CONTRATO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRel_Clientes_TiposClientes/GetDeepRel_Clientes_TiposClientes", ReplyAction="http://tempuri.org/IRel_Clientes_TiposClientes/GetDeepRel_Clientes_TiposClientesR" +
            "esponse")]
        System.Threading.Tasks.Task<Softv.Entities.Rel_Clientes_TiposClientesEntity> GetDeepRel_Clientes_TiposClientesAsync(System.Nullable<long> CONTRATO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRel_Clientes_TiposClientes/GetRel_Clientes_TiposClientesList", ReplyAction="http://tempuri.org/IRel_Clientes_TiposClientes/GetRel_Clientes_TiposClientesListR" +
            "esponse")]
        System.Collections.Generic.List<Softv.Entities.Rel_Clientes_TiposClientesEntity> GetRel_Clientes_TiposClientesList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRel_Clientes_TiposClientes/GetRel_Clientes_TiposClientesList", ReplyAction="http://tempuri.org/IRel_Clientes_TiposClientes/GetRel_Clientes_TiposClientesListR" +
            "esponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.Rel_Clientes_TiposClientesEntity>> GetRel_Clientes_TiposClientesListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRel_Clientes_TiposClientes/GetRel_Clientes_TiposClientesPaged" +
            "List", ReplyAction="http://tempuri.org/IRel_Clientes_TiposClientes/GetRel_Clientes_TiposClientesPaged" +
            "ListResponse")]
        Globals.SoftvList<Softv.Entities.Rel_Clientes_TiposClientesEntity> GetRel_Clientes_TiposClientesPagedList(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRel_Clientes_TiposClientes/GetRel_Clientes_TiposClientesPaged" +
            "List", ReplyAction="http://tempuri.org/IRel_Clientes_TiposClientes/GetRel_Clientes_TiposClientesPaged" +
            "ListResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.Rel_Clientes_TiposClientesEntity>> GetRel_Clientes_TiposClientesPagedListAsync(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRel_Clientes_TiposClientes/GetRel_Clientes_TiposClientesPaged" +
            "ListXml", ReplyAction="http://tempuri.org/IRel_Clientes_TiposClientes/GetRel_Clientes_TiposClientesPaged" +
            "ListXmlResponse")]
        Globals.SoftvList<Softv.Entities.Rel_Clientes_TiposClientesEntity> GetRel_Clientes_TiposClientesPagedListXml(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRel_Clientes_TiposClientes/GetRel_Clientes_TiposClientesPaged" +
            "ListXml", ReplyAction="http://tempuri.org/IRel_Clientes_TiposClientes/GetRel_Clientes_TiposClientesPaged" +
            "ListXmlResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.Rel_Clientes_TiposClientesEntity>> GetRel_Clientes_TiposClientesPagedListXmlAsync(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRel_Clientes_TiposClientes/AddRel_Clientes_TiposClientes", ReplyAction="http://tempuri.org/IRel_Clientes_TiposClientes/AddRel_Clientes_TiposClientesRespo" +
            "nse")]
        int AddRel_Clientes_TiposClientes(Softv.Entities.Rel_Clientes_TiposClientesEntity objRel_Clientes_TiposClientes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRel_Clientes_TiposClientes/AddRel_Clientes_TiposClientes", ReplyAction="http://tempuri.org/IRel_Clientes_TiposClientes/AddRel_Clientes_TiposClientesRespo" +
            "nse")]
        System.Threading.Tasks.Task<int> AddRel_Clientes_TiposClientesAsync(Softv.Entities.Rel_Clientes_TiposClientesEntity objRel_Clientes_TiposClientes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRel_Clientes_TiposClientes/UpdateRel_Clientes_TiposClientes", ReplyAction="http://tempuri.org/IRel_Clientes_TiposClientes/UpdateRel_Clientes_TiposClientesRe" +
            "sponse")]
        int UpdateRel_Clientes_TiposClientes(Softv.Entities.Rel_Clientes_TiposClientesEntity objRel_Clientes_TiposClientes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRel_Clientes_TiposClientes/UpdateRel_Clientes_TiposClientes", ReplyAction="http://tempuri.org/IRel_Clientes_TiposClientes/UpdateRel_Clientes_TiposClientesRe" +
            "sponse")]
        System.Threading.Tasks.Task<int> UpdateRel_Clientes_TiposClientesAsync(Softv.Entities.Rel_Clientes_TiposClientesEntity objRel_Clientes_TiposClientes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRel_Clientes_TiposClientes/DeleteRel_Clientes_TiposClientes", ReplyAction="http://tempuri.org/IRel_Clientes_TiposClientes/DeleteRel_Clientes_TiposClientesRe" +
            "sponse")]
        int DeleteRel_Clientes_TiposClientes(string BaseRemoteIp, int BaseIdUser, System.Nullable<long> CONTRATO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRel_Clientes_TiposClientes/DeleteRel_Clientes_TiposClientes", ReplyAction="http://tempuri.org/IRel_Clientes_TiposClientes/DeleteRel_Clientes_TiposClientesRe" +
            "sponse")]
        System.Threading.Tasks.Task<int> DeleteRel_Clientes_TiposClientesAsync(string BaseRemoteIp, int BaseIdUser, System.Nullable<long> CONTRATO);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRel_Clientes_TiposClientesChannel : SoftvMVC.SoftvService.IRel_Clientes_TiposClientes, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Rel_Clientes_TiposClientesClient : System.ServiceModel.ClientBase<SoftvMVC.SoftvService.IRel_Clientes_TiposClientes>, SoftvMVC.SoftvService.IRel_Clientes_TiposClientes {
        
        public Rel_Clientes_TiposClientesClient() {
        }
        
        public Rel_Clientes_TiposClientesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Rel_Clientes_TiposClientesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Rel_Clientes_TiposClientesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Rel_Clientes_TiposClientesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Softv.Entities.Rel_Clientes_TiposClientesEntity GetRel_Clientes_TiposClientes(System.Nullable<long> CONTRATO) {
            return base.Channel.GetRel_Clientes_TiposClientes(CONTRATO);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.Rel_Clientes_TiposClientesEntity> GetRel_Clientes_TiposClientesAsync(System.Nullable<long> CONTRATO) {
            return base.Channel.GetRel_Clientes_TiposClientesAsync(CONTRATO);
        }
        
        public Softv.Entities.Rel_Clientes_TiposClientesEntity GetDeepRel_Clientes_TiposClientes(System.Nullable<long> CONTRATO) {
            return base.Channel.GetDeepRel_Clientes_TiposClientes(CONTRATO);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.Rel_Clientes_TiposClientesEntity> GetDeepRel_Clientes_TiposClientesAsync(System.Nullable<long> CONTRATO) {
            return base.Channel.GetDeepRel_Clientes_TiposClientesAsync(CONTRATO);
        }
        
        public System.Collections.Generic.List<Softv.Entities.Rel_Clientes_TiposClientesEntity> GetRel_Clientes_TiposClientesList() {
            return base.Channel.GetRel_Clientes_TiposClientesList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.Rel_Clientes_TiposClientesEntity>> GetRel_Clientes_TiposClientesListAsync() {
            return base.Channel.GetRel_Clientes_TiposClientesListAsync();
        }
        
        public Globals.SoftvList<Softv.Entities.Rel_Clientes_TiposClientesEntity> GetRel_Clientes_TiposClientesPagedList(int page, int pageSize) {
            return base.Channel.GetRel_Clientes_TiposClientesPagedList(page, pageSize);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.Rel_Clientes_TiposClientesEntity>> GetRel_Clientes_TiposClientesPagedListAsync(int page, int pageSize) {
            return base.Channel.GetRel_Clientes_TiposClientesPagedListAsync(page, pageSize);
        }
        
        public Globals.SoftvList<Softv.Entities.Rel_Clientes_TiposClientesEntity> GetRel_Clientes_TiposClientesPagedListXml(int page, int pageSize, string xml) {
            return base.Channel.GetRel_Clientes_TiposClientesPagedListXml(page, pageSize, xml);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.Rel_Clientes_TiposClientesEntity>> GetRel_Clientes_TiposClientesPagedListXmlAsync(int page, int pageSize, string xml) {
            return base.Channel.GetRel_Clientes_TiposClientesPagedListXmlAsync(page, pageSize, xml);
        }
        
        public int AddRel_Clientes_TiposClientes(Softv.Entities.Rel_Clientes_TiposClientesEntity objRel_Clientes_TiposClientes) {
            return base.Channel.AddRel_Clientes_TiposClientes(objRel_Clientes_TiposClientes);
        }
        
        public System.Threading.Tasks.Task<int> AddRel_Clientes_TiposClientesAsync(Softv.Entities.Rel_Clientes_TiposClientesEntity objRel_Clientes_TiposClientes) {
            return base.Channel.AddRel_Clientes_TiposClientesAsync(objRel_Clientes_TiposClientes);
        }
        
        public int UpdateRel_Clientes_TiposClientes(Softv.Entities.Rel_Clientes_TiposClientesEntity objRel_Clientes_TiposClientes) {
            return base.Channel.UpdateRel_Clientes_TiposClientes(objRel_Clientes_TiposClientes);
        }
        
        public System.Threading.Tasks.Task<int> UpdateRel_Clientes_TiposClientesAsync(Softv.Entities.Rel_Clientes_TiposClientesEntity objRel_Clientes_TiposClientes) {
            return base.Channel.UpdateRel_Clientes_TiposClientesAsync(objRel_Clientes_TiposClientes);
        }
        
        public int DeleteRel_Clientes_TiposClientes(string BaseRemoteIp, int BaseIdUser, System.Nullable<long> CONTRATO) {
            return base.Channel.DeleteRel_Clientes_TiposClientes(BaseRemoteIp, BaseIdUser, CONTRATO);
        }
        
        public System.Threading.Tasks.Task<int> DeleteRel_Clientes_TiposClientesAsync(string BaseRemoteIp, int BaseIdUser, System.Nullable<long> CONTRATO) {
            return base.Channel.DeleteRel_Clientes_TiposClientesAsync(BaseRemoteIp, BaseIdUser, CONTRATO);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SoftvService.ITipoCliente")]
    public interface ITipoCliente {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoCliente/GetTipoCliente", ReplyAction="http://tempuri.org/ITipoCliente/GetTipoClienteResponse")]
        Softv.Entities.TipoClienteEntity GetTipoCliente(System.Nullable<int> Clv_TipoCliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoCliente/GetTipoCliente", ReplyAction="http://tempuri.org/ITipoCliente/GetTipoClienteResponse")]
        System.Threading.Tasks.Task<Softv.Entities.TipoClienteEntity> GetTipoClienteAsync(System.Nullable<int> Clv_TipoCliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoCliente/GetDeepTipoCliente", ReplyAction="http://tempuri.org/ITipoCliente/GetDeepTipoClienteResponse")]
        Softv.Entities.TipoClienteEntity GetDeepTipoCliente(System.Nullable<int> Clv_TipoCliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoCliente/GetDeepTipoCliente", ReplyAction="http://tempuri.org/ITipoCliente/GetDeepTipoClienteResponse")]
        System.Threading.Tasks.Task<Softv.Entities.TipoClienteEntity> GetDeepTipoClienteAsync(System.Nullable<int> Clv_TipoCliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoCliente/GetTipoClienteList", ReplyAction="http://tempuri.org/ITipoCliente/GetTipoClienteListResponse")]
        System.Collections.Generic.List<Softv.Entities.TipoClienteEntity> GetTipoClienteList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoCliente/GetTipoClienteList", ReplyAction="http://tempuri.org/ITipoCliente/GetTipoClienteListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.TipoClienteEntity>> GetTipoClienteListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoCliente/GetTipoClientePagedList", ReplyAction="http://tempuri.org/ITipoCliente/GetTipoClientePagedListResponse")]
        Globals.SoftvList<Softv.Entities.TipoClienteEntity> GetTipoClientePagedList(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoCliente/GetTipoClientePagedList", ReplyAction="http://tempuri.org/ITipoCliente/GetTipoClientePagedListResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.TipoClienteEntity>> GetTipoClientePagedListAsync(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoCliente/GetTipoClientePagedListXml", ReplyAction="http://tempuri.org/ITipoCliente/GetTipoClientePagedListXmlResponse")]
        Globals.SoftvList<Softv.Entities.TipoClienteEntity> GetTipoClientePagedListXml(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoCliente/GetTipoClientePagedListXml", ReplyAction="http://tempuri.org/ITipoCliente/GetTipoClientePagedListXmlResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.TipoClienteEntity>> GetTipoClientePagedListXmlAsync(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoCliente/AddTipoCliente", ReplyAction="http://tempuri.org/ITipoCliente/AddTipoClienteResponse")]
        int AddTipoCliente(Softv.Entities.TipoClienteEntity objTipoCliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoCliente/AddTipoCliente", ReplyAction="http://tempuri.org/ITipoCliente/AddTipoClienteResponse")]
        System.Threading.Tasks.Task<int> AddTipoClienteAsync(Softv.Entities.TipoClienteEntity objTipoCliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoCliente/UpdateTipoCliente", ReplyAction="http://tempuri.org/ITipoCliente/UpdateTipoClienteResponse")]
        int UpdateTipoCliente(Softv.Entities.TipoClienteEntity objTipoCliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoCliente/UpdateTipoCliente", ReplyAction="http://tempuri.org/ITipoCliente/UpdateTipoClienteResponse")]
        System.Threading.Tasks.Task<int> UpdateTipoClienteAsync(Softv.Entities.TipoClienteEntity objTipoCliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoCliente/DeleteTipoCliente", ReplyAction="http://tempuri.org/ITipoCliente/DeleteTipoClienteResponse")]
        int DeleteTipoCliente(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> Clv_TipoCliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoCliente/DeleteTipoCliente", ReplyAction="http://tempuri.org/ITipoCliente/DeleteTipoClienteResponse")]
        System.Threading.Tasks.Task<int> DeleteTipoClienteAsync(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> Clv_TipoCliente);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITipoClienteChannel : SoftvMVC.SoftvService.ITipoCliente, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TipoClienteClient : System.ServiceModel.ClientBase<SoftvMVC.SoftvService.ITipoCliente>, SoftvMVC.SoftvService.ITipoCliente {
        
        public TipoClienteClient() {
        }
        
        public TipoClienteClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TipoClienteClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TipoClienteClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TipoClienteClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Softv.Entities.TipoClienteEntity GetTipoCliente(System.Nullable<int> Clv_TipoCliente) {
            return base.Channel.GetTipoCliente(Clv_TipoCliente);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.TipoClienteEntity> GetTipoClienteAsync(System.Nullable<int> Clv_TipoCliente) {
            return base.Channel.GetTipoClienteAsync(Clv_TipoCliente);
        }
        
        public Softv.Entities.TipoClienteEntity GetDeepTipoCliente(System.Nullable<int> Clv_TipoCliente) {
            return base.Channel.GetDeepTipoCliente(Clv_TipoCliente);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.TipoClienteEntity> GetDeepTipoClienteAsync(System.Nullable<int> Clv_TipoCliente) {
            return base.Channel.GetDeepTipoClienteAsync(Clv_TipoCliente);
        }
        
        public System.Collections.Generic.List<Softv.Entities.TipoClienteEntity> GetTipoClienteList() {
            return base.Channel.GetTipoClienteList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.TipoClienteEntity>> GetTipoClienteListAsync() {
            return base.Channel.GetTipoClienteListAsync();
        }
        
        public Globals.SoftvList<Softv.Entities.TipoClienteEntity> GetTipoClientePagedList(int page, int pageSize) {
            return base.Channel.GetTipoClientePagedList(page, pageSize);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.TipoClienteEntity>> GetTipoClientePagedListAsync(int page, int pageSize) {
            return base.Channel.GetTipoClientePagedListAsync(page, pageSize);
        }
        
        public Globals.SoftvList<Softv.Entities.TipoClienteEntity> GetTipoClientePagedListXml(int page, int pageSize, string xml) {
            return base.Channel.GetTipoClientePagedListXml(page, pageSize, xml);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.TipoClienteEntity>> GetTipoClientePagedListXmlAsync(int page, int pageSize, string xml) {
            return base.Channel.GetTipoClientePagedListXmlAsync(page, pageSize, xml);
        }
        
        public int AddTipoCliente(Softv.Entities.TipoClienteEntity objTipoCliente) {
            return base.Channel.AddTipoCliente(objTipoCliente);
        }
        
        public System.Threading.Tasks.Task<int> AddTipoClienteAsync(Softv.Entities.TipoClienteEntity objTipoCliente) {
            return base.Channel.AddTipoClienteAsync(objTipoCliente);
        }
        
        public int UpdateTipoCliente(Softv.Entities.TipoClienteEntity objTipoCliente) {
            return base.Channel.UpdateTipoCliente(objTipoCliente);
        }
        
        public System.Threading.Tasks.Task<int> UpdateTipoClienteAsync(Softv.Entities.TipoClienteEntity objTipoCliente) {
            return base.Channel.UpdateTipoClienteAsync(objTipoCliente);
        }
        
        public int DeleteTipoCliente(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> Clv_TipoCliente) {
            return base.Channel.DeleteTipoCliente(BaseRemoteIp, BaseIdUser, Clv_TipoCliente);
        }
        
        public System.Threading.Tasks.Task<int> DeleteTipoClienteAsync(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> Clv_TipoCliente) {
            return base.Channel.DeleteTipoClienteAsync(BaseRemoteIp, BaseIdUser, Clv_TipoCliente);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SoftvService.ICatalogoPeriodosCorte")]
    public interface ICatalogoPeriodosCorte {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogoPeriodosCorte/GetCatalogoPeriodosCorte", ReplyAction="http://tempuri.org/ICatalogoPeriodosCorte/GetCatalogoPeriodosCorteResponse")]
        Softv.Entities.CatalogoPeriodosCorteEntity GetCatalogoPeriodosCorte(System.Nullable<int> Clv_Periodo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogoPeriodosCorte/GetCatalogoPeriodosCorte", ReplyAction="http://tempuri.org/ICatalogoPeriodosCorte/GetCatalogoPeriodosCorteResponse")]
        System.Threading.Tasks.Task<Softv.Entities.CatalogoPeriodosCorteEntity> GetCatalogoPeriodosCorteAsync(System.Nullable<int> Clv_Periodo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogoPeriodosCorte/GetDeepCatalogoPeriodosCorte", ReplyAction="http://tempuri.org/ICatalogoPeriodosCorte/GetDeepCatalogoPeriodosCorteResponse")]
        Softv.Entities.CatalogoPeriodosCorteEntity GetDeepCatalogoPeriodosCorte(System.Nullable<int> Clv_Periodo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogoPeriodosCorte/GetDeepCatalogoPeriodosCorte", ReplyAction="http://tempuri.org/ICatalogoPeriodosCorte/GetDeepCatalogoPeriodosCorteResponse")]
        System.Threading.Tasks.Task<Softv.Entities.CatalogoPeriodosCorteEntity> GetDeepCatalogoPeriodosCorteAsync(System.Nullable<int> Clv_Periodo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogoPeriodosCorte/GetCatalogoPeriodosCorteList", ReplyAction="http://tempuri.org/ICatalogoPeriodosCorte/GetCatalogoPeriodosCorteListResponse")]
        System.Collections.Generic.List<Softv.Entities.CatalogoPeriodosCorteEntity> GetCatalogoPeriodosCorteList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogoPeriodosCorte/GetCatalogoPeriodosCorteList", ReplyAction="http://tempuri.org/ICatalogoPeriodosCorte/GetCatalogoPeriodosCorteListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.CatalogoPeriodosCorteEntity>> GetCatalogoPeriodosCorteListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogoPeriodosCorte/GetCatalogoPeriodosCortePagedList", ReplyAction="http://tempuri.org/ICatalogoPeriodosCorte/GetCatalogoPeriodosCortePagedListRespon" +
            "se")]
        Globals.SoftvList<Softv.Entities.CatalogoPeriodosCorteEntity> GetCatalogoPeriodosCortePagedList(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogoPeriodosCorte/GetCatalogoPeriodosCortePagedList", ReplyAction="http://tempuri.org/ICatalogoPeriodosCorte/GetCatalogoPeriodosCortePagedListRespon" +
            "se")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.CatalogoPeriodosCorteEntity>> GetCatalogoPeriodosCortePagedListAsync(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogoPeriodosCorte/GetCatalogoPeriodosCortePagedListXml", ReplyAction="http://tempuri.org/ICatalogoPeriodosCorte/GetCatalogoPeriodosCortePagedListXmlRes" +
            "ponse")]
        Globals.SoftvList<Softv.Entities.CatalogoPeriodosCorteEntity> GetCatalogoPeriodosCortePagedListXml(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogoPeriodosCorte/GetCatalogoPeriodosCortePagedListXml", ReplyAction="http://tempuri.org/ICatalogoPeriodosCorte/GetCatalogoPeriodosCortePagedListXmlRes" +
            "ponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.CatalogoPeriodosCorteEntity>> GetCatalogoPeriodosCortePagedListXmlAsync(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogoPeriodosCorte/AddCatalogoPeriodosCorte", ReplyAction="http://tempuri.org/ICatalogoPeriodosCorte/AddCatalogoPeriodosCorteResponse")]
        int AddCatalogoPeriodosCorte(Softv.Entities.CatalogoPeriodosCorteEntity objCatalogoPeriodosCorte);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogoPeriodosCorte/AddCatalogoPeriodosCorte", ReplyAction="http://tempuri.org/ICatalogoPeriodosCorte/AddCatalogoPeriodosCorteResponse")]
        System.Threading.Tasks.Task<int> AddCatalogoPeriodosCorteAsync(Softv.Entities.CatalogoPeriodosCorteEntity objCatalogoPeriodosCorte);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogoPeriodosCorte/UpdateCatalogoPeriodosCorte", ReplyAction="http://tempuri.org/ICatalogoPeriodosCorte/UpdateCatalogoPeriodosCorteResponse")]
        int UpdateCatalogoPeriodosCorte(Softv.Entities.CatalogoPeriodosCorteEntity objCatalogoPeriodosCorte);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogoPeriodosCorte/UpdateCatalogoPeriodosCorte", ReplyAction="http://tempuri.org/ICatalogoPeriodosCorte/UpdateCatalogoPeriodosCorteResponse")]
        System.Threading.Tasks.Task<int> UpdateCatalogoPeriodosCorteAsync(Softv.Entities.CatalogoPeriodosCorteEntity objCatalogoPeriodosCorte);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogoPeriodosCorte/DeleteCatalogoPeriodosCorte", ReplyAction="http://tempuri.org/ICatalogoPeriodosCorte/DeleteCatalogoPeriodosCorteResponse")]
        int DeleteCatalogoPeriodosCorte(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> Clv_Periodo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogoPeriodosCorte/DeleteCatalogoPeriodosCorte", ReplyAction="http://tempuri.org/ICatalogoPeriodosCorte/DeleteCatalogoPeriodosCorteResponse")]
        System.Threading.Tasks.Task<int> DeleteCatalogoPeriodosCorteAsync(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> Clv_Periodo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICatalogoPeriodosCorteChannel : SoftvMVC.SoftvService.ICatalogoPeriodosCorte, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CatalogoPeriodosCorteClient : System.ServiceModel.ClientBase<SoftvMVC.SoftvService.ICatalogoPeriodosCorte>, SoftvMVC.SoftvService.ICatalogoPeriodosCorte {
        
        public CatalogoPeriodosCorteClient() {
        }
        
        public CatalogoPeriodosCorteClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CatalogoPeriodosCorteClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CatalogoPeriodosCorteClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CatalogoPeriodosCorteClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Softv.Entities.CatalogoPeriodosCorteEntity GetCatalogoPeriodosCorte(System.Nullable<int> Clv_Periodo) {
            return base.Channel.GetCatalogoPeriodosCorte(Clv_Periodo);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.CatalogoPeriodosCorteEntity> GetCatalogoPeriodosCorteAsync(System.Nullable<int> Clv_Periodo) {
            return base.Channel.GetCatalogoPeriodosCorteAsync(Clv_Periodo);
        }
        
        public Softv.Entities.CatalogoPeriodosCorteEntity GetDeepCatalogoPeriodosCorte(System.Nullable<int> Clv_Periodo) {
            return base.Channel.GetDeepCatalogoPeriodosCorte(Clv_Periodo);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.CatalogoPeriodosCorteEntity> GetDeepCatalogoPeriodosCorteAsync(System.Nullable<int> Clv_Periodo) {
            return base.Channel.GetDeepCatalogoPeriodosCorteAsync(Clv_Periodo);
        }
        
        public System.Collections.Generic.List<Softv.Entities.CatalogoPeriodosCorteEntity> GetCatalogoPeriodosCorteList() {
            return base.Channel.GetCatalogoPeriodosCorteList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.CatalogoPeriodosCorteEntity>> GetCatalogoPeriodosCorteListAsync() {
            return base.Channel.GetCatalogoPeriodosCorteListAsync();
        }
        
        public Globals.SoftvList<Softv.Entities.CatalogoPeriodosCorteEntity> GetCatalogoPeriodosCortePagedList(int page, int pageSize) {
            return base.Channel.GetCatalogoPeriodosCortePagedList(page, pageSize);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.CatalogoPeriodosCorteEntity>> GetCatalogoPeriodosCortePagedListAsync(int page, int pageSize) {
            return base.Channel.GetCatalogoPeriodosCortePagedListAsync(page, pageSize);
        }
        
        public Globals.SoftvList<Softv.Entities.CatalogoPeriodosCorteEntity> GetCatalogoPeriodosCortePagedListXml(int page, int pageSize, string xml) {
            return base.Channel.GetCatalogoPeriodosCortePagedListXml(page, pageSize, xml);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.CatalogoPeriodosCorteEntity>> GetCatalogoPeriodosCortePagedListXmlAsync(int page, int pageSize, string xml) {
            return base.Channel.GetCatalogoPeriodosCortePagedListXmlAsync(page, pageSize, xml);
        }
        
        public int AddCatalogoPeriodosCorte(Softv.Entities.CatalogoPeriodosCorteEntity objCatalogoPeriodosCorte) {
            return base.Channel.AddCatalogoPeriodosCorte(objCatalogoPeriodosCorte);
        }
        
        public System.Threading.Tasks.Task<int> AddCatalogoPeriodosCorteAsync(Softv.Entities.CatalogoPeriodosCorteEntity objCatalogoPeriodosCorte) {
            return base.Channel.AddCatalogoPeriodosCorteAsync(objCatalogoPeriodosCorte);
        }
        
        public int UpdateCatalogoPeriodosCorte(Softv.Entities.CatalogoPeriodosCorteEntity objCatalogoPeriodosCorte) {
            return base.Channel.UpdateCatalogoPeriodosCorte(objCatalogoPeriodosCorte);
        }
        
        public System.Threading.Tasks.Task<int> UpdateCatalogoPeriodosCorteAsync(Softv.Entities.CatalogoPeriodosCorteEntity objCatalogoPeriodosCorte) {
            return base.Channel.UpdateCatalogoPeriodosCorteAsync(objCatalogoPeriodosCorte);
        }
        
        public int DeleteCatalogoPeriodosCorte(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> Clv_Periodo) {
            return base.Channel.DeleteCatalogoPeriodosCorte(BaseRemoteIp, BaseIdUser, Clv_Periodo);
        }
        
        public System.Threading.Tasks.Task<int> DeleteCatalogoPeriodosCorteAsync(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> Clv_Periodo) {
            return base.Channel.DeleteCatalogoPeriodosCorteAsync(BaseRemoteIp, BaseIdUser, Clv_Periodo);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SoftvService.ICliente_Apellido")]
    public interface ICliente_Apellido {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICliente_Apellido/GetCliente_Apellido", ReplyAction="http://tempuri.org/ICliente_Apellido/GetCliente_ApellidoResponse")]
        Softv.Entities.Cliente_ApellidoEntity GetCliente_Apellido(System.Nullable<long> Contrato);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICliente_Apellido/GetCliente_Apellido", ReplyAction="http://tempuri.org/ICliente_Apellido/GetCliente_ApellidoResponse")]
        System.Threading.Tasks.Task<Softv.Entities.Cliente_ApellidoEntity> GetCliente_ApellidoAsync(System.Nullable<long> Contrato);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICliente_Apellido/GetDeepCliente_Apellido", ReplyAction="http://tempuri.org/ICliente_Apellido/GetDeepCliente_ApellidoResponse")]
        Softv.Entities.Cliente_ApellidoEntity GetDeepCliente_Apellido(System.Nullable<long> Contrato);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICliente_Apellido/GetDeepCliente_Apellido", ReplyAction="http://tempuri.org/ICliente_Apellido/GetDeepCliente_ApellidoResponse")]
        System.Threading.Tasks.Task<Softv.Entities.Cliente_ApellidoEntity> GetDeepCliente_ApellidoAsync(System.Nullable<long> Contrato);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICliente_Apellido/GetCliente_ApellidoList", ReplyAction="http://tempuri.org/ICliente_Apellido/GetCliente_ApellidoListResponse")]
        System.Collections.Generic.List<Softv.Entities.Cliente_ApellidoEntity> GetCliente_ApellidoList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICliente_Apellido/GetCliente_ApellidoList", ReplyAction="http://tempuri.org/ICliente_Apellido/GetCliente_ApellidoListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.Cliente_ApellidoEntity>> GetCliente_ApellidoListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICliente_Apellido/GetCliente_ApellidoPagedList", ReplyAction="http://tempuri.org/ICliente_Apellido/GetCliente_ApellidoPagedListResponse")]
        Globals.SoftvList<Softv.Entities.Cliente_ApellidoEntity> GetCliente_ApellidoPagedList(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICliente_Apellido/GetCliente_ApellidoPagedList", ReplyAction="http://tempuri.org/ICliente_Apellido/GetCliente_ApellidoPagedListResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.Cliente_ApellidoEntity>> GetCliente_ApellidoPagedListAsync(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICliente_Apellido/GetCliente_ApellidoPagedListXml", ReplyAction="http://tempuri.org/ICliente_Apellido/GetCliente_ApellidoPagedListXmlResponse")]
        Globals.SoftvList<Softv.Entities.Cliente_ApellidoEntity> GetCliente_ApellidoPagedListXml(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICliente_Apellido/GetCliente_ApellidoPagedListXml", ReplyAction="http://tempuri.org/ICliente_Apellido/GetCliente_ApellidoPagedListXmlResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.Cliente_ApellidoEntity>> GetCliente_ApellidoPagedListXmlAsync(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICliente_Apellido/AddCliente_Apellido", ReplyAction="http://tempuri.org/ICliente_Apellido/AddCliente_ApellidoResponse")]
        int AddCliente_Apellido(Softv.Entities.Cliente_ApellidoEntity objCliente_Apellido);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICliente_Apellido/AddCliente_Apellido", ReplyAction="http://tempuri.org/ICliente_Apellido/AddCliente_ApellidoResponse")]
        System.Threading.Tasks.Task<int> AddCliente_ApellidoAsync(Softv.Entities.Cliente_ApellidoEntity objCliente_Apellido);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICliente_Apellido/UpdateCliente_Apellido", ReplyAction="http://tempuri.org/ICliente_Apellido/UpdateCliente_ApellidoResponse")]
        int UpdateCliente_Apellido(Softv.Entities.Cliente_ApellidoEntity objCliente_Apellido);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICliente_Apellido/UpdateCliente_Apellido", ReplyAction="http://tempuri.org/ICliente_Apellido/UpdateCliente_ApellidoResponse")]
        System.Threading.Tasks.Task<int> UpdateCliente_ApellidoAsync(Softv.Entities.Cliente_ApellidoEntity objCliente_Apellido);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICliente_Apellido/DeleteCliente_Apellido", ReplyAction="http://tempuri.org/ICliente_Apellido/DeleteCliente_ApellidoResponse")]
        int DeleteCliente_Apellido(string BaseRemoteIp, int BaseIdUser, System.Nullable<long> Contrato);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICliente_Apellido/DeleteCliente_Apellido", ReplyAction="http://tempuri.org/ICliente_Apellido/DeleteCliente_ApellidoResponse")]
        System.Threading.Tasks.Task<int> DeleteCliente_ApellidoAsync(string BaseRemoteIp, int BaseIdUser, System.Nullable<long> Contrato);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICliente_ApellidoChannel : SoftvMVC.SoftvService.ICliente_Apellido, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Cliente_ApellidoClient : System.ServiceModel.ClientBase<SoftvMVC.SoftvService.ICliente_Apellido>, SoftvMVC.SoftvService.ICliente_Apellido {
        
        public Cliente_ApellidoClient() {
        }
        
        public Cliente_ApellidoClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Cliente_ApellidoClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Cliente_ApellidoClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Cliente_ApellidoClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Softv.Entities.Cliente_ApellidoEntity GetCliente_Apellido(System.Nullable<long> Contrato) {
            return base.Channel.GetCliente_Apellido(Contrato);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.Cliente_ApellidoEntity> GetCliente_ApellidoAsync(System.Nullable<long> Contrato) {
            return base.Channel.GetCliente_ApellidoAsync(Contrato);
        }
        
        public Softv.Entities.Cliente_ApellidoEntity GetDeepCliente_Apellido(System.Nullable<long> Contrato) {
            return base.Channel.GetDeepCliente_Apellido(Contrato);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.Cliente_ApellidoEntity> GetDeepCliente_ApellidoAsync(System.Nullable<long> Contrato) {
            return base.Channel.GetDeepCliente_ApellidoAsync(Contrato);
        }
        
        public System.Collections.Generic.List<Softv.Entities.Cliente_ApellidoEntity> GetCliente_ApellidoList() {
            return base.Channel.GetCliente_ApellidoList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.Cliente_ApellidoEntity>> GetCliente_ApellidoListAsync() {
            return base.Channel.GetCliente_ApellidoListAsync();
        }
        
        public Globals.SoftvList<Softv.Entities.Cliente_ApellidoEntity> GetCliente_ApellidoPagedList(int page, int pageSize) {
            return base.Channel.GetCliente_ApellidoPagedList(page, pageSize);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.Cliente_ApellidoEntity>> GetCliente_ApellidoPagedListAsync(int page, int pageSize) {
            return base.Channel.GetCliente_ApellidoPagedListAsync(page, pageSize);
        }
        
        public Globals.SoftvList<Softv.Entities.Cliente_ApellidoEntity> GetCliente_ApellidoPagedListXml(int page, int pageSize, string xml) {
            return base.Channel.GetCliente_ApellidoPagedListXml(page, pageSize, xml);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.Cliente_ApellidoEntity>> GetCliente_ApellidoPagedListXmlAsync(int page, int pageSize, string xml) {
            return base.Channel.GetCliente_ApellidoPagedListXmlAsync(page, pageSize, xml);
        }
        
        public int AddCliente_Apellido(Softv.Entities.Cliente_ApellidoEntity objCliente_Apellido) {
            return base.Channel.AddCliente_Apellido(objCliente_Apellido);
        }
        
        public System.Threading.Tasks.Task<int> AddCliente_ApellidoAsync(Softv.Entities.Cliente_ApellidoEntity objCliente_Apellido) {
            return base.Channel.AddCliente_ApellidoAsync(objCliente_Apellido);
        }
        
        public int UpdateCliente_Apellido(Softv.Entities.Cliente_ApellidoEntity objCliente_Apellido) {
            return base.Channel.UpdateCliente_Apellido(objCliente_Apellido);
        }
        
        public System.Threading.Tasks.Task<int> UpdateCliente_ApellidoAsync(Softv.Entities.Cliente_ApellidoEntity objCliente_Apellido) {
            return base.Channel.UpdateCliente_ApellidoAsync(objCliente_Apellido);
        }
        
        public int DeleteCliente_Apellido(string BaseRemoteIp, int BaseIdUser, System.Nullable<long> Contrato) {
            return base.Channel.DeleteCliente_Apellido(BaseRemoteIp, BaseIdUser, Contrato);
        }
        
        public System.Threading.Tasks.Task<int> DeleteCliente_ApellidoAsync(string BaseRemoteIp, int BaseIdUser, System.Nullable<long> Contrato) {
            return base.Channel.DeleteCliente_ApellidoAsync(BaseRemoteIp, BaseIdUser, Contrato);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SoftvService.ITap")]
    public interface ITap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITap/GetTap", ReplyAction="http://tempuri.org/ITap/GetTapResponse")]
        Softv.Entities.TapEntity GetTap(System.Nullable<int> IdTap);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITap/GetTap", ReplyAction="http://tempuri.org/ITap/GetTapResponse")]
        System.Threading.Tasks.Task<Softv.Entities.TapEntity> GetTapAsync(System.Nullable<int> IdTap);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITap/GetDeepTap", ReplyAction="http://tempuri.org/ITap/GetDeepTapResponse")]
        Softv.Entities.TapEntity GetDeepTap(System.Nullable<int> IdTap);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITap/GetDeepTap", ReplyAction="http://tempuri.org/ITap/GetDeepTapResponse")]
        System.Threading.Tasks.Task<Softv.Entities.TapEntity> GetDeepTapAsync(System.Nullable<int> IdTap);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITap/GetTapList", ReplyAction="http://tempuri.org/ITap/GetTapListResponse")]
        System.Collections.Generic.List<Softv.Entities.TapEntity> GetTapList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITap/GetTapList", ReplyAction="http://tempuri.org/ITap/GetTapListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.TapEntity>> GetTapListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITap/GetTapPagedList", ReplyAction="http://tempuri.org/ITap/GetTapPagedListResponse")]
        Globals.SoftvList<Softv.Entities.TapEntity> GetTapPagedList(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITap/GetTapPagedList", ReplyAction="http://tempuri.org/ITap/GetTapPagedListResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.TapEntity>> GetTapPagedListAsync(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITap/GetTapPagedListXml", ReplyAction="http://tempuri.org/ITap/GetTapPagedListXmlResponse")]
        Globals.SoftvList<Softv.Entities.TapEntity> GetTapPagedListXml(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITap/GetTapPagedListXml", ReplyAction="http://tempuri.org/ITap/GetTapPagedListXmlResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.TapEntity>> GetTapPagedListXmlAsync(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITap/AddTap", ReplyAction="http://tempuri.org/ITap/AddTapResponse")]
        int AddTap(Softv.Entities.TapEntity objTap);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITap/AddTap", ReplyAction="http://tempuri.org/ITap/AddTapResponse")]
        System.Threading.Tasks.Task<int> AddTapAsync(Softv.Entities.TapEntity objTap);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITap/UpdateTap", ReplyAction="http://tempuri.org/ITap/UpdateTapResponse")]
        int UpdateTap(Softv.Entities.TapEntity objTap);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITap/UpdateTap", ReplyAction="http://tempuri.org/ITap/UpdateTapResponse")]
        System.Threading.Tasks.Task<int> UpdateTapAsync(Softv.Entities.TapEntity objTap);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITap/DeleteTap", ReplyAction="http://tempuri.org/ITap/DeleteTapResponse")]
        int DeleteTap(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> IdTap);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITap/DeleteTap", ReplyAction="http://tempuri.org/ITap/DeleteTapResponse")]
        System.Threading.Tasks.Task<int> DeleteTapAsync(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> IdTap);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITapChannel : SoftvMVC.SoftvService.ITap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TapClient : System.ServiceModel.ClientBase<SoftvMVC.SoftvService.ITap>, SoftvMVC.SoftvService.ITap {
        
        public TapClient() {
        }
        
        public TapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Softv.Entities.TapEntity GetTap(System.Nullable<int> IdTap) {
            return base.Channel.GetTap(IdTap);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.TapEntity> GetTapAsync(System.Nullable<int> IdTap) {
            return base.Channel.GetTapAsync(IdTap);
        }
        
        public Softv.Entities.TapEntity GetDeepTap(System.Nullable<int> IdTap) {
            return base.Channel.GetDeepTap(IdTap);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.TapEntity> GetDeepTapAsync(System.Nullable<int> IdTap) {
            return base.Channel.GetDeepTapAsync(IdTap);
        }
        
        public System.Collections.Generic.List<Softv.Entities.TapEntity> GetTapList() {
            return base.Channel.GetTapList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.TapEntity>> GetTapListAsync() {
            return base.Channel.GetTapListAsync();
        }
        
        public Globals.SoftvList<Softv.Entities.TapEntity> GetTapPagedList(int page, int pageSize) {
            return base.Channel.GetTapPagedList(page, pageSize);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.TapEntity>> GetTapPagedListAsync(int page, int pageSize) {
            return base.Channel.GetTapPagedListAsync(page, pageSize);
        }
        
        public Globals.SoftvList<Softv.Entities.TapEntity> GetTapPagedListXml(int page, int pageSize, string xml) {
            return base.Channel.GetTapPagedListXml(page, pageSize, xml);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.TapEntity>> GetTapPagedListXmlAsync(int page, int pageSize, string xml) {
            return base.Channel.GetTapPagedListXmlAsync(page, pageSize, xml);
        }
        
        public int AddTap(Softv.Entities.TapEntity objTap) {
            return base.Channel.AddTap(objTap);
        }
        
        public System.Threading.Tasks.Task<int> AddTapAsync(Softv.Entities.TapEntity objTap) {
            return base.Channel.AddTapAsync(objTap);
        }
        
        public int UpdateTap(Softv.Entities.TapEntity objTap) {
            return base.Channel.UpdateTap(objTap);
        }
        
        public System.Threading.Tasks.Task<int> UpdateTapAsync(Softv.Entities.TapEntity objTap) {
            return base.Channel.UpdateTapAsync(objTap);
        }
        
        public int DeleteTap(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> IdTap) {
            return base.Channel.DeleteTap(BaseRemoteIp, BaseIdUser, IdTap);
        }
        
        public System.Threading.Tasks.Task<int> DeleteTapAsync(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> IdTap) {
            return base.Channel.DeleteTapAsync(BaseRemoteIp, BaseIdUser, IdTap);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SoftvService.IDatoFiscal")]
    public interface IDatoFiscal {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatoFiscal/GetDatoFiscal", ReplyAction="http://tempuri.org/IDatoFiscal/GetDatoFiscalResponse")]
        Softv.Entities.DatoFiscalEntity GetDatoFiscal(System.Nullable<long> Contrato);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatoFiscal/GetDatoFiscal", ReplyAction="http://tempuri.org/IDatoFiscal/GetDatoFiscalResponse")]
        System.Threading.Tasks.Task<Softv.Entities.DatoFiscalEntity> GetDatoFiscalAsync(System.Nullable<long> Contrato);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatoFiscal/GetDeepDatoFiscal", ReplyAction="http://tempuri.org/IDatoFiscal/GetDeepDatoFiscalResponse")]
        Softv.Entities.DatoFiscalEntity GetDeepDatoFiscal(System.Nullable<long> Contrato);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatoFiscal/GetDeepDatoFiscal", ReplyAction="http://tempuri.org/IDatoFiscal/GetDeepDatoFiscalResponse")]
        System.Threading.Tasks.Task<Softv.Entities.DatoFiscalEntity> GetDeepDatoFiscalAsync(System.Nullable<long> Contrato);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatoFiscal/GetDatoFiscalList", ReplyAction="http://tempuri.org/IDatoFiscal/GetDatoFiscalListResponse")]
        System.Collections.Generic.List<Softv.Entities.DatoFiscalEntity> GetDatoFiscalList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatoFiscal/GetDatoFiscalList", ReplyAction="http://tempuri.org/IDatoFiscal/GetDatoFiscalListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.DatoFiscalEntity>> GetDatoFiscalListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatoFiscal/GetDatoFiscalPagedList", ReplyAction="http://tempuri.org/IDatoFiscal/GetDatoFiscalPagedListResponse")]
        Globals.SoftvList<Softv.Entities.DatoFiscalEntity> GetDatoFiscalPagedList(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatoFiscal/GetDatoFiscalPagedList", ReplyAction="http://tempuri.org/IDatoFiscal/GetDatoFiscalPagedListResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.DatoFiscalEntity>> GetDatoFiscalPagedListAsync(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatoFiscal/GetDatoFiscalPagedListXml", ReplyAction="http://tempuri.org/IDatoFiscal/GetDatoFiscalPagedListXmlResponse")]
        Globals.SoftvList<Softv.Entities.DatoFiscalEntity> GetDatoFiscalPagedListXml(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatoFiscal/GetDatoFiscalPagedListXml", ReplyAction="http://tempuri.org/IDatoFiscal/GetDatoFiscalPagedListXmlResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.DatoFiscalEntity>> GetDatoFiscalPagedListXmlAsync(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatoFiscal/AddDatoFiscal", ReplyAction="http://tempuri.org/IDatoFiscal/AddDatoFiscalResponse")]
        int AddDatoFiscal(Softv.Entities.DatoFiscalEntity objDatoFiscal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatoFiscal/AddDatoFiscal", ReplyAction="http://tempuri.org/IDatoFiscal/AddDatoFiscalResponse")]
        System.Threading.Tasks.Task<int> AddDatoFiscalAsync(Softv.Entities.DatoFiscalEntity objDatoFiscal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatoFiscal/UpdateDatoFiscal", ReplyAction="http://tempuri.org/IDatoFiscal/UpdateDatoFiscalResponse")]
        int UpdateDatoFiscal(Softv.Entities.DatoFiscalEntity objDatoFiscal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatoFiscal/UpdateDatoFiscal", ReplyAction="http://tempuri.org/IDatoFiscal/UpdateDatoFiscalResponse")]
        System.Threading.Tasks.Task<int> UpdateDatoFiscalAsync(Softv.Entities.DatoFiscalEntity objDatoFiscal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatoFiscal/DeleteDatoFiscal", ReplyAction="http://tempuri.org/IDatoFiscal/DeleteDatoFiscalResponse")]
        int DeleteDatoFiscal(string BaseRemoteIp, int BaseIdUser, System.Nullable<long> Contrato);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatoFiscal/DeleteDatoFiscal", ReplyAction="http://tempuri.org/IDatoFiscal/DeleteDatoFiscalResponse")]
        System.Threading.Tasks.Task<int> DeleteDatoFiscalAsync(string BaseRemoteIp, int BaseIdUser, System.Nullable<long> Contrato);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDatoFiscalChannel : SoftvMVC.SoftvService.IDatoFiscal, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DatoFiscalClient : System.ServiceModel.ClientBase<SoftvMVC.SoftvService.IDatoFiscal>, SoftvMVC.SoftvService.IDatoFiscal {
        
        public DatoFiscalClient() {
        }
        
        public DatoFiscalClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DatoFiscalClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DatoFiscalClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DatoFiscalClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Softv.Entities.DatoFiscalEntity GetDatoFiscal(System.Nullable<long> Contrato) {
            return base.Channel.GetDatoFiscal(Contrato);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.DatoFiscalEntity> GetDatoFiscalAsync(System.Nullable<long> Contrato) {
            return base.Channel.GetDatoFiscalAsync(Contrato);
        }
        
        public Softv.Entities.DatoFiscalEntity GetDeepDatoFiscal(System.Nullable<long> Contrato) {
            return base.Channel.GetDeepDatoFiscal(Contrato);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.DatoFiscalEntity> GetDeepDatoFiscalAsync(System.Nullable<long> Contrato) {
            return base.Channel.GetDeepDatoFiscalAsync(Contrato);
        }
        
        public System.Collections.Generic.List<Softv.Entities.DatoFiscalEntity> GetDatoFiscalList() {
            return base.Channel.GetDatoFiscalList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.DatoFiscalEntity>> GetDatoFiscalListAsync() {
            return base.Channel.GetDatoFiscalListAsync();
        }
        
        public Globals.SoftvList<Softv.Entities.DatoFiscalEntity> GetDatoFiscalPagedList(int page, int pageSize) {
            return base.Channel.GetDatoFiscalPagedList(page, pageSize);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.DatoFiscalEntity>> GetDatoFiscalPagedListAsync(int page, int pageSize) {
            return base.Channel.GetDatoFiscalPagedListAsync(page, pageSize);
        }
        
        public Globals.SoftvList<Softv.Entities.DatoFiscalEntity> GetDatoFiscalPagedListXml(int page, int pageSize, string xml) {
            return base.Channel.GetDatoFiscalPagedListXml(page, pageSize, xml);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.DatoFiscalEntity>> GetDatoFiscalPagedListXmlAsync(int page, int pageSize, string xml) {
            return base.Channel.GetDatoFiscalPagedListXmlAsync(page, pageSize, xml);
        }
        
        public int AddDatoFiscal(Softv.Entities.DatoFiscalEntity objDatoFiscal) {
            return base.Channel.AddDatoFiscal(objDatoFiscal);
        }
        
        public System.Threading.Tasks.Task<int> AddDatoFiscalAsync(Softv.Entities.DatoFiscalEntity objDatoFiscal) {
            return base.Channel.AddDatoFiscalAsync(objDatoFiscal);
        }
        
        public int UpdateDatoFiscal(Softv.Entities.DatoFiscalEntity objDatoFiscal) {
            return base.Channel.UpdateDatoFiscal(objDatoFiscal);
        }
        
        public System.Threading.Tasks.Task<int> UpdateDatoFiscalAsync(Softv.Entities.DatoFiscalEntity objDatoFiscal) {
            return base.Channel.UpdateDatoFiscalAsync(objDatoFiscal);
        }
        
        public int DeleteDatoFiscal(string BaseRemoteIp, int BaseIdUser, System.Nullable<long> Contrato) {
            return base.Channel.DeleteDatoFiscal(BaseRemoteIp, BaseIdUser, Contrato);
        }
        
        public System.Threading.Tasks.Task<int> DeleteDatoFiscalAsync(string BaseRemoteIp, int BaseIdUser, System.Nullable<long> Contrato) {
            return base.Channel.DeleteDatoFiscalAsync(BaseRemoteIp, BaseIdUser, Contrato);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SoftvService.ITrabajo")]
    public interface ITrabajo {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrabajo/GetTrabajo", ReplyAction="http://tempuri.org/ITrabajo/GetTrabajoResponse")]
        Softv.Entities.TrabajoEntity GetTrabajo(System.Nullable<int> Clv_Trabajo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrabajo/GetTrabajo", ReplyAction="http://tempuri.org/ITrabajo/GetTrabajoResponse")]
        System.Threading.Tasks.Task<Softv.Entities.TrabajoEntity> GetTrabajoAsync(System.Nullable<int> Clv_Trabajo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrabajo/GetDeepTrabajo", ReplyAction="http://tempuri.org/ITrabajo/GetDeepTrabajoResponse")]
        Softv.Entities.TrabajoEntity GetDeepTrabajo(System.Nullable<int> Clv_Trabajo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrabajo/GetDeepTrabajo", ReplyAction="http://tempuri.org/ITrabajo/GetDeepTrabajoResponse")]
        System.Threading.Tasks.Task<Softv.Entities.TrabajoEntity> GetDeepTrabajoAsync(System.Nullable<int> Clv_Trabajo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrabajo/GetTrabajoList", ReplyAction="http://tempuri.org/ITrabajo/GetTrabajoListResponse")]
        System.Collections.Generic.List<Softv.Entities.TrabajoEntity> GetTrabajoList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrabajo/GetTrabajoList", ReplyAction="http://tempuri.org/ITrabajo/GetTrabajoListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.TrabajoEntity>> GetTrabajoListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrabajo/GetTrabajoPagedList", ReplyAction="http://tempuri.org/ITrabajo/GetTrabajoPagedListResponse")]
        Globals.SoftvList<Softv.Entities.TrabajoEntity> GetTrabajoPagedList(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrabajo/GetTrabajoPagedList", ReplyAction="http://tempuri.org/ITrabajo/GetTrabajoPagedListResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.TrabajoEntity>> GetTrabajoPagedListAsync(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrabajo/GetTrabajoPagedListXml", ReplyAction="http://tempuri.org/ITrabajo/GetTrabajoPagedListXmlResponse")]
        Globals.SoftvList<Softv.Entities.TrabajoEntity> GetTrabajoPagedListXml(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrabajo/GetTrabajoPagedListXml", ReplyAction="http://tempuri.org/ITrabajo/GetTrabajoPagedListXmlResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.TrabajoEntity>> GetTrabajoPagedListXmlAsync(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrabajo/AddTrabajo", ReplyAction="http://tempuri.org/ITrabajo/AddTrabajoResponse")]
        int AddTrabajo(Softv.Entities.TrabajoEntity objTrabajo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrabajo/AddTrabajo", ReplyAction="http://tempuri.org/ITrabajo/AddTrabajoResponse")]
        System.Threading.Tasks.Task<int> AddTrabajoAsync(Softv.Entities.TrabajoEntity objTrabajo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrabajo/UpdateTrabajo", ReplyAction="http://tempuri.org/ITrabajo/UpdateTrabajoResponse")]
        int UpdateTrabajo(Softv.Entities.TrabajoEntity objTrabajo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrabajo/UpdateTrabajo", ReplyAction="http://tempuri.org/ITrabajo/UpdateTrabajoResponse")]
        System.Threading.Tasks.Task<int> UpdateTrabajoAsync(Softv.Entities.TrabajoEntity objTrabajo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrabajo/DeleteTrabajo", ReplyAction="http://tempuri.org/ITrabajo/DeleteTrabajoResponse")]
        int DeleteTrabajo(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> Clv_Trabajo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrabajo/DeleteTrabajo", ReplyAction="http://tempuri.org/ITrabajo/DeleteTrabajoResponse")]
        System.Threading.Tasks.Task<int> DeleteTrabajoAsync(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> Clv_Trabajo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITrabajoChannel : SoftvMVC.SoftvService.ITrabajo, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TrabajoClient : System.ServiceModel.ClientBase<SoftvMVC.SoftvService.ITrabajo>, SoftvMVC.SoftvService.ITrabajo {
        
        public TrabajoClient() {
        }
        
        public TrabajoClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TrabajoClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TrabajoClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TrabajoClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Softv.Entities.TrabajoEntity GetTrabajo(System.Nullable<int> Clv_Trabajo) {
            return base.Channel.GetTrabajo(Clv_Trabajo);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.TrabajoEntity> GetTrabajoAsync(System.Nullable<int> Clv_Trabajo) {
            return base.Channel.GetTrabajoAsync(Clv_Trabajo);
        }
        
        public Softv.Entities.TrabajoEntity GetDeepTrabajo(System.Nullable<int> Clv_Trabajo) {
            return base.Channel.GetDeepTrabajo(Clv_Trabajo);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.TrabajoEntity> GetDeepTrabajoAsync(System.Nullable<int> Clv_Trabajo) {
            return base.Channel.GetDeepTrabajoAsync(Clv_Trabajo);
        }
        
        public System.Collections.Generic.List<Softv.Entities.TrabajoEntity> GetTrabajoList() {
            return base.Channel.GetTrabajoList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.TrabajoEntity>> GetTrabajoListAsync() {
            return base.Channel.GetTrabajoListAsync();
        }
        
        public Globals.SoftvList<Softv.Entities.TrabajoEntity> GetTrabajoPagedList(int page, int pageSize) {
            return base.Channel.GetTrabajoPagedList(page, pageSize);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.TrabajoEntity>> GetTrabajoPagedListAsync(int page, int pageSize) {
            return base.Channel.GetTrabajoPagedListAsync(page, pageSize);
        }
        
        public Globals.SoftvList<Softv.Entities.TrabajoEntity> GetTrabajoPagedListXml(int page, int pageSize, string xml) {
            return base.Channel.GetTrabajoPagedListXml(page, pageSize, xml);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.TrabajoEntity>> GetTrabajoPagedListXmlAsync(int page, int pageSize, string xml) {
            return base.Channel.GetTrabajoPagedListXmlAsync(page, pageSize, xml);
        }
        
        public int AddTrabajo(Softv.Entities.TrabajoEntity objTrabajo) {
            return base.Channel.AddTrabajo(objTrabajo);
        }
        
        public System.Threading.Tasks.Task<int> AddTrabajoAsync(Softv.Entities.TrabajoEntity objTrabajo) {
            return base.Channel.AddTrabajoAsync(objTrabajo);
        }
        
        public int UpdateTrabajo(Softv.Entities.TrabajoEntity objTrabajo) {
            return base.Channel.UpdateTrabajo(objTrabajo);
        }
        
        public System.Threading.Tasks.Task<int> UpdateTrabajoAsync(Softv.Entities.TrabajoEntity objTrabajo) {
            return base.Channel.UpdateTrabajoAsync(objTrabajo);
        }
        
        public int DeleteTrabajo(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> Clv_Trabajo) {
            return base.Channel.DeleteTrabajo(BaseRemoteIp, BaseIdUser, Clv_Trabajo);
        }
        
        public System.Threading.Tasks.Task<int> DeleteTrabajoAsync(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> Clv_Trabajo) {
            return base.Channel.DeleteTrabajoAsync(BaseRemoteIp, BaseIdUser, Clv_Trabajo);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SoftvService.ITipServ")]
    public interface ITipServ {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipServ/GetTipServ", ReplyAction="http://tempuri.org/ITipServ/GetTipServResponse")]
        Softv.Entities.TipServEntity GetTipServ(System.Nullable<int> Clv_TipSer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipServ/GetTipServ", ReplyAction="http://tempuri.org/ITipServ/GetTipServResponse")]
        System.Threading.Tasks.Task<Softv.Entities.TipServEntity> GetTipServAsync(System.Nullable<int> Clv_TipSer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipServ/GetDeepTipServ", ReplyAction="http://tempuri.org/ITipServ/GetDeepTipServResponse")]
        Softv.Entities.TipServEntity GetDeepTipServ(System.Nullable<int> Clv_TipSer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipServ/GetDeepTipServ", ReplyAction="http://tempuri.org/ITipServ/GetDeepTipServResponse")]
        System.Threading.Tasks.Task<Softv.Entities.TipServEntity> GetDeepTipServAsync(System.Nullable<int> Clv_TipSer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipServ/GetTipServList", ReplyAction="http://tempuri.org/ITipServ/GetTipServListResponse")]
        System.Collections.Generic.List<Softv.Entities.TipServEntity> GetTipServList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipServ/GetTipServList", ReplyAction="http://tempuri.org/ITipServ/GetTipServListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.TipServEntity>> GetTipServListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipServ/GetTipServPagedList", ReplyAction="http://tempuri.org/ITipServ/GetTipServPagedListResponse")]
        Globals.SoftvList<Softv.Entities.TipServEntity> GetTipServPagedList(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipServ/GetTipServPagedList", ReplyAction="http://tempuri.org/ITipServ/GetTipServPagedListResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.TipServEntity>> GetTipServPagedListAsync(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipServ/GetTipServPagedListXml", ReplyAction="http://tempuri.org/ITipServ/GetTipServPagedListXmlResponse")]
        Globals.SoftvList<Softv.Entities.TipServEntity> GetTipServPagedListXml(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipServ/GetTipServPagedListXml", ReplyAction="http://tempuri.org/ITipServ/GetTipServPagedListXmlResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.TipServEntity>> GetTipServPagedListXmlAsync(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipServ/AddTipServ", ReplyAction="http://tempuri.org/ITipServ/AddTipServResponse")]
        int AddTipServ(Softv.Entities.TipServEntity objTipServ);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipServ/AddTipServ", ReplyAction="http://tempuri.org/ITipServ/AddTipServResponse")]
        System.Threading.Tasks.Task<int> AddTipServAsync(Softv.Entities.TipServEntity objTipServ);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipServ/UpdateTipServ", ReplyAction="http://tempuri.org/ITipServ/UpdateTipServResponse")]
        int UpdateTipServ(Softv.Entities.TipServEntity objTipServ);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipServ/UpdateTipServ", ReplyAction="http://tempuri.org/ITipServ/UpdateTipServResponse")]
        System.Threading.Tasks.Task<int> UpdateTipServAsync(Softv.Entities.TipServEntity objTipServ);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipServ/DeleteTipServ", ReplyAction="http://tempuri.org/ITipServ/DeleteTipServResponse")]
        int DeleteTipServ(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> Clv_TipSer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipServ/DeleteTipServ", ReplyAction="http://tempuri.org/ITipServ/DeleteTipServResponse")]
        System.Threading.Tasks.Task<int> DeleteTipServAsync(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> Clv_TipSer);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITipServChannel : SoftvMVC.SoftvService.ITipServ, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TipServClient : System.ServiceModel.ClientBase<SoftvMVC.SoftvService.ITipServ>, SoftvMVC.SoftvService.ITipServ {
        
        public TipServClient() {
        }
        
        public TipServClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TipServClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TipServClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TipServClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Softv.Entities.TipServEntity GetTipServ(System.Nullable<int> Clv_TipSer) {
            return base.Channel.GetTipServ(Clv_TipSer);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.TipServEntity> GetTipServAsync(System.Nullable<int> Clv_TipSer) {
            return base.Channel.GetTipServAsync(Clv_TipSer);
        }
        
        public Softv.Entities.TipServEntity GetDeepTipServ(System.Nullable<int> Clv_TipSer) {
            return base.Channel.GetDeepTipServ(Clv_TipSer);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.TipServEntity> GetDeepTipServAsync(System.Nullable<int> Clv_TipSer) {
            return base.Channel.GetDeepTipServAsync(Clv_TipSer);
        }
        
        public System.Collections.Generic.List<Softv.Entities.TipServEntity> GetTipServList() {
            return base.Channel.GetTipServList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.TipServEntity>> GetTipServListAsync() {
            return base.Channel.GetTipServListAsync();
        }
        
        public Globals.SoftvList<Softv.Entities.TipServEntity> GetTipServPagedList(int page, int pageSize) {
            return base.Channel.GetTipServPagedList(page, pageSize);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.TipServEntity>> GetTipServPagedListAsync(int page, int pageSize) {
            return base.Channel.GetTipServPagedListAsync(page, pageSize);
        }
        
        public Globals.SoftvList<Softv.Entities.TipServEntity> GetTipServPagedListXml(int page, int pageSize, string xml) {
            return base.Channel.GetTipServPagedListXml(page, pageSize, xml);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.TipServEntity>> GetTipServPagedListXmlAsync(int page, int pageSize, string xml) {
            return base.Channel.GetTipServPagedListXmlAsync(page, pageSize, xml);
        }
        
        public int AddTipServ(Softv.Entities.TipServEntity objTipServ) {
            return base.Channel.AddTipServ(objTipServ);
        }
        
        public System.Threading.Tasks.Task<int> AddTipServAsync(Softv.Entities.TipServEntity objTipServ) {
            return base.Channel.AddTipServAsync(objTipServ);
        }
        
        public int UpdateTipServ(Softv.Entities.TipServEntity objTipServ) {
            return base.Channel.UpdateTipServ(objTipServ);
        }
        
        public System.Threading.Tasks.Task<int> UpdateTipServAsync(Softv.Entities.TipServEntity objTipServ) {
            return base.Channel.UpdateTipServAsync(objTipServ);
        }
        
        public int DeleteTipServ(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> Clv_TipSer) {
            return base.Channel.DeleteTipServ(BaseRemoteIp, BaseIdUser, Clv_TipSer);
        }
        
        public System.Threading.Tasks.Task<int> DeleteTipServAsync(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> Clv_TipSer) {
            return base.Channel.DeleteTipServAsync(BaseRemoteIp, BaseIdUser, Clv_TipSer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SoftvService.IMotivoCancelacion")]
    public interface IMotivoCancelacion {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMotivoCancelacion/GetMotivoCancelacion", ReplyAction="http://tempuri.org/IMotivoCancelacion/GetMotivoCancelacionResponse")]
        Softv.Entities.MotivoCancelacionEntity GetMotivoCancelacion(System.Nullable<int> Clv_MOTCAN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMotivoCancelacion/GetMotivoCancelacion", ReplyAction="http://tempuri.org/IMotivoCancelacion/GetMotivoCancelacionResponse")]
        System.Threading.Tasks.Task<Softv.Entities.MotivoCancelacionEntity> GetMotivoCancelacionAsync(System.Nullable<int> Clv_MOTCAN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMotivoCancelacion/GetDeepMotivoCancelacion", ReplyAction="http://tempuri.org/IMotivoCancelacion/GetDeepMotivoCancelacionResponse")]
        Softv.Entities.MotivoCancelacionEntity GetDeepMotivoCancelacion(System.Nullable<int> Clv_MOTCAN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMotivoCancelacion/GetDeepMotivoCancelacion", ReplyAction="http://tempuri.org/IMotivoCancelacion/GetDeepMotivoCancelacionResponse")]
        System.Threading.Tasks.Task<Softv.Entities.MotivoCancelacionEntity> GetDeepMotivoCancelacionAsync(System.Nullable<int> Clv_MOTCAN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMotivoCancelacion/GetMotivoCancelacionList", ReplyAction="http://tempuri.org/IMotivoCancelacion/GetMotivoCancelacionListResponse")]
        System.Collections.Generic.List<Softv.Entities.MotivoCancelacionEntity> GetMotivoCancelacionList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMotivoCancelacion/GetMotivoCancelacionList", ReplyAction="http://tempuri.org/IMotivoCancelacion/GetMotivoCancelacionListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.MotivoCancelacionEntity>> GetMotivoCancelacionListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMotivoCancelacion/GetMotivoCancelacionPagedList", ReplyAction="http://tempuri.org/IMotivoCancelacion/GetMotivoCancelacionPagedListResponse")]
        Globals.SoftvList<Softv.Entities.MotivoCancelacionEntity> GetMotivoCancelacionPagedList(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMotivoCancelacion/GetMotivoCancelacionPagedList", ReplyAction="http://tempuri.org/IMotivoCancelacion/GetMotivoCancelacionPagedListResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.MotivoCancelacionEntity>> GetMotivoCancelacionPagedListAsync(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMotivoCancelacion/GetMotivoCancelacionPagedListXml", ReplyAction="http://tempuri.org/IMotivoCancelacion/GetMotivoCancelacionPagedListXmlResponse")]
        Globals.SoftvList<Softv.Entities.MotivoCancelacionEntity> GetMotivoCancelacionPagedListXml(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMotivoCancelacion/GetMotivoCancelacionPagedListXml", ReplyAction="http://tempuri.org/IMotivoCancelacion/GetMotivoCancelacionPagedListXmlResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.MotivoCancelacionEntity>> GetMotivoCancelacionPagedListXmlAsync(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMotivoCancelacion/AddMotivoCancelacion", ReplyAction="http://tempuri.org/IMotivoCancelacion/AddMotivoCancelacionResponse")]
        int AddMotivoCancelacion(Softv.Entities.MotivoCancelacionEntity objMotivoCancelacion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMotivoCancelacion/AddMotivoCancelacion", ReplyAction="http://tempuri.org/IMotivoCancelacion/AddMotivoCancelacionResponse")]
        System.Threading.Tasks.Task<int> AddMotivoCancelacionAsync(Softv.Entities.MotivoCancelacionEntity objMotivoCancelacion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMotivoCancelacion/UpdateMotivoCancelacion", ReplyAction="http://tempuri.org/IMotivoCancelacion/UpdateMotivoCancelacionResponse")]
        int UpdateMotivoCancelacion(Softv.Entities.MotivoCancelacionEntity objMotivoCancelacion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMotivoCancelacion/UpdateMotivoCancelacion", ReplyAction="http://tempuri.org/IMotivoCancelacion/UpdateMotivoCancelacionResponse")]
        System.Threading.Tasks.Task<int> UpdateMotivoCancelacionAsync(Softv.Entities.MotivoCancelacionEntity objMotivoCancelacion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMotivoCancelacion/DeleteMotivoCancelacion", ReplyAction="http://tempuri.org/IMotivoCancelacion/DeleteMotivoCancelacionResponse")]
        int DeleteMotivoCancelacion(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> Clv_MOTCAN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMotivoCancelacion/DeleteMotivoCancelacion", ReplyAction="http://tempuri.org/IMotivoCancelacion/DeleteMotivoCancelacionResponse")]
        System.Threading.Tasks.Task<int> DeleteMotivoCancelacionAsync(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> Clv_MOTCAN);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMotivoCancelacionChannel : SoftvMVC.SoftvService.IMotivoCancelacion, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MotivoCancelacionClient : System.ServiceModel.ClientBase<SoftvMVC.SoftvService.IMotivoCancelacion>, SoftvMVC.SoftvService.IMotivoCancelacion {
        
        public MotivoCancelacionClient() {
        }
        
        public MotivoCancelacionClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MotivoCancelacionClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MotivoCancelacionClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MotivoCancelacionClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Softv.Entities.MotivoCancelacionEntity GetMotivoCancelacion(System.Nullable<int> Clv_MOTCAN) {
            return base.Channel.GetMotivoCancelacion(Clv_MOTCAN);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.MotivoCancelacionEntity> GetMotivoCancelacionAsync(System.Nullable<int> Clv_MOTCAN) {
            return base.Channel.GetMotivoCancelacionAsync(Clv_MOTCAN);
        }
        
        public Softv.Entities.MotivoCancelacionEntity GetDeepMotivoCancelacion(System.Nullable<int> Clv_MOTCAN) {
            return base.Channel.GetDeepMotivoCancelacion(Clv_MOTCAN);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.MotivoCancelacionEntity> GetDeepMotivoCancelacionAsync(System.Nullable<int> Clv_MOTCAN) {
            return base.Channel.GetDeepMotivoCancelacionAsync(Clv_MOTCAN);
        }
        
        public System.Collections.Generic.List<Softv.Entities.MotivoCancelacionEntity> GetMotivoCancelacionList() {
            return base.Channel.GetMotivoCancelacionList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.MotivoCancelacionEntity>> GetMotivoCancelacionListAsync() {
            return base.Channel.GetMotivoCancelacionListAsync();
        }
        
        public Globals.SoftvList<Softv.Entities.MotivoCancelacionEntity> GetMotivoCancelacionPagedList(int page, int pageSize) {
            return base.Channel.GetMotivoCancelacionPagedList(page, pageSize);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.MotivoCancelacionEntity>> GetMotivoCancelacionPagedListAsync(int page, int pageSize) {
            return base.Channel.GetMotivoCancelacionPagedListAsync(page, pageSize);
        }
        
        public Globals.SoftvList<Softv.Entities.MotivoCancelacionEntity> GetMotivoCancelacionPagedListXml(int page, int pageSize, string xml) {
            return base.Channel.GetMotivoCancelacionPagedListXml(page, pageSize, xml);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.MotivoCancelacionEntity>> GetMotivoCancelacionPagedListXmlAsync(int page, int pageSize, string xml) {
            return base.Channel.GetMotivoCancelacionPagedListXmlAsync(page, pageSize, xml);
        }
        
        public int AddMotivoCancelacion(Softv.Entities.MotivoCancelacionEntity objMotivoCancelacion) {
            return base.Channel.AddMotivoCancelacion(objMotivoCancelacion);
        }
        
        public System.Threading.Tasks.Task<int> AddMotivoCancelacionAsync(Softv.Entities.MotivoCancelacionEntity objMotivoCancelacion) {
            return base.Channel.AddMotivoCancelacionAsync(objMotivoCancelacion);
        }
        
        public int UpdateMotivoCancelacion(Softv.Entities.MotivoCancelacionEntity objMotivoCancelacion) {
            return base.Channel.UpdateMotivoCancelacion(objMotivoCancelacion);
        }
        
        public System.Threading.Tasks.Task<int> UpdateMotivoCancelacionAsync(Softv.Entities.MotivoCancelacionEntity objMotivoCancelacion) {
            return base.Channel.UpdateMotivoCancelacionAsync(objMotivoCancelacion);
        }
        
        public int DeleteMotivoCancelacion(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> Clv_MOTCAN) {
            return base.Channel.DeleteMotivoCancelacion(BaseRemoteIp, BaseIdUser, Clv_MOTCAN);
        }
        
        public System.Threading.Tasks.Task<int> DeleteMotivoCancelacionAsync(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> Clv_MOTCAN) {
            return base.Channel.DeleteMotivoCancelacionAsync(BaseRemoteIp, BaseIdUser, Clv_MOTCAN);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SoftvService.IRelEncuestaPreguntaRes")]
    public interface IRelEncuestaPreguntaRes {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelEncuestaPreguntaRes/GetRelEncuestaPreguntaRes", ReplyAction="http://tempuri.org/IRelEncuestaPreguntaRes/GetRelEncuestaPreguntaResResponse")]
        Softv.Entities.RelEncuestaPreguntaResEntity GetRelEncuestaPreguntaRes(System.Nullable<int> Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelEncuestaPreguntaRes/GetRelEncuestaPreguntaRes", ReplyAction="http://tempuri.org/IRelEncuestaPreguntaRes/GetRelEncuestaPreguntaResResponse")]
        System.Threading.Tasks.Task<Softv.Entities.RelEncuestaPreguntaResEntity> GetRelEncuestaPreguntaResAsync(System.Nullable<int> Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelEncuestaPreguntaRes/GetDeepRelEncuestaPreguntaRes", ReplyAction="http://tempuri.org/IRelEncuestaPreguntaRes/GetDeepRelEncuestaPreguntaResResponse")]
        Softv.Entities.RelEncuestaPreguntaResEntity GetDeepRelEncuestaPreguntaRes(System.Nullable<int> Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelEncuestaPreguntaRes/GetDeepRelEncuestaPreguntaRes", ReplyAction="http://tempuri.org/IRelEncuestaPreguntaRes/GetDeepRelEncuestaPreguntaResResponse")]
        System.Threading.Tasks.Task<Softv.Entities.RelEncuestaPreguntaResEntity> GetDeepRelEncuestaPreguntaResAsync(System.Nullable<int> Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelEncuestaPreguntaRes/GetRelEncuestaPreguntaResList", ReplyAction="http://tempuri.org/IRelEncuestaPreguntaRes/GetRelEncuestaPreguntaResListResponse")]
        System.Collections.Generic.List<Softv.Entities.RelEncuestaPreguntaResEntity> GetRelEncuestaPreguntaResList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelEncuestaPreguntaRes/GetRelEncuestaPreguntaResList", ReplyAction="http://tempuri.org/IRelEncuestaPreguntaRes/GetRelEncuestaPreguntaResListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.RelEncuestaPreguntaResEntity>> GetRelEncuestaPreguntaResListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelEncuestaPreguntaRes/GetRelEncuestaPreguntaResPagedList", ReplyAction="http://tempuri.org/IRelEncuestaPreguntaRes/GetRelEncuestaPreguntaResPagedListResp" +
            "onse")]
        Globals.SoftvList<Softv.Entities.RelEncuestaPreguntaResEntity> GetRelEncuestaPreguntaResPagedList(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelEncuestaPreguntaRes/GetRelEncuestaPreguntaResPagedList", ReplyAction="http://tempuri.org/IRelEncuestaPreguntaRes/GetRelEncuestaPreguntaResPagedListResp" +
            "onse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.RelEncuestaPreguntaResEntity>> GetRelEncuestaPreguntaResPagedListAsync(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelEncuestaPreguntaRes/GetRelEncuestaPreguntaResPagedListXml", ReplyAction="http://tempuri.org/IRelEncuestaPreguntaRes/GetRelEncuestaPreguntaResPagedListXmlR" +
            "esponse")]
        Globals.SoftvList<Softv.Entities.RelEncuestaPreguntaResEntity> GetRelEncuestaPreguntaResPagedListXml(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelEncuestaPreguntaRes/GetRelEncuestaPreguntaResPagedListXml", ReplyAction="http://tempuri.org/IRelEncuestaPreguntaRes/GetRelEncuestaPreguntaResPagedListXmlR" +
            "esponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.RelEncuestaPreguntaResEntity>> GetRelEncuestaPreguntaResPagedListXmlAsync(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelEncuestaPreguntaRes/AddRelEncuestaPreguntaRes", ReplyAction="http://tempuri.org/IRelEncuestaPreguntaRes/AddRelEncuestaPreguntaResResponse")]
        int AddRelEncuestaPreguntaRes(Softv.Entities.RelEncuestaPreguntaResEntity objRelEncuestaPreguntaRes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelEncuestaPreguntaRes/AddRelEncuestaPreguntaRes", ReplyAction="http://tempuri.org/IRelEncuestaPreguntaRes/AddRelEncuestaPreguntaResResponse")]
        System.Threading.Tasks.Task<int> AddRelEncuestaPreguntaResAsync(Softv.Entities.RelEncuestaPreguntaResEntity objRelEncuestaPreguntaRes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelEncuestaPreguntaRes/UpdateRelEncuestaPreguntaRes", ReplyAction="http://tempuri.org/IRelEncuestaPreguntaRes/UpdateRelEncuestaPreguntaResResponse")]
        int UpdateRelEncuestaPreguntaRes(Softv.Entities.RelEncuestaPreguntaResEntity objRelEncuestaPreguntaRes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelEncuestaPreguntaRes/UpdateRelEncuestaPreguntaRes", ReplyAction="http://tempuri.org/IRelEncuestaPreguntaRes/UpdateRelEncuestaPreguntaResResponse")]
        System.Threading.Tasks.Task<int> UpdateRelEncuestaPreguntaResAsync(Softv.Entities.RelEncuestaPreguntaResEntity objRelEncuestaPreguntaRes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelEncuestaPreguntaRes/DeleteRelEncuestaPreguntaRes", ReplyAction="http://tempuri.org/IRelEncuestaPreguntaRes/DeleteRelEncuestaPreguntaResResponse")]
        int DeleteRelEncuestaPreguntaRes(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelEncuestaPreguntaRes/DeleteRelEncuestaPreguntaRes", ReplyAction="http://tempuri.org/IRelEncuestaPreguntaRes/DeleteRelEncuestaPreguntaResResponse")]
        System.Threading.Tasks.Task<int> DeleteRelEncuestaPreguntaResAsync(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> Id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRelEncuestaPreguntaResChannel : SoftvMVC.SoftvService.IRelEncuestaPreguntaRes, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RelEncuestaPreguntaResClient : System.ServiceModel.ClientBase<SoftvMVC.SoftvService.IRelEncuestaPreguntaRes>, SoftvMVC.SoftvService.IRelEncuestaPreguntaRes {
        
        public RelEncuestaPreguntaResClient() {
        }
        
        public RelEncuestaPreguntaResClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RelEncuestaPreguntaResClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RelEncuestaPreguntaResClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RelEncuestaPreguntaResClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Softv.Entities.RelEncuestaPreguntaResEntity GetRelEncuestaPreguntaRes(System.Nullable<int> Id) {
            return base.Channel.GetRelEncuestaPreguntaRes(Id);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.RelEncuestaPreguntaResEntity> GetRelEncuestaPreguntaResAsync(System.Nullable<int> Id) {
            return base.Channel.GetRelEncuestaPreguntaResAsync(Id);
        }
        
        public Softv.Entities.RelEncuestaPreguntaResEntity GetDeepRelEncuestaPreguntaRes(System.Nullable<int> Id) {
            return base.Channel.GetDeepRelEncuestaPreguntaRes(Id);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.RelEncuestaPreguntaResEntity> GetDeepRelEncuestaPreguntaResAsync(System.Nullable<int> Id) {
            return base.Channel.GetDeepRelEncuestaPreguntaResAsync(Id);
        }
        
        public System.Collections.Generic.List<Softv.Entities.RelEncuestaPreguntaResEntity> GetRelEncuestaPreguntaResList() {
            return base.Channel.GetRelEncuestaPreguntaResList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.RelEncuestaPreguntaResEntity>> GetRelEncuestaPreguntaResListAsync() {
            return base.Channel.GetRelEncuestaPreguntaResListAsync();
        }
        
        public Globals.SoftvList<Softv.Entities.RelEncuestaPreguntaResEntity> GetRelEncuestaPreguntaResPagedList(int page, int pageSize) {
            return base.Channel.GetRelEncuestaPreguntaResPagedList(page, pageSize);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.RelEncuestaPreguntaResEntity>> GetRelEncuestaPreguntaResPagedListAsync(int page, int pageSize) {
            return base.Channel.GetRelEncuestaPreguntaResPagedListAsync(page, pageSize);
        }
        
        public Globals.SoftvList<Softv.Entities.RelEncuestaPreguntaResEntity> GetRelEncuestaPreguntaResPagedListXml(int page, int pageSize, string xml) {
            return base.Channel.GetRelEncuestaPreguntaResPagedListXml(page, pageSize, xml);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.RelEncuestaPreguntaResEntity>> GetRelEncuestaPreguntaResPagedListXmlAsync(int page, int pageSize, string xml) {
            return base.Channel.GetRelEncuestaPreguntaResPagedListXmlAsync(page, pageSize, xml);
        }
        
        public int AddRelEncuestaPreguntaRes(Softv.Entities.RelEncuestaPreguntaResEntity objRelEncuestaPreguntaRes) {
            return base.Channel.AddRelEncuestaPreguntaRes(objRelEncuestaPreguntaRes);
        }
        
        public System.Threading.Tasks.Task<int> AddRelEncuestaPreguntaResAsync(Softv.Entities.RelEncuestaPreguntaResEntity objRelEncuestaPreguntaRes) {
            return base.Channel.AddRelEncuestaPreguntaResAsync(objRelEncuestaPreguntaRes);
        }
        
        public int UpdateRelEncuestaPreguntaRes(Softv.Entities.RelEncuestaPreguntaResEntity objRelEncuestaPreguntaRes) {
            return base.Channel.UpdateRelEncuestaPreguntaRes(objRelEncuestaPreguntaRes);
        }
        
        public System.Threading.Tasks.Task<int> UpdateRelEncuestaPreguntaResAsync(Softv.Entities.RelEncuestaPreguntaResEntity objRelEncuestaPreguntaRes) {
            return base.Channel.UpdateRelEncuestaPreguntaResAsync(objRelEncuestaPreguntaRes);
        }
        
        public int DeleteRelEncuestaPreguntaRes(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> Id) {
            return base.Channel.DeleteRelEncuestaPreguntaRes(BaseRemoteIp, BaseIdUser, Id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteRelEncuestaPreguntaResAsync(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> Id) {
            return base.Channel.DeleteRelEncuestaPreguntaResAsync(BaseRemoteIp, BaseIdUser, Id);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SoftvService.IQueja")]
    public interface IQueja {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQueja/GetQueja", ReplyAction="http://tempuri.org/IQueja/GetQuejaResponse")]
        Softv.Entities.QuejaEntity GetQueja(System.Nullable<long> Clv_Queja);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQueja/GetQueja", ReplyAction="http://tempuri.org/IQueja/GetQuejaResponse")]
        System.Threading.Tasks.Task<Softv.Entities.QuejaEntity> GetQuejaAsync(System.Nullable<long> Clv_Queja);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQueja/GetDeepQueja", ReplyAction="http://tempuri.org/IQueja/GetDeepQuejaResponse")]
        Softv.Entities.QuejaEntity GetDeepQueja(System.Nullable<long> Clv_Queja);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQueja/GetDeepQueja", ReplyAction="http://tempuri.org/IQueja/GetDeepQuejaResponse")]
        System.Threading.Tasks.Task<Softv.Entities.QuejaEntity> GetDeepQuejaAsync(System.Nullable<long> Clv_Queja);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQueja/GetQuejaList", ReplyAction="http://tempuri.org/IQueja/GetQuejaListResponse")]
        System.Collections.Generic.List<Softv.Entities.QuejaEntity> GetQuejaList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQueja/GetQuejaList", ReplyAction="http://tempuri.org/IQueja/GetQuejaListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.QuejaEntity>> GetQuejaListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQueja/GetQuejaPagedList", ReplyAction="http://tempuri.org/IQueja/GetQuejaPagedListResponse")]
        Globals.SoftvList<Softv.Entities.QuejaEntity> GetQuejaPagedList(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQueja/GetQuejaPagedList", ReplyAction="http://tempuri.org/IQueja/GetQuejaPagedListResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.QuejaEntity>> GetQuejaPagedListAsync(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQueja/GetQuejaPagedListXml", ReplyAction="http://tempuri.org/IQueja/GetQuejaPagedListXmlResponse")]
        Globals.SoftvList<Softv.Entities.QuejaEntity> GetQuejaPagedListXml(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQueja/GetQuejaPagedListXml", ReplyAction="http://tempuri.org/IQueja/GetQuejaPagedListXmlResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.QuejaEntity>> GetQuejaPagedListXmlAsync(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQueja/AddQueja", ReplyAction="http://tempuri.org/IQueja/AddQuejaResponse")]
        int AddQueja(Softv.Entities.QuejaEntity objQueja);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQueja/AddQueja", ReplyAction="http://tempuri.org/IQueja/AddQuejaResponse")]
        System.Threading.Tasks.Task<int> AddQuejaAsync(Softv.Entities.QuejaEntity objQueja);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQueja/UpdateQueja", ReplyAction="http://tempuri.org/IQueja/UpdateQuejaResponse")]
        int UpdateQueja(Softv.Entities.QuejaEntity objQueja);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQueja/UpdateQueja", ReplyAction="http://tempuri.org/IQueja/UpdateQuejaResponse")]
        System.Threading.Tasks.Task<int> UpdateQuejaAsync(Softv.Entities.QuejaEntity objQueja);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQueja/DeleteQueja", ReplyAction="http://tempuri.org/IQueja/DeleteQuejaResponse")]
        int DeleteQueja(string BaseRemoteIp, int BaseIdUser, System.Nullable<long> Clv_Queja);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQueja/DeleteQueja", ReplyAction="http://tempuri.org/IQueja/DeleteQuejaResponse")]
        System.Threading.Tasks.Task<int> DeleteQuejaAsync(string BaseRemoteIp, int BaseIdUser, System.Nullable<long> Clv_Queja);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IQuejaChannel : SoftvMVC.SoftvService.IQueja, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QuejaClient : System.ServiceModel.ClientBase<SoftvMVC.SoftvService.IQueja>, SoftvMVC.SoftvService.IQueja {
        
        public QuejaClient() {
        }
        
        public QuejaClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public QuejaClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QuejaClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QuejaClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Softv.Entities.QuejaEntity GetQueja(System.Nullable<long> Clv_Queja) {
            return base.Channel.GetQueja(Clv_Queja);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.QuejaEntity> GetQuejaAsync(System.Nullable<long> Clv_Queja) {
            return base.Channel.GetQuejaAsync(Clv_Queja);
        }
        
        public Softv.Entities.QuejaEntity GetDeepQueja(System.Nullable<long> Clv_Queja) {
            return base.Channel.GetDeepQueja(Clv_Queja);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.QuejaEntity> GetDeepQuejaAsync(System.Nullable<long> Clv_Queja) {
            return base.Channel.GetDeepQuejaAsync(Clv_Queja);
        }
        
        public System.Collections.Generic.List<Softv.Entities.QuejaEntity> GetQuejaList() {
            return base.Channel.GetQuejaList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.QuejaEntity>> GetQuejaListAsync() {
            return base.Channel.GetQuejaListAsync();
        }
        
        public Globals.SoftvList<Softv.Entities.QuejaEntity> GetQuejaPagedList(int page, int pageSize) {
            return base.Channel.GetQuejaPagedList(page, pageSize);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.QuejaEntity>> GetQuejaPagedListAsync(int page, int pageSize) {
            return base.Channel.GetQuejaPagedListAsync(page, pageSize);
        }
        
        public Globals.SoftvList<Softv.Entities.QuejaEntity> GetQuejaPagedListXml(int page, int pageSize, string xml) {
            return base.Channel.GetQuejaPagedListXml(page, pageSize, xml);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.QuejaEntity>> GetQuejaPagedListXmlAsync(int page, int pageSize, string xml) {
            return base.Channel.GetQuejaPagedListXmlAsync(page, pageSize, xml);
        }
        
        public int AddQueja(Softv.Entities.QuejaEntity objQueja) {
            return base.Channel.AddQueja(objQueja);
        }
        
        public System.Threading.Tasks.Task<int> AddQuejaAsync(Softv.Entities.QuejaEntity objQueja) {
            return base.Channel.AddQuejaAsync(objQueja);
        }
        
        public int UpdateQueja(Softv.Entities.QuejaEntity objQueja) {
            return base.Channel.UpdateQueja(objQueja);
        }
        
        public System.Threading.Tasks.Task<int> UpdateQuejaAsync(Softv.Entities.QuejaEntity objQueja) {
            return base.Channel.UpdateQuejaAsync(objQueja);
        }
        
        public int DeleteQueja(string BaseRemoteIp, int BaseIdUser, System.Nullable<long> Clv_Queja) {
            return base.Channel.DeleteQueja(BaseRemoteIp, BaseIdUser, Clv_Queja);
        }
        
        public System.Threading.Tasks.Task<int> DeleteQuejaAsync(string BaseRemoteIp, int BaseIdUser, System.Nullable<long> Clv_Queja) {
            return base.Channel.DeleteQuejaAsync(BaseRemoteIp, BaseIdUser, Clv_Queja);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SoftvService.ICIUDAD")]
    public interface ICIUDAD {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICIUDAD/GetCIUDAD", ReplyAction="http://tempuri.org/ICIUDAD/GetCIUDADResponse")]
        Softv.Entities.CIUDADEntity GetCIUDAD(System.Nullable<int> Clv_Ciudad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICIUDAD/GetCIUDAD", ReplyAction="http://tempuri.org/ICIUDAD/GetCIUDADResponse")]
        System.Threading.Tasks.Task<Softv.Entities.CIUDADEntity> GetCIUDADAsync(System.Nullable<int> Clv_Ciudad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICIUDAD/GetDeepCIUDAD", ReplyAction="http://tempuri.org/ICIUDAD/GetDeepCIUDADResponse")]
        Softv.Entities.CIUDADEntity GetDeepCIUDAD(System.Nullable<int> Clv_Ciudad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICIUDAD/GetDeepCIUDAD", ReplyAction="http://tempuri.org/ICIUDAD/GetDeepCIUDADResponse")]
        System.Threading.Tasks.Task<Softv.Entities.CIUDADEntity> GetDeepCIUDADAsync(System.Nullable<int> Clv_Ciudad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICIUDAD/GetCIUDADList", ReplyAction="http://tempuri.org/ICIUDAD/GetCIUDADListResponse")]
        System.Collections.Generic.List<Softv.Entities.CIUDADEntity> GetCIUDADList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICIUDAD/GetCIUDADList", ReplyAction="http://tempuri.org/ICIUDAD/GetCIUDADListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.CIUDADEntity>> GetCIUDADListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICIUDAD/GetCIUDADPagedList", ReplyAction="http://tempuri.org/ICIUDAD/GetCIUDADPagedListResponse")]
        Globals.SoftvList<Softv.Entities.CIUDADEntity> GetCIUDADPagedList(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICIUDAD/GetCIUDADPagedList", ReplyAction="http://tempuri.org/ICIUDAD/GetCIUDADPagedListResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.CIUDADEntity>> GetCIUDADPagedListAsync(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICIUDAD/GetCIUDADPagedListXml", ReplyAction="http://tempuri.org/ICIUDAD/GetCIUDADPagedListXmlResponse")]
        Globals.SoftvList<Softv.Entities.CIUDADEntity> GetCIUDADPagedListXml(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICIUDAD/GetCIUDADPagedListXml", ReplyAction="http://tempuri.org/ICIUDAD/GetCIUDADPagedListXmlResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.CIUDADEntity>> GetCIUDADPagedListXmlAsync(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICIUDAD/AddCIUDAD", ReplyAction="http://tempuri.org/ICIUDAD/AddCIUDADResponse")]
        int AddCIUDAD(Softv.Entities.CIUDADEntity objCIUDAD);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICIUDAD/AddCIUDAD", ReplyAction="http://tempuri.org/ICIUDAD/AddCIUDADResponse")]
        System.Threading.Tasks.Task<int> AddCIUDADAsync(Softv.Entities.CIUDADEntity objCIUDAD);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICIUDAD/UpdateCIUDAD", ReplyAction="http://tempuri.org/ICIUDAD/UpdateCIUDADResponse")]
        int UpdateCIUDAD(Softv.Entities.CIUDADEntity objCIUDAD);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICIUDAD/UpdateCIUDAD", ReplyAction="http://tempuri.org/ICIUDAD/UpdateCIUDADResponse")]
        System.Threading.Tasks.Task<int> UpdateCIUDADAsync(Softv.Entities.CIUDADEntity objCIUDAD);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICIUDAD/DeleteCIUDAD", ReplyAction="http://tempuri.org/ICIUDAD/DeleteCIUDADResponse")]
        int DeleteCIUDAD(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> Clv_Ciudad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICIUDAD/DeleteCIUDAD", ReplyAction="http://tempuri.org/ICIUDAD/DeleteCIUDADResponse")]
        System.Threading.Tasks.Task<int> DeleteCIUDADAsync(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> Clv_Ciudad);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICIUDADChannel : SoftvMVC.SoftvService.ICIUDAD, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CIUDADClient : System.ServiceModel.ClientBase<SoftvMVC.SoftvService.ICIUDAD>, SoftvMVC.SoftvService.ICIUDAD {
        
        public CIUDADClient() {
        }
        
        public CIUDADClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CIUDADClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CIUDADClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CIUDADClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Softv.Entities.CIUDADEntity GetCIUDAD(System.Nullable<int> Clv_Ciudad) {
            return base.Channel.GetCIUDAD(Clv_Ciudad);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.CIUDADEntity> GetCIUDADAsync(System.Nullable<int> Clv_Ciudad) {
            return base.Channel.GetCIUDADAsync(Clv_Ciudad);
        }
        
        public Softv.Entities.CIUDADEntity GetDeepCIUDAD(System.Nullable<int> Clv_Ciudad) {
            return base.Channel.GetDeepCIUDAD(Clv_Ciudad);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.CIUDADEntity> GetDeepCIUDADAsync(System.Nullable<int> Clv_Ciudad) {
            return base.Channel.GetDeepCIUDADAsync(Clv_Ciudad);
        }
        
        public System.Collections.Generic.List<Softv.Entities.CIUDADEntity> GetCIUDADList() {
            return base.Channel.GetCIUDADList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.CIUDADEntity>> GetCIUDADListAsync() {
            return base.Channel.GetCIUDADListAsync();
        }
        
        public Globals.SoftvList<Softv.Entities.CIUDADEntity> GetCIUDADPagedList(int page, int pageSize) {
            return base.Channel.GetCIUDADPagedList(page, pageSize);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.CIUDADEntity>> GetCIUDADPagedListAsync(int page, int pageSize) {
            return base.Channel.GetCIUDADPagedListAsync(page, pageSize);
        }
        
        public Globals.SoftvList<Softv.Entities.CIUDADEntity> GetCIUDADPagedListXml(int page, int pageSize, string xml) {
            return base.Channel.GetCIUDADPagedListXml(page, pageSize, xml);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.CIUDADEntity>> GetCIUDADPagedListXmlAsync(int page, int pageSize, string xml) {
            return base.Channel.GetCIUDADPagedListXmlAsync(page, pageSize, xml);
        }
        
        public int AddCIUDAD(Softv.Entities.CIUDADEntity objCIUDAD) {
            return base.Channel.AddCIUDAD(objCIUDAD);
        }
        
        public System.Threading.Tasks.Task<int> AddCIUDADAsync(Softv.Entities.CIUDADEntity objCIUDAD) {
            return base.Channel.AddCIUDADAsync(objCIUDAD);
        }
        
        public int UpdateCIUDAD(Softv.Entities.CIUDADEntity objCIUDAD) {
            return base.Channel.UpdateCIUDAD(objCIUDAD);
        }
        
        public System.Threading.Tasks.Task<int> UpdateCIUDADAsync(Softv.Entities.CIUDADEntity objCIUDAD) {
            return base.Channel.UpdateCIUDADAsync(objCIUDAD);
        }
        
        public int DeleteCIUDAD(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> Clv_Ciudad) {
            return base.Channel.DeleteCIUDAD(BaseRemoteIp, BaseIdUser, Clv_Ciudad);
        }
        
        public System.Threading.Tasks.Task<int> DeleteCIUDADAsync(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> Clv_Ciudad) {
            return base.Channel.DeleteCIUDADAsync(BaseRemoteIp, BaseIdUser, Clv_Ciudad);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SoftvService.ICVECOLCIU")]
    public interface ICVECOLCIU {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICVECOLCIU/GetCVECOLCIU", ReplyAction="http://tempuri.org/ICVECOLCIU/GetCVECOLCIUResponse")]
        Softv.Entities.CVECOLCIUEntity GetCVECOLCIU(System.Nullable<int> Clv_Ciudad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICVECOLCIU/GetCVECOLCIU", ReplyAction="http://tempuri.org/ICVECOLCIU/GetCVECOLCIUResponse")]
        System.Threading.Tasks.Task<Softv.Entities.CVECOLCIUEntity> GetCVECOLCIUAsync(System.Nullable<int> Clv_Ciudad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICVECOLCIU/GetDeepCVECOLCIU", ReplyAction="http://tempuri.org/ICVECOLCIU/GetDeepCVECOLCIUResponse")]
        Softv.Entities.CVECOLCIUEntity GetDeepCVECOLCIU(System.Nullable<int> Clv_Colonia, System.Nullable<int> Clv_Ciudad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICVECOLCIU/GetDeepCVECOLCIU", ReplyAction="http://tempuri.org/ICVECOLCIU/GetDeepCVECOLCIUResponse")]
        System.Threading.Tasks.Task<Softv.Entities.CVECOLCIUEntity> GetDeepCVECOLCIUAsync(System.Nullable<int> Clv_Colonia, System.Nullable<int> Clv_Ciudad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICVECOLCIU/GetCVECOLCIUList", ReplyAction="http://tempuri.org/ICVECOLCIU/GetCVECOLCIUListResponse")]
        System.Collections.Generic.List<Softv.Entities.CVECOLCIUEntity> GetCVECOLCIUList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICVECOLCIU/GetCVECOLCIUList", ReplyAction="http://tempuri.org/ICVECOLCIU/GetCVECOLCIUListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.CVECOLCIUEntity>> GetCVECOLCIUListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICVECOLCIU/GetCVECOLCIUPagedList", ReplyAction="http://tempuri.org/ICVECOLCIU/GetCVECOLCIUPagedListResponse")]
        Globals.SoftvList<Softv.Entities.CVECOLCIUEntity> GetCVECOLCIUPagedList(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICVECOLCIU/GetCVECOLCIUPagedList", ReplyAction="http://tempuri.org/ICVECOLCIU/GetCVECOLCIUPagedListResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.CVECOLCIUEntity>> GetCVECOLCIUPagedListAsync(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICVECOLCIU/GetCVECOLCIUPagedListXml", ReplyAction="http://tempuri.org/ICVECOLCIU/GetCVECOLCIUPagedListXmlResponse")]
        Globals.SoftvList<Softv.Entities.CVECOLCIUEntity> GetCVECOLCIUPagedListXml(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICVECOLCIU/GetCVECOLCIUPagedListXml", ReplyAction="http://tempuri.org/ICVECOLCIU/GetCVECOLCIUPagedListXmlResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.CVECOLCIUEntity>> GetCVECOLCIUPagedListXmlAsync(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICVECOLCIU/AddCVECOLCIU", ReplyAction="http://tempuri.org/ICVECOLCIU/AddCVECOLCIUResponse")]
        int AddCVECOLCIU(Softv.Entities.CVECOLCIUEntity objCVECOLCIU);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICVECOLCIU/AddCVECOLCIU", ReplyAction="http://tempuri.org/ICVECOLCIU/AddCVECOLCIUResponse")]
        System.Threading.Tasks.Task<int> AddCVECOLCIUAsync(Softv.Entities.CVECOLCIUEntity objCVECOLCIU);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICVECOLCIU/UpdateCVECOLCIU", ReplyAction="http://tempuri.org/ICVECOLCIU/UpdateCVECOLCIUResponse")]
        int UpdateCVECOLCIU(Softv.Entities.CVECOLCIUEntity objCVECOLCIU);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICVECOLCIU/UpdateCVECOLCIU", ReplyAction="http://tempuri.org/ICVECOLCIU/UpdateCVECOLCIUResponse")]
        System.Threading.Tasks.Task<int> UpdateCVECOLCIUAsync(Softv.Entities.CVECOLCIUEntity objCVECOLCIU);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICVECOLCIU/DeleteCVECOLCIU", ReplyAction="http://tempuri.org/ICVECOLCIU/DeleteCVECOLCIUResponse")]
        int DeleteCVECOLCIU(System.Nullable<int> Clv_Ciudad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICVECOLCIU/DeleteCVECOLCIU", ReplyAction="http://tempuri.org/ICVECOLCIU/DeleteCVECOLCIUResponse")]
        System.Threading.Tasks.Task<int> DeleteCVECOLCIUAsync(System.Nullable<int> Clv_Ciudad);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICVECOLCIUChannel : SoftvMVC.SoftvService.ICVECOLCIU, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CVECOLCIUClient : System.ServiceModel.ClientBase<SoftvMVC.SoftvService.ICVECOLCIU>, SoftvMVC.SoftvService.ICVECOLCIU {
        
        public CVECOLCIUClient() {
        }
        
        public CVECOLCIUClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CVECOLCIUClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CVECOLCIUClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CVECOLCIUClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Softv.Entities.CVECOLCIUEntity GetCVECOLCIU(System.Nullable<int> Clv_Ciudad) {
            return base.Channel.GetCVECOLCIU(Clv_Ciudad);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.CVECOLCIUEntity> GetCVECOLCIUAsync(System.Nullable<int> Clv_Ciudad) {
            return base.Channel.GetCVECOLCIUAsync(Clv_Ciudad);
        }
        
        public Softv.Entities.CVECOLCIUEntity GetDeepCVECOLCIU(System.Nullable<int> Clv_Colonia, System.Nullable<int> Clv_Ciudad) {
            return base.Channel.GetDeepCVECOLCIU(Clv_Colonia, Clv_Ciudad);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.CVECOLCIUEntity> GetDeepCVECOLCIUAsync(System.Nullable<int> Clv_Colonia, System.Nullable<int> Clv_Ciudad) {
            return base.Channel.GetDeepCVECOLCIUAsync(Clv_Colonia, Clv_Ciudad);
        }
        
        public System.Collections.Generic.List<Softv.Entities.CVECOLCIUEntity> GetCVECOLCIUList() {
            return base.Channel.GetCVECOLCIUList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.CVECOLCIUEntity>> GetCVECOLCIUListAsync() {
            return base.Channel.GetCVECOLCIUListAsync();
        }
        
        public Globals.SoftvList<Softv.Entities.CVECOLCIUEntity> GetCVECOLCIUPagedList(int page, int pageSize) {
            return base.Channel.GetCVECOLCIUPagedList(page, pageSize);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.CVECOLCIUEntity>> GetCVECOLCIUPagedListAsync(int page, int pageSize) {
            return base.Channel.GetCVECOLCIUPagedListAsync(page, pageSize);
        }
        
        public Globals.SoftvList<Softv.Entities.CVECOLCIUEntity> GetCVECOLCIUPagedListXml(int page, int pageSize, string xml) {
            return base.Channel.GetCVECOLCIUPagedListXml(page, pageSize, xml);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.CVECOLCIUEntity>> GetCVECOLCIUPagedListXmlAsync(int page, int pageSize, string xml) {
            return base.Channel.GetCVECOLCIUPagedListXmlAsync(page, pageSize, xml);
        }
        
        public int AddCVECOLCIU(Softv.Entities.CVECOLCIUEntity objCVECOLCIU) {
            return base.Channel.AddCVECOLCIU(objCVECOLCIU);
        }
        
        public System.Threading.Tasks.Task<int> AddCVECOLCIUAsync(Softv.Entities.CVECOLCIUEntity objCVECOLCIU) {
            return base.Channel.AddCVECOLCIUAsync(objCVECOLCIU);
        }
        
        public int UpdateCVECOLCIU(Softv.Entities.CVECOLCIUEntity objCVECOLCIU) {
            return base.Channel.UpdateCVECOLCIU(objCVECOLCIU);
        }
        
        public System.Threading.Tasks.Task<int> UpdateCVECOLCIUAsync(Softv.Entities.CVECOLCIUEntity objCVECOLCIU) {
            return base.Channel.UpdateCVECOLCIUAsync(objCVECOLCIU);
        }
        
        public int DeleteCVECOLCIU(System.Nullable<int> Clv_Ciudad) {
            return base.Channel.DeleteCVECOLCIU(Clv_Ciudad);
        }
        
        public System.Threading.Tasks.Task<int> DeleteCVECOLCIUAsync(System.Nullable<int> Clv_Ciudad) {
            return base.Channel.DeleteCVECOLCIUAsync(Clv_Ciudad);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SoftvService.ICOLONIA")]
    public interface ICOLONIA {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICOLONIA/GetCOLONIA", ReplyAction="http://tempuri.org/ICOLONIA/GetCOLONIAResponse")]
        Softv.Entities.COLONIAEntity GetCOLONIA(System.Nullable<int> Clv_Colonia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICOLONIA/GetCOLONIA", ReplyAction="http://tempuri.org/ICOLONIA/GetCOLONIAResponse")]
        System.Threading.Tasks.Task<Softv.Entities.COLONIAEntity> GetCOLONIAAsync(System.Nullable<int> Clv_Colonia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICOLONIA/GetDeepCOLONIA", ReplyAction="http://tempuri.org/ICOLONIA/GetDeepCOLONIAResponse")]
        Softv.Entities.COLONIAEntity GetDeepCOLONIA(System.Nullable<int> Clv_Colonia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICOLONIA/GetDeepCOLONIA", ReplyAction="http://tempuri.org/ICOLONIA/GetDeepCOLONIAResponse")]
        System.Threading.Tasks.Task<Softv.Entities.COLONIAEntity> GetDeepCOLONIAAsync(System.Nullable<int> Clv_Colonia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICOLONIA/GetCOLONIAList", ReplyAction="http://tempuri.org/ICOLONIA/GetCOLONIAListResponse")]
        System.Collections.Generic.List<Softv.Entities.COLONIAEntity> GetCOLONIAList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICOLONIA/GetCOLONIAList", ReplyAction="http://tempuri.org/ICOLONIA/GetCOLONIAListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.COLONIAEntity>> GetCOLONIAListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICOLONIA/GetCOLONIAPagedList", ReplyAction="http://tempuri.org/ICOLONIA/GetCOLONIAPagedListResponse")]
        Globals.SoftvList<Softv.Entities.COLONIAEntity> GetCOLONIAPagedList(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICOLONIA/GetCOLONIAPagedList", ReplyAction="http://tempuri.org/ICOLONIA/GetCOLONIAPagedListResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.COLONIAEntity>> GetCOLONIAPagedListAsync(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICOLONIA/GetCOLONIAPagedListXml", ReplyAction="http://tempuri.org/ICOLONIA/GetCOLONIAPagedListXmlResponse")]
        Globals.SoftvList<Softv.Entities.COLONIAEntity> GetCOLONIAPagedListXml(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICOLONIA/GetCOLONIAPagedListXml", ReplyAction="http://tempuri.org/ICOLONIA/GetCOLONIAPagedListXmlResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.COLONIAEntity>> GetCOLONIAPagedListXmlAsync(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICOLONIA/AddCOLONIA", ReplyAction="http://tempuri.org/ICOLONIA/AddCOLONIAResponse")]
        int AddCOLONIA(Softv.Entities.COLONIAEntity objCOLONIA);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICOLONIA/AddCOLONIA", ReplyAction="http://tempuri.org/ICOLONIA/AddCOLONIAResponse")]
        System.Threading.Tasks.Task<int> AddCOLONIAAsync(Softv.Entities.COLONIAEntity objCOLONIA);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICOLONIA/UpdateCOLONIA", ReplyAction="http://tempuri.org/ICOLONIA/UpdateCOLONIAResponse")]
        int UpdateCOLONIA(Softv.Entities.COLONIAEntity objCOLONIA);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICOLONIA/UpdateCOLONIA", ReplyAction="http://tempuri.org/ICOLONIA/UpdateCOLONIAResponse")]
        System.Threading.Tasks.Task<int> UpdateCOLONIAAsync(Softv.Entities.COLONIAEntity objCOLONIA);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICOLONIA/DeleteCOLONIA", ReplyAction="http://tempuri.org/ICOLONIA/DeleteCOLONIAResponse")]
        int DeleteCOLONIA(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> Clv_Colonia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICOLONIA/DeleteCOLONIA", ReplyAction="http://tempuri.org/ICOLONIA/DeleteCOLONIAResponse")]
        System.Threading.Tasks.Task<int> DeleteCOLONIAAsync(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> Clv_Colonia);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICOLONIAChannel : SoftvMVC.SoftvService.ICOLONIA, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class COLONIAClient : System.ServiceModel.ClientBase<SoftvMVC.SoftvService.ICOLONIA>, SoftvMVC.SoftvService.ICOLONIA {
        
        public COLONIAClient() {
        }
        
        public COLONIAClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public COLONIAClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public COLONIAClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public COLONIAClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Softv.Entities.COLONIAEntity GetCOLONIA(System.Nullable<int> Clv_Colonia) {
            return base.Channel.GetCOLONIA(Clv_Colonia);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.COLONIAEntity> GetCOLONIAAsync(System.Nullable<int> Clv_Colonia) {
            return base.Channel.GetCOLONIAAsync(Clv_Colonia);
        }
        
        public Softv.Entities.COLONIAEntity GetDeepCOLONIA(System.Nullable<int> Clv_Colonia) {
            return base.Channel.GetDeepCOLONIA(Clv_Colonia);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.COLONIAEntity> GetDeepCOLONIAAsync(System.Nullable<int> Clv_Colonia) {
            return base.Channel.GetDeepCOLONIAAsync(Clv_Colonia);
        }
        
        public System.Collections.Generic.List<Softv.Entities.COLONIAEntity> GetCOLONIAList() {
            return base.Channel.GetCOLONIAList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.COLONIAEntity>> GetCOLONIAListAsync() {
            return base.Channel.GetCOLONIAListAsync();
        }
        
        public Globals.SoftvList<Softv.Entities.COLONIAEntity> GetCOLONIAPagedList(int page, int pageSize) {
            return base.Channel.GetCOLONIAPagedList(page, pageSize);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.COLONIAEntity>> GetCOLONIAPagedListAsync(int page, int pageSize) {
            return base.Channel.GetCOLONIAPagedListAsync(page, pageSize);
        }
        
        public Globals.SoftvList<Softv.Entities.COLONIAEntity> GetCOLONIAPagedListXml(int page, int pageSize, string xml) {
            return base.Channel.GetCOLONIAPagedListXml(page, pageSize, xml);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.COLONIAEntity>> GetCOLONIAPagedListXmlAsync(int page, int pageSize, string xml) {
            return base.Channel.GetCOLONIAPagedListXmlAsync(page, pageSize, xml);
        }
        
        public int AddCOLONIA(Softv.Entities.COLONIAEntity objCOLONIA) {
            return base.Channel.AddCOLONIA(objCOLONIA);
        }
        
        public System.Threading.Tasks.Task<int> AddCOLONIAAsync(Softv.Entities.COLONIAEntity objCOLONIA) {
            return base.Channel.AddCOLONIAAsync(objCOLONIA);
        }
        
        public int UpdateCOLONIA(Softv.Entities.COLONIAEntity objCOLONIA) {
            return base.Channel.UpdateCOLONIA(objCOLONIA);
        }
        
        public System.Threading.Tasks.Task<int> UpdateCOLONIAAsync(Softv.Entities.COLONIAEntity objCOLONIA) {
            return base.Channel.UpdateCOLONIAAsync(objCOLONIA);
        }
        
        public int DeleteCOLONIA(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> Clv_Colonia) {
            return base.Channel.DeleteCOLONIA(BaseRemoteIp, BaseIdUser, Clv_Colonia);
        }
        
        public System.Threading.Tasks.Task<int> DeleteCOLONIAAsync(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> Clv_Colonia) {
            return base.Channel.DeleteCOLONIAAsync(BaseRemoteIp, BaseIdUser, Clv_Colonia);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SoftvService.ICVECAROL")]
    public interface ICVECAROL {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICVECAROL/GetCVECAROL", ReplyAction="http://tempuri.org/ICVECAROL/GetCVECAROLResponse")]
        Softv.Entities.CVECAROLEntity GetCVECAROL(System.Nullable<int> Clv_Colonia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICVECAROL/GetCVECAROL", ReplyAction="http://tempuri.org/ICVECAROL/GetCVECAROLResponse")]
        System.Threading.Tasks.Task<Softv.Entities.CVECAROLEntity> GetCVECAROLAsync(System.Nullable<int> Clv_Colonia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICVECAROL/GetDeepCVECAROL", ReplyAction="http://tempuri.org/ICVECAROL/GetDeepCVECAROLResponse")]
        Softv.Entities.CVECAROLEntity GetDeepCVECAROL(System.Nullable<int> Clv_Calle, System.Nullable<int> Clv_Colonia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICVECAROL/GetDeepCVECAROL", ReplyAction="http://tempuri.org/ICVECAROL/GetDeepCVECAROLResponse")]
        System.Threading.Tasks.Task<Softv.Entities.CVECAROLEntity> GetDeepCVECAROLAsync(System.Nullable<int> Clv_Calle, System.Nullable<int> Clv_Colonia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICVECAROL/GetCVECAROLList", ReplyAction="http://tempuri.org/ICVECAROL/GetCVECAROLListResponse")]
        System.Collections.Generic.List<Softv.Entities.CVECAROLEntity> GetCVECAROLList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICVECAROL/GetCVECAROLList", ReplyAction="http://tempuri.org/ICVECAROL/GetCVECAROLListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.CVECAROLEntity>> GetCVECAROLListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICVECAROL/GetCVECAROLPagedList", ReplyAction="http://tempuri.org/ICVECAROL/GetCVECAROLPagedListResponse")]
        Globals.SoftvList<Softv.Entities.CVECAROLEntity> GetCVECAROLPagedList(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICVECAROL/GetCVECAROLPagedList", ReplyAction="http://tempuri.org/ICVECAROL/GetCVECAROLPagedListResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.CVECAROLEntity>> GetCVECAROLPagedListAsync(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICVECAROL/GetCVECAROLPagedListXml", ReplyAction="http://tempuri.org/ICVECAROL/GetCVECAROLPagedListXmlResponse")]
        Globals.SoftvList<Softv.Entities.CVECAROLEntity> GetCVECAROLPagedListXml(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICVECAROL/GetCVECAROLPagedListXml", ReplyAction="http://tempuri.org/ICVECAROL/GetCVECAROLPagedListXmlResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.CVECAROLEntity>> GetCVECAROLPagedListXmlAsync(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICVECAROL/AddCVECAROL", ReplyAction="http://tempuri.org/ICVECAROL/AddCVECAROLResponse")]
        int AddCVECAROL(Softv.Entities.CVECAROLEntity objCVECAROL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICVECAROL/AddCVECAROL", ReplyAction="http://tempuri.org/ICVECAROL/AddCVECAROLResponse")]
        System.Threading.Tasks.Task<int> AddCVECAROLAsync(Softv.Entities.CVECAROLEntity objCVECAROL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICVECAROL/UpdateCVECAROL", ReplyAction="http://tempuri.org/ICVECAROL/UpdateCVECAROLResponse")]
        int UpdateCVECAROL(Softv.Entities.CVECAROLEntity objCVECAROL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICVECAROL/UpdateCVECAROL", ReplyAction="http://tempuri.org/ICVECAROL/UpdateCVECAROLResponse")]
        System.Threading.Tasks.Task<int> UpdateCVECAROLAsync(Softv.Entities.CVECAROLEntity objCVECAROL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICVECAROL/DeleteCVECAROL", ReplyAction="http://tempuri.org/ICVECAROL/DeleteCVECAROLResponse")]
        int DeleteCVECAROL(System.Nullable<int> Clv_Colonia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICVECAROL/DeleteCVECAROL", ReplyAction="http://tempuri.org/ICVECAROL/DeleteCVECAROLResponse")]
        System.Threading.Tasks.Task<int> DeleteCVECAROLAsync(System.Nullable<int> Clv_Colonia);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICVECAROLChannel : SoftvMVC.SoftvService.ICVECAROL, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CVECAROLClient : System.ServiceModel.ClientBase<SoftvMVC.SoftvService.ICVECAROL>, SoftvMVC.SoftvService.ICVECAROL {
        
        public CVECAROLClient() {
        }
        
        public CVECAROLClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CVECAROLClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CVECAROLClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CVECAROLClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Softv.Entities.CVECAROLEntity GetCVECAROL(System.Nullable<int> Clv_Colonia) {
            return base.Channel.GetCVECAROL(Clv_Colonia);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.CVECAROLEntity> GetCVECAROLAsync(System.Nullable<int> Clv_Colonia) {
            return base.Channel.GetCVECAROLAsync(Clv_Colonia);
        }
        
        public Softv.Entities.CVECAROLEntity GetDeepCVECAROL(System.Nullable<int> Clv_Calle, System.Nullable<int> Clv_Colonia) {
            return base.Channel.GetDeepCVECAROL(Clv_Calle, Clv_Colonia);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.CVECAROLEntity> GetDeepCVECAROLAsync(System.Nullable<int> Clv_Calle, System.Nullable<int> Clv_Colonia) {
            return base.Channel.GetDeepCVECAROLAsync(Clv_Calle, Clv_Colonia);
        }
        
        public System.Collections.Generic.List<Softv.Entities.CVECAROLEntity> GetCVECAROLList() {
            return base.Channel.GetCVECAROLList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.CVECAROLEntity>> GetCVECAROLListAsync() {
            return base.Channel.GetCVECAROLListAsync();
        }
        
        public Globals.SoftvList<Softv.Entities.CVECAROLEntity> GetCVECAROLPagedList(int page, int pageSize) {
            return base.Channel.GetCVECAROLPagedList(page, pageSize);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.CVECAROLEntity>> GetCVECAROLPagedListAsync(int page, int pageSize) {
            return base.Channel.GetCVECAROLPagedListAsync(page, pageSize);
        }
        
        public Globals.SoftvList<Softv.Entities.CVECAROLEntity> GetCVECAROLPagedListXml(int page, int pageSize, string xml) {
            return base.Channel.GetCVECAROLPagedListXml(page, pageSize, xml);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.CVECAROLEntity>> GetCVECAROLPagedListXmlAsync(int page, int pageSize, string xml) {
            return base.Channel.GetCVECAROLPagedListXmlAsync(page, pageSize, xml);
        }
        
        public int AddCVECAROL(Softv.Entities.CVECAROLEntity objCVECAROL) {
            return base.Channel.AddCVECAROL(objCVECAROL);
        }
        
        public System.Threading.Tasks.Task<int> AddCVECAROLAsync(Softv.Entities.CVECAROLEntity objCVECAROL) {
            return base.Channel.AddCVECAROLAsync(objCVECAROL);
        }
        
        public int UpdateCVECAROL(Softv.Entities.CVECAROLEntity objCVECAROL) {
            return base.Channel.UpdateCVECAROL(objCVECAROL);
        }
        
        public System.Threading.Tasks.Task<int> UpdateCVECAROLAsync(Softv.Entities.CVECAROLEntity objCVECAROL) {
            return base.Channel.UpdateCVECAROLAsync(objCVECAROL);
        }
        
        public int DeleteCVECAROL(System.Nullable<int> Clv_Colonia) {
            return base.Channel.DeleteCVECAROL(Clv_Colonia);
        }
        
        public System.Threading.Tasks.Task<int> DeleteCVECAROLAsync(System.Nullable<int> Clv_Colonia) {
            return base.Channel.DeleteCVECAROLAsync(Clv_Colonia);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SoftvService.ICALLE")]
    public interface ICALLE {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICALLE/GetCALLE", ReplyAction="http://tempuri.org/ICALLE/GetCALLEResponse")]
        Softv.Entities.CALLEEntity GetCALLE(System.Nullable<int> Clv_Calle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICALLE/GetCALLE", ReplyAction="http://tempuri.org/ICALLE/GetCALLEResponse")]
        System.Threading.Tasks.Task<Softv.Entities.CALLEEntity> GetCALLEAsync(System.Nullable<int> Clv_Calle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICALLE/GetDeepCALLE", ReplyAction="http://tempuri.org/ICALLE/GetDeepCALLEResponse")]
        Softv.Entities.CALLEEntity GetDeepCALLE(System.Nullable<int> Clv_Calle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICALLE/GetDeepCALLE", ReplyAction="http://tempuri.org/ICALLE/GetDeepCALLEResponse")]
        System.Threading.Tasks.Task<Softv.Entities.CALLEEntity> GetDeepCALLEAsync(System.Nullable<int> Clv_Calle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICALLE/GetCALLEList", ReplyAction="http://tempuri.org/ICALLE/GetCALLEListResponse")]
        System.Collections.Generic.List<Softv.Entities.CALLEEntity> GetCALLEList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICALLE/GetCALLEList", ReplyAction="http://tempuri.org/ICALLE/GetCALLEListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.CALLEEntity>> GetCALLEListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICALLE/GetCALLEPagedList", ReplyAction="http://tempuri.org/ICALLE/GetCALLEPagedListResponse")]
        Globals.SoftvList<Softv.Entities.CALLEEntity> GetCALLEPagedList(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICALLE/GetCALLEPagedList", ReplyAction="http://tempuri.org/ICALLE/GetCALLEPagedListResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.CALLEEntity>> GetCALLEPagedListAsync(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICALLE/GetCALLEPagedListXml", ReplyAction="http://tempuri.org/ICALLE/GetCALLEPagedListXmlResponse")]
        Globals.SoftvList<Softv.Entities.CALLEEntity> GetCALLEPagedListXml(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICALLE/GetCALLEPagedListXml", ReplyAction="http://tempuri.org/ICALLE/GetCALLEPagedListXmlResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.CALLEEntity>> GetCALLEPagedListXmlAsync(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICALLE/AddCALLE", ReplyAction="http://tempuri.org/ICALLE/AddCALLEResponse")]
        int AddCALLE(Softv.Entities.CALLEEntity objCALLE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICALLE/AddCALLE", ReplyAction="http://tempuri.org/ICALLE/AddCALLEResponse")]
        System.Threading.Tasks.Task<int> AddCALLEAsync(Softv.Entities.CALLEEntity objCALLE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICALLE/UpdateCALLE", ReplyAction="http://tempuri.org/ICALLE/UpdateCALLEResponse")]
        int UpdateCALLE(Softv.Entities.CALLEEntity objCALLE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICALLE/UpdateCALLE", ReplyAction="http://tempuri.org/ICALLE/UpdateCALLEResponse")]
        System.Threading.Tasks.Task<int> UpdateCALLEAsync(Softv.Entities.CALLEEntity objCALLE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICALLE/DeleteCALLE", ReplyAction="http://tempuri.org/ICALLE/DeleteCALLEResponse")]
        int DeleteCALLE(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> Clv_Calle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICALLE/DeleteCALLE", ReplyAction="http://tempuri.org/ICALLE/DeleteCALLEResponse")]
        System.Threading.Tasks.Task<int> DeleteCALLEAsync(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> Clv_Calle);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICALLEChannel : SoftvMVC.SoftvService.ICALLE, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CALLEClient : System.ServiceModel.ClientBase<SoftvMVC.SoftvService.ICALLE>, SoftvMVC.SoftvService.ICALLE {
        
        public CALLEClient() {
        }
        
        public CALLEClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CALLEClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CALLEClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CALLEClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Softv.Entities.CALLEEntity GetCALLE(System.Nullable<int> Clv_Calle) {
            return base.Channel.GetCALLE(Clv_Calle);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.CALLEEntity> GetCALLEAsync(System.Nullable<int> Clv_Calle) {
            return base.Channel.GetCALLEAsync(Clv_Calle);
        }
        
        public Softv.Entities.CALLEEntity GetDeepCALLE(System.Nullable<int> Clv_Calle) {
            return base.Channel.GetDeepCALLE(Clv_Calle);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.CALLEEntity> GetDeepCALLEAsync(System.Nullable<int> Clv_Calle) {
            return base.Channel.GetDeepCALLEAsync(Clv_Calle);
        }
        
        public System.Collections.Generic.List<Softv.Entities.CALLEEntity> GetCALLEList() {
            return base.Channel.GetCALLEList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.CALLEEntity>> GetCALLEListAsync() {
            return base.Channel.GetCALLEListAsync();
        }
        
        public Globals.SoftvList<Softv.Entities.CALLEEntity> GetCALLEPagedList(int page, int pageSize) {
            return base.Channel.GetCALLEPagedList(page, pageSize);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.CALLEEntity>> GetCALLEPagedListAsync(int page, int pageSize) {
            return base.Channel.GetCALLEPagedListAsync(page, pageSize);
        }
        
        public Globals.SoftvList<Softv.Entities.CALLEEntity> GetCALLEPagedListXml(int page, int pageSize, string xml) {
            return base.Channel.GetCALLEPagedListXml(page, pageSize, xml);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.CALLEEntity>> GetCALLEPagedListXmlAsync(int page, int pageSize, string xml) {
            return base.Channel.GetCALLEPagedListXmlAsync(page, pageSize, xml);
        }
        
        public int AddCALLE(Softv.Entities.CALLEEntity objCALLE) {
            return base.Channel.AddCALLE(objCALLE);
        }
        
        public System.Threading.Tasks.Task<int> AddCALLEAsync(Softv.Entities.CALLEEntity objCALLE) {
            return base.Channel.AddCALLEAsync(objCALLE);
        }
        
        public int UpdateCALLE(Softv.Entities.CALLEEntity objCALLE) {
            return base.Channel.UpdateCALLE(objCALLE);
        }
        
        public System.Threading.Tasks.Task<int> UpdateCALLEAsync(Softv.Entities.CALLEEntity objCALLE) {
            return base.Channel.UpdateCALLEAsync(objCALLE);
        }
        
        public int DeleteCALLE(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> Clv_Calle) {
            return base.Channel.DeleteCALLE(BaseRemoteIp, BaseIdUser, Clv_Calle);
        }
        
        public System.Threading.Tasks.Task<int> DeleteCALLEAsync(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> Clv_Calle) {
            return base.Channel.DeleteCALLEAsync(BaseRemoteIp, BaseIdUser, Clv_Calle);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SoftvService.IBusquedaIndividual")]
    public interface IBusquedaIndividual {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusquedaIndividual/GetBusquedaIndividual", ReplyAction="http://tempuri.org/IBusquedaIndividual/GetBusquedaIndividualResponse")]
        Softv.Entities.BusquedaIndividualEntity GetBusquedaIndividual(System.Nullable<int> Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusquedaIndividual/GetBusquedaIndividual", ReplyAction="http://tempuri.org/IBusquedaIndividual/GetBusquedaIndividualResponse")]
        System.Threading.Tasks.Task<Softv.Entities.BusquedaIndividualEntity> GetBusquedaIndividualAsync(System.Nullable<int> Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusquedaIndividual/GetDeepBusquedaIndividual", ReplyAction="http://tempuri.org/IBusquedaIndividual/GetDeepBusquedaIndividualResponse")]
        Softv.Entities.BusquedaIndividualEntity GetDeepBusquedaIndividual(System.Nullable<int> Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusquedaIndividual/GetDeepBusquedaIndividual", ReplyAction="http://tempuri.org/IBusquedaIndividual/GetDeepBusquedaIndividualResponse")]
        System.Threading.Tasks.Task<Softv.Entities.BusquedaIndividualEntity> GetDeepBusquedaIndividualAsync(System.Nullable<int> Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusquedaIndividual/GetBusquedaIndividualList", ReplyAction="http://tempuri.org/IBusquedaIndividual/GetBusquedaIndividualListResponse")]
        System.Collections.Generic.List<Softv.Entities.BusquedaIndividualEntity> GetBusquedaIndividualList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusquedaIndividual/GetBusquedaIndividualList", ReplyAction="http://tempuri.org/IBusquedaIndividual/GetBusquedaIndividualListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.BusquedaIndividualEntity>> GetBusquedaIndividualListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusquedaIndividual/GetBusquedaIndividualPagedList", ReplyAction="http://tempuri.org/IBusquedaIndividual/GetBusquedaIndividualPagedListResponse")]
        Globals.SoftvList<Softv.Entities.BusquedaIndividualEntity> GetBusquedaIndividualPagedList(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusquedaIndividual/GetBusquedaIndividualPagedList", ReplyAction="http://tempuri.org/IBusquedaIndividual/GetBusquedaIndividualPagedListResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.BusquedaIndividualEntity>> GetBusquedaIndividualPagedListAsync(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusquedaIndividual/GetBusquedaIndividualPagedListXml", ReplyAction="http://tempuri.org/IBusquedaIndividual/GetBusquedaIndividualPagedListXmlResponse")]
        Globals.SoftvList<Softv.Entities.BusquedaIndividualEntity> GetBusquedaIndividualPagedListXml(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusquedaIndividual/GetBusquedaIndividualPagedListXml", ReplyAction="http://tempuri.org/IBusquedaIndividual/GetBusquedaIndividualPagedListXmlResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.BusquedaIndividualEntity>> GetBusquedaIndividualPagedListXmlAsync(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusquedaIndividual/AddBusquedaIndividual", ReplyAction="http://tempuri.org/IBusquedaIndividual/AddBusquedaIndividualResponse")]
        int AddBusquedaIndividual(Softv.Entities.BusquedaIndividualEntity objBusquedaIndividual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusquedaIndividual/AddBusquedaIndividual", ReplyAction="http://tempuri.org/IBusquedaIndividual/AddBusquedaIndividualResponse")]
        System.Threading.Tasks.Task<int> AddBusquedaIndividualAsync(Softv.Entities.BusquedaIndividualEntity objBusquedaIndividual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusquedaIndividual/UpdateBusquedaIndividual", ReplyAction="http://tempuri.org/IBusquedaIndividual/UpdateBusquedaIndividualResponse")]
        int UpdateBusquedaIndividual(Softv.Entities.BusquedaIndividualEntity objBusquedaIndividual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusquedaIndividual/UpdateBusquedaIndividual", ReplyAction="http://tempuri.org/IBusquedaIndividual/UpdateBusquedaIndividualResponse")]
        System.Threading.Tasks.Task<int> UpdateBusquedaIndividualAsync(Softv.Entities.BusquedaIndividualEntity objBusquedaIndividual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusquedaIndividual/DeleteBusquedaIndividual", ReplyAction="http://tempuri.org/IBusquedaIndividual/DeleteBusquedaIndividualResponse")]
        int DeleteBusquedaIndividual(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusquedaIndividual/DeleteBusquedaIndividual", ReplyAction="http://tempuri.org/IBusquedaIndividual/DeleteBusquedaIndividualResponse")]
        System.Threading.Tasks.Task<int> DeleteBusquedaIndividualAsync(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> Id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBusquedaIndividualChannel : SoftvMVC.SoftvService.IBusquedaIndividual, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BusquedaIndividualClient : System.ServiceModel.ClientBase<SoftvMVC.SoftvService.IBusquedaIndividual>, SoftvMVC.SoftvService.IBusquedaIndividual {
        
        public BusquedaIndividualClient() {
        }
        
        public BusquedaIndividualClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BusquedaIndividualClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BusquedaIndividualClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BusquedaIndividualClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Softv.Entities.BusquedaIndividualEntity GetBusquedaIndividual(System.Nullable<int> Id) {
            return base.Channel.GetBusquedaIndividual(Id);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.BusquedaIndividualEntity> GetBusquedaIndividualAsync(System.Nullable<int> Id) {
            return base.Channel.GetBusquedaIndividualAsync(Id);
        }
        
        public Softv.Entities.BusquedaIndividualEntity GetDeepBusquedaIndividual(System.Nullable<int> Id) {
            return base.Channel.GetDeepBusquedaIndividual(Id);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.BusquedaIndividualEntity> GetDeepBusquedaIndividualAsync(System.Nullable<int> Id) {
            return base.Channel.GetDeepBusquedaIndividualAsync(Id);
        }
        
        public System.Collections.Generic.List<Softv.Entities.BusquedaIndividualEntity> GetBusquedaIndividualList() {
            return base.Channel.GetBusquedaIndividualList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.BusquedaIndividualEntity>> GetBusquedaIndividualListAsync() {
            return base.Channel.GetBusquedaIndividualListAsync();
        }
        
        public Globals.SoftvList<Softv.Entities.BusquedaIndividualEntity> GetBusquedaIndividualPagedList(int page, int pageSize) {
            return base.Channel.GetBusquedaIndividualPagedList(page, pageSize);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.BusquedaIndividualEntity>> GetBusquedaIndividualPagedListAsync(int page, int pageSize) {
            return base.Channel.GetBusquedaIndividualPagedListAsync(page, pageSize);
        }
        
        public Globals.SoftvList<Softv.Entities.BusquedaIndividualEntity> GetBusquedaIndividualPagedListXml(int page, int pageSize, string xml) {
            return base.Channel.GetBusquedaIndividualPagedListXml(page, pageSize, xml);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.BusquedaIndividualEntity>> GetBusquedaIndividualPagedListXmlAsync(int page, int pageSize, string xml) {
            return base.Channel.GetBusquedaIndividualPagedListXmlAsync(page, pageSize, xml);
        }
        
        public int AddBusquedaIndividual(Softv.Entities.BusquedaIndividualEntity objBusquedaIndividual) {
            return base.Channel.AddBusquedaIndividual(objBusquedaIndividual);
        }
        
        public System.Threading.Tasks.Task<int> AddBusquedaIndividualAsync(Softv.Entities.BusquedaIndividualEntity objBusquedaIndividual) {
            return base.Channel.AddBusquedaIndividualAsync(objBusquedaIndividual);
        }
        
        public int UpdateBusquedaIndividual(Softv.Entities.BusquedaIndividualEntity objBusquedaIndividual) {
            return base.Channel.UpdateBusquedaIndividual(objBusquedaIndividual);
        }
        
        public System.Threading.Tasks.Task<int> UpdateBusquedaIndividualAsync(Softv.Entities.BusquedaIndividualEntity objBusquedaIndividual) {
            return base.Channel.UpdateBusquedaIndividualAsync(objBusquedaIndividual);
        }
        
        public int DeleteBusquedaIndividual(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> Id) {
            return base.Channel.DeleteBusquedaIndividual(BaseRemoteIp, BaseIdUser, Id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteBusquedaIndividualAsync(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> Id) {
            return base.Channel.DeleteBusquedaIndividualAsync(BaseRemoteIp, BaseIdUser, Id);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SoftvService.ItblClasificacionProblema")]
    public interface ItblClasificacionProblema {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ItblClasificacionProblema/GettblClasificacionProblema", ReplyAction="http://tempuri.org/ItblClasificacionProblema/GettblClasificacionProblemaResponse")]
        Softv.Entities.tblClasificacionProblemaEntity GettblClasificacionProblema(System.Nullable<long> clvProblema);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ItblClasificacionProblema/GettblClasificacionProblema", ReplyAction="http://tempuri.org/ItblClasificacionProblema/GettblClasificacionProblemaResponse")]
        System.Threading.Tasks.Task<Softv.Entities.tblClasificacionProblemaEntity> GettblClasificacionProblemaAsync(System.Nullable<long> clvProblema);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ItblClasificacionProblema/GetDeeptblClasificacionProblema", ReplyAction="http://tempuri.org/ItblClasificacionProblema/GetDeeptblClasificacionProblemaRespo" +
            "nse")]
        Softv.Entities.tblClasificacionProblemaEntity GetDeeptblClasificacionProblema(System.Nullable<long> clvProblema);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ItblClasificacionProblema/GetDeeptblClasificacionProblema", ReplyAction="http://tempuri.org/ItblClasificacionProblema/GetDeeptblClasificacionProblemaRespo" +
            "nse")]
        System.Threading.Tasks.Task<Softv.Entities.tblClasificacionProblemaEntity> GetDeeptblClasificacionProblemaAsync(System.Nullable<long> clvProblema);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ItblClasificacionProblema/GettblClasificacionProblemaList", ReplyAction="http://tempuri.org/ItblClasificacionProblema/GettblClasificacionProblemaListRespo" +
            "nse")]
        System.Collections.Generic.List<Softv.Entities.tblClasificacionProblemaEntity> GettblClasificacionProblemaList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ItblClasificacionProblema/GettblClasificacionProblemaList", ReplyAction="http://tempuri.org/ItblClasificacionProblema/GettblClasificacionProblemaListRespo" +
            "nse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.tblClasificacionProblemaEntity>> GettblClasificacionProblemaListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ItblClasificacionProblema/GettblClasificacionProblemaPagedList" +
            "", ReplyAction="http://tempuri.org/ItblClasificacionProblema/GettblClasificacionProblemaPagedList" +
            "Response")]
        Globals.SoftvList<Softv.Entities.tblClasificacionProblemaEntity> GettblClasificacionProblemaPagedList(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ItblClasificacionProblema/GettblClasificacionProblemaPagedList" +
            "", ReplyAction="http://tempuri.org/ItblClasificacionProblema/GettblClasificacionProblemaPagedList" +
            "Response")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.tblClasificacionProblemaEntity>> GettblClasificacionProblemaPagedListAsync(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ItblClasificacionProblema/GettblClasificacionProblemaPagedList" +
            "Xml", ReplyAction="http://tempuri.org/ItblClasificacionProblema/GettblClasificacionProblemaPagedList" +
            "XmlResponse")]
        Globals.SoftvList<Softv.Entities.tblClasificacionProblemaEntity> GettblClasificacionProblemaPagedListXml(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ItblClasificacionProblema/GettblClasificacionProblemaPagedList" +
            "Xml", ReplyAction="http://tempuri.org/ItblClasificacionProblema/GettblClasificacionProblemaPagedList" +
            "XmlResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.tblClasificacionProblemaEntity>> GettblClasificacionProblemaPagedListXmlAsync(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ItblClasificacionProblema/AddtblClasificacionProblema", ReplyAction="http://tempuri.org/ItblClasificacionProblema/AddtblClasificacionProblemaResponse")]
        int AddtblClasificacionProblema(Softv.Entities.tblClasificacionProblemaEntity objtblClasificacionProblema);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ItblClasificacionProblema/AddtblClasificacionProblema", ReplyAction="http://tempuri.org/ItblClasificacionProblema/AddtblClasificacionProblemaResponse")]
        System.Threading.Tasks.Task<int> AddtblClasificacionProblemaAsync(Softv.Entities.tblClasificacionProblemaEntity objtblClasificacionProblema);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ItblClasificacionProblema/UpdatetblClasificacionProblema", ReplyAction="http://tempuri.org/ItblClasificacionProblema/UpdatetblClasificacionProblemaRespon" +
            "se")]
        int UpdatetblClasificacionProblema(Softv.Entities.tblClasificacionProblemaEntity objtblClasificacionProblema);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ItblClasificacionProblema/UpdatetblClasificacionProblema", ReplyAction="http://tempuri.org/ItblClasificacionProblema/UpdatetblClasificacionProblemaRespon" +
            "se")]
        System.Threading.Tasks.Task<int> UpdatetblClasificacionProblemaAsync(Softv.Entities.tblClasificacionProblemaEntity objtblClasificacionProblema);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ItblClasificacionProblema/DeletetblClasificacionProblema", ReplyAction="http://tempuri.org/ItblClasificacionProblema/DeletetblClasificacionProblemaRespon" +
            "se")]
        int DeletetblClasificacionProblema(string BaseRemoteIp, int BaseIdUser, System.Nullable<long> clvProblema);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ItblClasificacionProblema/DeletetblClasificacionProblema", ReplyAction="http://tempuri.org/ItblClasificacionProblema/DeletetblClasificacionProblemaRespon" +
            "se")]
        System.Threading.Tasks.Task<int> DeletetblClasificacionProblemaAsync(string BaseRemoteIp, int BaseIdUser, System.Nullable<long> clvProblema);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ItblClasificacionProblemaChannel : SoftvMVC.SoftvService.ItblClasificacionProblema, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ItblClasificacionProblemaClient : System.ServiceModel.ClientBase<SoftvMVC.SoftvService.ItblClasificacionProblema>, SoftvMVC.SoftvService.ItblClasificacionProblema {
        
        public ItblClasificacionProblemaClient() {
        }
        
        public ItblClasificacionProblemaClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ItblClasificacionProblemaClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ItblClasificacionProblemaClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ItblClasificacionProblemaClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Softv.Entities.tblClasificacionProblemaEntity GettblClasificacionProblema(System.Nullable<long> clvProblema) {
            return base.Channel.GettblClasificacionProblema(clvProblema);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.tblClasificacionProblemaEntity> GettblClasificacionProblemaAsync(System.Nullable<long> clvProblema) {
            return base.Channel.GettblClasificacionProblemaAsync(clvProblema);
        }
        
        public Softv.Entities.tblClasificacionProblemaEntity GetDeeptblClasificacionProblema(System.Nullable<long> clvProblema) {
            return base.Channel.GetDeeptblClasificacionProblema(clvProblema);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.tblClasificacionProblemaEntity> GetDeeptblClasificacionProblemaAsync(System.Nullable<long> clvProblema) {
            return base.Channel.GetDeeptblClasificacionProblemaAsync(clvProblema);
        }
        
        public System.Collections.Generic.List<Softv.Entities.tblClasificacionProblemaEntity> GettblClasificacionProblemaList() {
            return base.Channel.GettblClasificacionProblemaList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.tblClasificacionProblemaEntity>> GettblClasificacionProblemaListAsync() {
            return base.Channel.GettblClasificacionProblemaListAsync();
        }
        
        public Globals.SoftvList<Softv.Entities.tblClasificacionProblemaEntity> GettblClasificacionProblemaPagedList(int page, int pageSize) {
            return base.Channel.GettblClasificacionProblemaPagedList(page, pageSize);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.tblClasificacionProblemaEntity>> GettblClasificacionProblemaPagedListAsync(int page, int pageSize) {
            return base.Channel.GettblClasificacionProblemaPagedListAsync(page, pageSize);
        }
        
        public Globals.SoftvList<Softv.Entities.tblClasificacionProblemaEntity> GettblClasificacionProblemaPagedListXml(int page, int pageSize, string xml) {
            return base.Channel.GettblClasificacionProblemaPagedListXml(page, pageSize, xml);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.tblClasificacionProblemaEntity>> GettblClasificacionProblemaPagedListXmlAsync(int page, int pageSize, string xml) {
            return base.Channel.GettblClasificacionProblemaPagedListXmlAsync(page, pageSize, xml);
        }
        
        public int AddtblClasificacionProblema(Softv.Entities.tblClasificacionProblemaEntity objtblClasificacionProblema) {
            return base.Channel.AddtblClasificacionProblema(objtblClasificacionProblema);
        }
        
        public System.Threading.Tasks.Task<int> AddtblClasificacionProblemaAsync(Softv.Entities.tblClasificacionProblemaEntity objtblClasificacionProblema) {
            return base.Channel.AddtblClasificacionProblemaAsync(objtblClasificacionProblema);
        }
        
        public int UpdatetblClasificacionProblema(Softv.Entities.tblClasificacionProblemaEntity objtblClasificacionProblema) {
            return base.Channel.UpdatetblClasificacionProblema(objtblClasificacionProblema);
        }
        
        public System.Threading.Tasks.Task<int> UpdatetblClasificacionProblemaAsync(Softv.Entities.tblClasificacionProblemaEntity objtblClasificacionProblema) {
            return base.Channel.UpdatetblClasificacionProblemaAsync(objtblClasificacionProblema);
        }
        
        public int DeletetblClasificacionProblema(string BaseRemoteIp, int BaseIdUser, System.Nullable<long> clvProblema) {
            return base.Channel.DeletetblClasificacionProblema(BaseRemoteIp, BaseIdUser, clvProblema);
        }
        
        public System.Threading.Tasks.Task<int> DeletetblClasificacionProblemaAsync(string BaseRemoteIp, int BaseIdUser, System.Nullable<long> clvProblema) {
            return base.Channel.DeletetblClasificacionProblemaAsync(BaseRemoteIp, BaseIdUser, clvProblema);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SoftvService.ItblPrioridadQueja")]
    public interface ItblPrioridadQueja {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ItblPrioridadQueja/GettblPrioridadQueja", ReplyAction="http://tempuri.org/ItblPrioridadQueja/GettblPrioridadQuejaResponse")]
        Softv.Entities.tblPrioridadQuejaEntity GettblPrioridadQueja(System.Nullable<int> clvPrioridadQueja);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ItblPrioridadQueja/GettblPrioridadQueja", ReplyAction="http://tempuri.org/ItblPrioridadQueja/GettblPrioridadQuejaResponse")]
        System.Threading.Tasks.Task<Softv.Entities.tblPrioridadQuejaEntity> GettblPrioridadQuejaAsync(System.Nullable<int> clvPrioridadQueja);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ItblPrioridadQueja/GetDeeptblPrioridadQueja", ReplyAction="http://tempuri.org/ItblPrioridadQueja/GetDeeptblPrioridadQuejaResponse")]
        Softv.Entities.tblPrioridadQuejaEntity GetDeeptblPrioridadQueja(System.Nullable<int> clvPrioridadQueja);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ItblPrioridadQueja/GetDeeptblPrioridadQueja", ReplyAction="http://tempuri.org/ItblPrioridadQueja/GetDeeptblPrioridadQuejaResponse")]
        System.Threading.Tasks.Task<Softv.Entities.tblPrioridadQuejaEntity> GetDeeptblPrioridadQuejaAsync(System.Nullable<int> clvPrioridadQueja);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ItblPrioridadQueja/GettblPrioridadQuejaList", ReplyAction="http://tempuri.org/ItblPrioridadQueja/GettblPrioridadQuejaListResponse")]
        System.Collections.Generic.List<Softv.Entities.tblPrioridadQuejaEntity> GettblPrioridadQuejaList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ItblPrioridadQueja/GettblPrioridadQuejaList", ReplyAction="http://tempuri.org/ItblPrioridadQueja/GettblPrioridadQuejaListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.tblPrioridadQuejaEntity>> GettblPrioridadQuejaListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ItblPrioridadQueja/GettblPrioridadQuejaPagedList", ReplyAction="http://tempuri.org/ItblPrioridadQueja/GettblPrioridadQuejaPagedListResponse")]
        Globals.SoftvList<Softv.Entities.tblPrioridadQuejaEntity> GettblPrioridadQuejaPagedList(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ItblPrioridadQueja/GettblPrioridadQuejaPagedList", ReplyAction="http://tempuri.org/ItblPrioridadQueja/GettblPrioridadQuejaPagedListResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.tblPrioridadQuejaEntity>> GettblPrioridadQuejaPagedListAsync(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ItblPrioridadQueja/GettblPrioridadQuejaPagedListXml", ReplyAction="http://tempuri.org/ItblPrioridadQueja/GettblPrioridadQuejaPagedListXmlResponse")]
        Globals.SoftvList<Softv.Entities.tblPrioridadQuejaEntity> GettblPrioridadQuejaPagedListXml(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ItblPrioridadQueja/GettblPrioridadQuejaPagedListXml", ReplyAction="http://tempuri.org/ItblPrioridadQueja/GettblPrioridadQuejaPagedListXmlResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.tblPrioridadQuejaEntity>> GettblPrioridadQuejaPagedListXmlAsync(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ItblPrioridadQueja/AddtblPrioridadQueja", ReplyAction="http://tempuri.org/ItblPrioridadQueja/AddtblPrioridadQuejaResponse")]
        int AddtblPrioridadQueja(Softv.Entities.tblPrioridadQuejaEntity objtblPrioridadQueja);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ItblPrioridadQueja/AddtblPrioridadQueja", ReplyAction="http://tempuri.org/ItblPrioridadQueja/AddtblPrioridadQuejaResponse")]
        System.Threading.Tasks.Task<int> AddtblPrioridadQuejaAsync(Softv.Entities.tblPrioridadQuejaEntity objtblPrioridadQueja);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ItblPrioridadQueja/UpdatetblPrioridadQueja", ReplyAction="http://tempuri.org/ItblPrioridadQueja/UpdatetblPrioridadQuejaResponse")]
        int UpdatetblPrioridadQueja(Softv.Entities.tblPrioridadQuejaEntity objtblPrioridadQueja);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ItblPrioridadQueja/UpdatetblPrioridadQueja", ReplyAction="http://tempuri.org/ItblPrioridadQueja/UpdatetblPrioridadQuejaResponse")]
        System.Threading.Tasks.Task<int> UpdatetblPrioridadQuejaAsync(Softv.Entities.tblPrioridadQuejaEntity objtblPrioridadQueja);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ItblPrioridadQueja/DeletetblPrioridadQueja", ReplyAction="http://tempuri.org/ItblPrioridadQueja/DeletetblPrioridadQuejaResponse")]
        int DeletetblPrioridadQueja(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> clvPrioridadQueja);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ItblPrioridadQueja/DeletetblPrioridadQueja", ReplyAction="http://tempuri.org/ItblPrioridadQueja/DeletetblPrioridadQuejaResponse")]
        System.Threading.Tasks.Task<int> DeletetblPrioridadQuejaAsync(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> clvPrioridadQueja);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ItblPrioridadQuejaChannel : SoftvMVC.SoftvService.ItblPrioridadQueja, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ItblPrioridadQuejaClient : System.ServiceModel.ClientBase<SoftvMVC.SoftvService.ItblPrioridadQueja>, SoftvMVC.SoftvService.ItblPrioridadQueja {
        
        public ItblPrioridadQuejaClient() {
        }
        
        public ItblPrioridadQuejaClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ItblPrioridadQuejaClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ItblPrioridadQuejaClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ItblPrioridadQuejaClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Softv.Entities.tblPrioridadQuejaEntity GettblPrioridadQueja(System.Nullable<int> clvPrioridadQueja) {
            return base.Channel.GettblPrioridadQueja(clvPrioridadQueja);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.tblPrioridadQuejaEntity> GettblPrioridadQuejaAsync(System.Nullable<int> clvPrioridadQueja) {
            return base.Channel.GettblPrioridadQuejaAsync(clvPrioridadQueja);
        }
        
        public Softv.Entities.tblPrioridadQuejaEntity GetDeeptblPrioridadQueja(System.Nullable<int> clvPrioridadQueja) {
            return base.Channel.GetDeeptblPrioridadQueja(clvPrioridadQueja);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.tblPrioridadQuejaEntity> GetDeeptblPrioridadQuejaAsync(System.Nullable<int> clvPrioridadQueja) {
            return base.Channel.GetDeeptblPrioridadQuejaAsync(clvPrioridadQueja);
        }
        
        public System.Collections.Generic.List<Softv.Entities.tblPrioridadQuejaEntity> GettblPrioridadQuejaList() {
            return base.Channel.GettblPrioridadQuejaList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.tblPrioridadQuejaEntity>> GettblPrioridadQuejaListAsync() {
            return base.Channel.GettblPrioridadQuejaListAsync();
        }
        
        public Globals.SoftvList<Softv.Entities.tblPrioridadQuejaEntity> GettblPrioridadQuejaPagedList(int page, int pageSize) {
            return base.Channel.GettblPrioridadQuejaPagedList(page, pageSize);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.tblPrioridadQuejaEntity>> GettblPrioridadQuejaPagedListAsync(int page, int pageSize) {
            return base.Channel.GettblPrioridadQuejaPagedListAsync(page, pageSize);
        }
        
        public Globals.SoftvList<Softv.Entities.tblPrioridadQuejaEntity> GettblPrioridadQuejaPagedListXml(int page, int pageSize, string xml) {
            return base.Channel.GettblPrioridadQuejaPagedListXml(page, pageSize, xml);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.tblPrioridadQuejaEntity>> GettblPrioridadQuejaPagedListXmlAsync(int page, int pageSize, string xml) {
            return base.Channel.GettblPrioridadQuejaPagedListXmlAsync(page, pageSize, xml);
        }
        
        public int AddtblPrioridadQueja(Softv.Entities.tblPrioridadQuejaEntity objtblPrioridadQueja) {
            return base.Channel.AddtblPrioridadQueja(objtblPrioridadQueja);
        }
        
        public System.Threading.Tasks.Task<int> AddtblPrioridadQuejaAsync(Softv.Entities.tblPrioridadQuejaEntity objtblPrioridadQueja) {
            return base.Channel.AddtblPrioridadQuejaAsync(objtblPrioridadQueja);
        }
        
        public int UpdatetblPrioridadQueja(Softv.Entities.tblPrioridadQuejaEntity objtblPrioridadQueja) {
            return base.Channel.UpdatetblPrioridadQueja(objtblPrioridadQueja);
        }
        
        public System.Threading.Tasks.Task<int> UpdatetblPrioridadQuejaAsync(Softv.Entities.tblPrioridadQuejaEntity objtblPrioridadQueja) {
            return base.Channel.UpdatetblPrioridadQuejaAsync(objtblPrioridadQueja);
        }
        
        public int DeletetblPrioridadQueja(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> clvPrioridadQueja) {
            return base.Channel.DeletetblPrioridadQueja(BaseRemoteIp, BaseIdUser, clvPrioridadQueja);
        }
        
        public System.Threading.Tasks.Task<int> DeletetblPrioridadQuejaAsync(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> clvPrioridadQueja) {
            return base.Channel.DeletetblPrioridadQuejaAsync(BaseRemoteIp, BaseIdUser, clvPrioridadQueja);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SoftvService.INoCliente")]
    public interface INoCliente {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INoCliente/GetNoCliente", ReplyAction="http://tempuri.org/INoCliente/GetNoClienteResponse")]
        Softv.Entities.NoClienteEntity GetNoCliente(System.Nullable<int> Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INoCliente/GetNoCliente", ReplyAction="http://tempuri.org/INoCliente/GetNoClienteResponse")]
        System.Threading.Tasks.Task<Softv.Entities.NoClienteEntity> GetNoClienteAsync(System.Nullable<int> Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INoCliente/GetDeepNoCliente", ReplyAction="http://tempuri.org/INoCliente/GetDeepNoClienteResponse")]
        Softv.Entities.NoClienteEntity GetDeepNoCliente(System.Nullable<int> Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INoCliente/GetDeepNoCliente", ReplyAction="http://tempuri.org/INoCliente/GetDeepNoClienteResponse")]
        System.Threading.Tasks.Task<Softv.Entities.NoClienteEntity> GetDeepNoClienteAsync(System.Nullable<int> Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INoCliente/GetNoClienteList", ReplyAction="http://tempuri.org/INoCliente/GetNoClienteListResponse")]
        System.Collections.Generic.List<Softv.Entities.NoClienteEntity> GetNoClienteList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INoCliente/GetNoClienteList", ReplyAction="http://tempuri.org/INoCliente/GetNoClienteListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.NoClienteEntity>> GetNoClienteListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INoCliente/GetNoClientePagedList", ReplyAction="http://tempuri.org/INoCliente/GetNoClientePagedListResponse")]
        Globals.SoftvList<Softv.Entities.NoClienteEntity> GetNoClientePagedList(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INoCliente/GetNoClientePagedList", ReplyAction="http://tempuri.org/INoCliente/GetNoClientePagedListResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.NoClienteEntity>> GetNoClientePagedListAsync(int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INoCliente/GetNoClientePagedListXml", ReplyAction="http://tempuri.org/INoCliente/GetNoClientePagedListXmlResponse")]
        Globals.SoftvList<Softv.Entities.NoClienteEntity> GetNoClientePagedListXml(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INoCliente/GetNoClientePagedListXml", ReplyAction="http://tempuri.org/INoCliente/GetNoClientePagedListXmlResponse")]
        System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.NoClienteEntity>> GetNoClientePagedListXmlAsync(int page, int pageSize, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INoCliente/AddNoCliente", ReplyAction="http://tempuri.org/INoCliente/AddNoClienteResponse")]
        int AddNoCliente(Softv.Entities.NoClienteEntity objNoCliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INoCliente/AddNoCliente", ReplyAction="http://tempuri.org/INoCliente/AddNoClienteResponse")]
        System.Threading.Tasks.Task<int> AddNoClienteAsync(Softv.Entities.NoClienteEntity objNoCliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INoCliente/UpdateNoCliente", ReplyAction="http://tempuri.org/INoCliente/UpdateNoClienteResponse")]
        int UpdateNoCliente(Softv.Entities.NoClienteEntity objNoCliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INoCliente/UpdateNoCliente", ReplyAction="http://tempuri.org/INoCliente/UpdateNoClienteResponse")]
        System.Threading.Tasks.Task<int> UpdateNoClienteAsync(Softv.Entities.NoClienteEntity objNoCliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INoCliente/DeleteNoCliente", ReplyAction="http://tempuri.org/INoCliente/DeleteNoClienteResponse")]
        int DeleteNoCliente(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INoCliente/DeleteNoCliente", ReplyAction="http://tempuri.org/INoCliente/DeleteNoClienteResponse")]
        System.Threading.Tasks.Task<int> DeleteNoClienteAsync(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> Id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INoClienteChannel : SoftvMVC.SoftvService.INoCliente, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NoClienteClient : System.ServiceModel.ClientBase<SoftvMVC.SoftvService.INoCliente>, SoftvMVC.SoftvService.INoCliente {
        
        public NoClienteClient() {
        }
        
        public NoClienteClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public NoClienteClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NoClienteClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NoClienteClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Softv.Entities.NoClienteEntity GetNoCliente(System.Nullable<int> Id) {
            return base.Channel.GetNoCliente(Id);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.NoClienteEntity> GetNoClienteAsync(System.Nullable<int> Id) {
            return base.Channel.GetNoClienteAsync(Id);
        }
        
        public Softv.Entities.NoClienteEntity GetDeepNoCliente(System.Nullable<int> Id) {
            return base.Channel.GetDeepNoCliente(Id);
        }
        
        public System.Threading.Tasks.Task<Softv.Entities.NoClienteEntity> GetDeepNoClienteAsync(System.Nullable<int> Id) {
            return base.Channel.GetDeepNoClienteAsync(Id);
        }
        
        public System.Collections.Generic.List<Softv.Entities.NoClienteEntity> GetNoClienteList() {
            return base.Channel.GetNoClienteList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Softv.Entities.NoClienteEntity>> GetNoClienteListAsync() {
            return base.Channel.GetNoClienteListAsync();
        }
        
        public Globals.SoftvList<Softv.Entities.NoClienteEntity> GetNoClientePagedList(int page, int pageSize) {
            return base.Channel.GetNoClientePagedList(page, pageSize);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.NoClienteEntity>> GetNoClientePagedListAsync(int page, int pageSize) {
            return base.Channel.GetNoClientePagedListAsync(page, pageSize);
        }
        
        public Globals.SoftvList<Softv.Entities.NoClienteEntity> GetNoClientePagedListXml(int page, int pageSize, string xml) {
            return base.Channel.GetNoClientePagedListXml(page, pageSize, xml);
        }
        
        public System.Threading.Tasks.Task<Globals.SoftvList<Softv.Entities.NoClienteEntity>> GetNoClientePagedListXmlAsync(int page, int pageSize, string xml) {
            return base.Channel.GetNoClientePagedListXmlAsync(page, pageSize, xml);
        }
        
        public int AddNoCliente(Softv.Entities.NoClienteEntity objNoCliente) {
            return base.Channel.AddNoCliente(objNoCliente);
        }
        
        public System.Threading.Tasks.Task<int> AddNoClienteAsync(Softv.Entities.NoClienteEntity objNoCliente) {
            return base.Channel.AddNoClienteAsync(objNoCliente);
        }
        
        public int UpdateNoCliente(Softv.Entities.NoClienteEntity objNoCliente) {
            return base.Channel.UpdateNoCliente(objNoCliente);
        }
        
        public System.Threading.Tasks.Task<int> UpdateNoClienteAsync(Softv.Entities.NoClienteEntity objNoCliente) {
            return base.Channel.UpdateNoClienteAsync(objNoCliente);
        }
        
        public int DeleteNoCliente(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> Id) {
            return base.Channel.DeleteNoCliente(BaseRemoteIp, BaseIdUser, Id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteNoClienteAsync(string BaseRemoteIp, int BaseIdUser, System.Nullable<int> Id) {
            return base.Channel.DeleteNoClienteAsync(BaseRemoteIp, BaseIdUser, Id);
        }
    }
}
