
using System;
using System.Collections.Generic;
using System.Text;
using System.Data;
using System.ComponentModel;
using System.Linq;
using Softv.Providers;
using Softv.Entities;
using Globals;

/// <summary>
/// Class                   : Softv.BAL.Client.cs
/// Generated by            : Class Generator (c) 2014
/// Description             : CIUDADBussines
/// File                    : CIUDADBussines.cs
/// Creation date           : 20/05/2016
/// Creation time           : 06:40 p. m.
///</summary>
namespace Softv.BAL
{

    [DataObject]
    [Serializable]
    public class CIUDAD
    {

        #region Constructors
        public CIUDAD() { }
        #endregion

        /// <summary>
        ///Adds CIUDAD
        ///</summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
        public static int Add(CIUDADEntity objCIUDAD)
        {
            int result = ProviderSoftv.CIUDAD.AddCIUDAD(objCIUDAD);
            return result;
        }

        /// <summary>
        ///Delete CIUDAD
        ///</summary>
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public static int Delete(int? Clv_Ciudad)
        {
            int resultado = ProviderSoftv.CIUDAD.DeleteCIUDAD(Clv_Ciudad);
            return resultado;
        }

        /// <summary>
        ///Update CIUDAD
        ///</summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
        public static int Edit(CIUDADEntity objCIUDAD)
        {
            int result = ProviderSoftv.CIUDAD.EditCIUDAD(objCIUDAD);
            return result;
        }

        /// <summary>
        ///Get CIUDAD
        ///</summary>
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public static List<CIUDADEntity> GetAll()
        {
            List<CIUDADEntity> entities = new List<CIUDADEntity>();
            entities = ProviderSoftv.CIUDAD.GetCIUDAD();

            //List<CVECOLCIUEntity> lCVECOLCIU = ProviderSoftv.CVECOLCIU.GetCVECOLCIU(entities.Where(x => x.Clv_Ciudad.HasValue).Select(x => x.Clv_Ciudad.Value).ToList());
            //lCVECOLCIU.ForEach(XCVECOLCIU => entities.Where(x => x.Clv_Ciudad.HasValue).Where(x => x.Clv_Ciudad == XCVECOLCIU.Clv_Ciudad).ToList().ForEach(y => y.CVECOLCIU = XCVECOLCIU));

            return entities ?? new List<CIUDADEntity>();
        }

        /// <summary>
        ///Get CIUDAD List<lid>
        ///</summary>
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public static List<CIUDADEntity> GetAll(List<int> lid)
        {
            List<CIUDADEntity> entities = new List<CIUDADEntity>();
            entities = ProviderSoftv.CIUDAD.GetCIUDAD(lid);
            return entities ?? new List<CIUDADEntity>();
        }

        /// <summary>
        ///Get CIUDAD By Id
        ///</summary>
        [DataObjectMethod(DataObjectMethodType.Select)]
        public static CIUDADEntity GetOne(int? Clv_Ciudad)
        {
            CIUDADEntity result = ProviderSoftv.CIUDAD.GetCIUDADById(Clv_Ciudad);

            if (result.Clv_Ciudad != null)
                result.CVECOLCIU = ProviderSoftv.CVECOLCIU.GetCVECOLCIUByCiudad(result.Clv_Ciudad);

            return result;
        }

        /// <summary>
        ///Get CIUDAD By Id
        ///</summary>
        [DataObjectMethod(DataObjectMethodType.Select)]
        public static CIUDADEntity GetOneDeep(int? Clv_Ciudad)
        {
            CIUDADEntity result = ProviderSoftv.CIUDAD.GetCIUDADById(Clv_Ciudad);

            if (result.Clv_Ciudad != null)
                result.CVECOLCIU = ProviderSoftv.CVECOLCIU.GetCVECOLCIUByCiudad(result.Clv_Ciudad);

            return result;
        }

        public static List<CIUDADEntity> GetCIUDADByClv_Ciudad(int? Clv_Ciudad)
        {
            List<CIUDADEntity> entities = new List<CIUDADEntity>();
            entities = ProviderSoftv.CIUDAD.GetCIUDADByClv_Ciudad(Clv_Ciudad);
            return entities ?? new List<CIUDADEntity>();
        }



        /// <summary>
        ///Get CIUDAD
        ///</summary>
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public static SoftvList<CIUDADEntity> GetPagedList(int pageIndex, int pageSize)
        {
            SoftvList<CIUDADEntity> entities = new SoftvList<CIUDADEntity>();
            entities = ProviderSoftv.CIUDAD.GetPagedList(pageIndex, pageSize);

            List<CVECOLCIUEntity> lCVECOLCIU = ProviderSoftv.CVECOLCIU.GetCVECOLCIU(entities.Where(x => x.Clv_Ciudad.HasValue).Select(x => x.Clv_Ciudad.Value).Distinct().ToList());
            lCVECOLCIU.ForEach(XCVECOLCIU => entities.Where(x => x.Clv_Ciudad.HasValue).Where(x => x.Clv_Ciudad == XCVECOLCIU.Clv_Ciudad).ToList().ForEach(y => y.CVECOLCIU = XCVECOLCIU));

            return entities ?? new SoftvList<CIUDADEntity>();
        }

        /// <summary>
        ///Get CIUDAD
        ///</summary>
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public static SoftvList<CIUDADEntity> GetPagedList(int pageIndex, int pageSize, String xml)
        {
            SoftvList<CIUDADEntity> entities = new SoftvList<CIUDADEntity>();
            entities = ProviderSoftv.CIUDAD.GetPagedList(pageIndex, pageSize, xml);

            List<CVECOLCIUEntity> lCVECOLCIU = ProviderSoftv.CVECOLCIU.GetCVECOLCIU(entities.Where(x => x.Clv_Ciudad.HasValue).Select(x => x.Clv_Ciudad.Value).Distinct().ToList());
            lCVECOLCIU.ForEach(XCVECOLCIU => entities.Where(x => x.Clv_Ciudad.HasValue).Where(x => x.Clv_Ciudad == XCVECOLCIU.Clv_Ciudad).ToList().ForEach(y => y.CVECOLCIU = XCVECOLCIU));

            return entities ?? new SoftvList<CIUDADEntity>();
        }


    }




    #region Customs Methods

    #endregion
}
