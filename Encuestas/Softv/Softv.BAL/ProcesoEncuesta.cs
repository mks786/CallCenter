
    using System;
    using System.Collections.Generic;
    using System.Text;
    using System.Data;
    using System.ComponentModel;
    using System.Linq;
    using Softv.Providers;
    using Softv.Entities;
    using Globals;

    /// <summary>
    /// Class                   : Softv.BAL.Client.cs
    /// Generated by            : Class Generator (c) 2014
    /// Description             : ProcesoEncuestaBussines
    /// File                    : ProcesoEncuestaBussines.cs
    /// Creation date           : 12/08/2016
    /// Creation time           : 12:44 p. m.
    ///</summary>
    namespace Softv.BAL
    {

    [DataObject]
    [Serializable]
    public class ProcesoEncuesta
    {

    #region Constructors
    public ProcesoEncuesta(){}
    #endregion

    /// <summary>
    ///Adds ProcesoEncuesta
    ///</summary>
    [DataObjectMethod(DataObjectMethodType.Insert, true)]
    public static int Add(ProcesoEncuestaEntity objProcesoEncuesta)
  {
  int result = ProviderSoftv.ProcesoEncuesta.AddProcesoEncuesta(objProcesoEncuesta);
    return result;
    }

    /// <summary>
    ///Delete ProcesoEncuesta
    ///</summary>
    [DataObjectMethod(DataObjectMethodType.Delete, true)]
    public static int Delete(int? IdProcesoEnc)
    {
    int resultado = ProviderSoftv.ProcesoEncuesta.DeleteProcesoEncuesta(IdProcesoEnc);
    return resultado;
    }

    /// <summary>
    ///Update ProcesoEncuesta
    ///</summary>
    [DataObjectMethod(DataObjectMethodType.Update, true)]
    public static int Edit(ProcesoEncuestaEntity objProcesoEncuesta)
    {
    int result = ProviderSoftv.ProcesoEncuesta.EditProcesoEncuesta(objProcesoEncuesta);
    return result;
    }

    /// <summary>
    ///Get ProcesoEncuesta
    ///</summary>
    [DataObjectMethod(DataObjectMethodType.Select, true)]
    public static List<ProcesoEncuestaEntity> GetAll()
    {
    List<ProcesoEncuestaEntity> entities = new List<ProcesoEncuestaEntity> ();
    entities = ProviderSoftv.ProcesoEncuesta.GetProcesoEncuesta();
    
          List<UniversoEncuestaEntity> lUniversoEncuesta = ProviderSoftv.UniversoEncuesta.GetUniversoEncuesta(entities.Where(x => x.IdProcesoEnc.HasValue).Select(x => x.IdProcesoEnc.Value).ToList());
          lUniversoEncuesta.ForEach(XUniversoEncuesta => entities.Where(x => x.IdProcesoEnc.HasValue).Where(x => x.IdProcesoEnc == XUniversoEncuesta.IdProcesoEnc).ToList().ForEach(y => y.UniversoEncuesta = XUniversoEncuesta));
        
    return entities ?? new List<ProcesoEncuestaEntity>();
    }

    /// <summary>
    ///Get ProcesoEncuesta List<lid>
    ///</summary>
    [DataObjectMethod(DataObjectMethodType.Select, true)]
    public static List<ProcesoEncuestaEntity> GetAll(List<int> lid)
    {
    List<ProcesoEncuestaEntity> entities = new List<ProcesoEncuestaEntity> ();
    entities = ProviderSoftv.ProcesoEncuesta.GetProcesoEncuesta(lid);    
    return entities ?? new List<ProcesoEncuestaEntity>();
    }

    /// <summary>
    ///Get ProcesoEncuesta By Id
    ///</summary>
    [DataObjectMethod(DataObjectMethodType.Select)]
    public static ProcesoEncuestaEntity GetOne(int? IdProcesoEnc)
    {
    ProcesoEncuestaEntity result = ProviderSoftv.ProcesoEncuesta.GetProcesoEncuestaById(IdProcesoEnc);
    
          if (result.IdProcesoEnc != null)
            result.UniversoEncuesta = ProviderSoftv.UniversoEncuesta.GetUniversoEncuestaById(result.IdProcesoEnc);        
        
    return result;
    }

    /// <summary>
    ///Get ProcesoEncuesta By Id
    ///</summary>
    [DataObjectMethod(DataObjectMethodType.Select)]
    public static ProcesoEncuestaEntity GetOneDeep(int? IdProcesoEnc)
    {
    ProcesoEncuestaEntity result = ProviderSoftv.ProcesoEncuesta.GetProcesoEncuestaById(IdProcesoEnc);
    
          if (result.IdProcesoEnc != null)
          result.UniversoEncuesta = ProviderSoftv.UniversoEncuesta.GetUniversoEncuestaById(result.IdProcesoEnc);
        
    return result;
    }
    
          public static List<ProcesoEncuestaEntity> GetProcesoEncuestaByIdProcesoEnc(int? IdProcesoEnc)
          {
            List<ProcesoEncuestaEntity> entities = new List<ProcesoEncuestaEntity> ();
            entities = ProviderSoftv.ProcesoEncuesta.GetProcesoEncuestaByIdProcesoEnc(IdProcesoEnc);
            return entities ?? new List<ProcesoEncuestaEntity>();
          }
        

    
      /// <summary>
      ///Get ProcesoEncuesta
      ///</summary>
    [DataObjectMethod(DataObjectMethodType.Select, true)]
    public static SoftvList<ProcesoEncuestaEntity> GetPagedList(int pageIndex, int pageSize)
    {
    SoftvList<ProcesoEncuestaEntity> entities = new SoftvList<ProcesoEncuestaEntity>();
    entities = ProviderSoftv.ProcesoEncuesta.GetPagedList(pageIndex, pageSize);
    
          List<UniversoEncuestaEntity> lUniversoEncuesta = ProviderSoftv.UniversoEncuesta.GetUniversoEncuesta(entities.Where(x => x.IdProcesoEnc.HasValue).Select(x => x.IdProcesoEnc.Value).Distinct().ToList());
          lUniversoEncuesta.ForEach(XUniversoEncuesta => entities.Where(x => x.IdProcesoEnc.HasValue).Where(x => x.IdProcesoEnc == XUniversoEncuesta.IdProcesoEnc).ToList().ForEach(y => y.UniversoEncuesta = XUniversoEncuesta));
        
    return entities ?? new SoftvList<ProcesoEncuestaEntity>();
    }

    /// <summary>
    ///Get ProcesoEncuesta
    ///</summary>
    [DataObjectMethod(DataObjectMethodType.Select, true)]
    public static SoftvList<ProcesoEncuestaEntity> GetPagedList(int pageIndex, int pageSize,String xml)
    {
    SoftvList<ProcesoEncuestaEntity> entities = new SoftvList<ProcesoEncuestaEntity>();
    entities = ProviderSoftv.ProcesoEncuesta.GetPagedList(pageIndex, pageSize,xml);
    
          List<UniversoEncuestaEntity> lUniversoEncuesta = ProviderSoftv.UniversoEncuesta.GetUniversoEncuesta(entities.Where(x => x.IdProcesoEnc.HasValue).Select(x => x.IdProcesoEnc.Value).Distinct().ToList());
          lUniversoEncuesta.ForEach(XUniversoEncuesta => entities.Where(x => x.IdProcesoEnc.HasValue).Where(x => x.IdProcesoEnc == XUniversoEncuesta.IdProcesoEnc).ToList().ForEach(y => y.UniversoEncuesta = XUniversoEncuesta));
        
    return entities ?? new SoftvList<ProcesoEncuestaEntity>();
    }


    }




    #region Customs Methods
    
    #endregion
    }
  