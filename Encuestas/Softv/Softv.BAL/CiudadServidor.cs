
using System;
using System.Collections.Generic;
using System.Text;
using System.Data;
using System.ComponentModel;
using System.Linq;
using Softv.Providers;
using Softv.Entities;
using Globals;

/// <summary>
/// Class                   : Softv.BAL.Client.cs
/// Generated by            : Class Generator (c) 2014
/// Description             : CiudadServidorBussines
/// File                    : CiudadServidorBussines.cs
/// Creation date           : 02/08/2016
/// Creation time           : 12:53 p. m.
///</summary>
namespace Softv.BAL
{

    [DataObject]
    [Serializable]
    public class CiudadServidor
    {

        #region Constructors
        public CiudadServidor() { }
        #endregion

        /// <summary>
        ///Adds CiudadServidor
        ///</summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
        public static int Add(CiudadServidorEntity objCiudadServidor)
        {
            int result = ProviderSoftv.CiudadServidor.AddCiudadServidor(objCiudadServidor);
            return result;
        }

        /// <summary>
        ///Delete CiudadServidor
        ///</summary>
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public static int Delete(int? Id)
        {
            int resultado = ProviderSoftv.CiudadServidor.DeleteCiudadServidor(Id);
            return resultado;
        }

        /// <summary>
        ///Update CiudadServidor
        ///</summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
        public static int Edit(CiudadServidorEntity objCiudadServidor)
        {
            int result = ProviderSoftv.CiudadServidor.EditCiudadServidor(objCiudadServidor);
            return result;
        }

        /// <summary>
        ///Get CiudadServidor
        ///</summary>
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public static List<CiudadServidorEntity> GetAll()
        {
            List<CiudadServidorEntity> entities = new List<CiudadServidorEntity>();
            entities = ProviderSoftv.CiudadServidor.GetCiudadServidor();

            List<ConexionEntity> lConexion = ProviderSoftv.Conexion.GetConexion(entities.Where(x => x.IdPlaza.HasValue).Select(x => x.IdPlaza.Value).ToList());
            lConexion.ForEach(XConexion => entities.Where(x => x.IdPlaza.HasValue).Where(x => x.IdPlaza == XConexion.IdConexion).ToList().ForEach(y => y.Conexion = XConexion));

            return entities ?? new List<CiudadServidorEntity>();
        }

        /// <summary>
        ///Get CiudadServidor List<lid>
        ///</summary>
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public static List<CiudadServidorEntity> GetAll(List<int> lid)
        {
            List<CiudadServidorEntity> entities = new List<CiudadServidorEntity>();
            entities = ProviderSoftv.CiudadServidor.GetCiudadServidor(lid);
            return entities ?? new List<CiudadServidorEntity>();
        }

        /// <summary>
        ///Get CiudadServidor By Id
        ///</summary>
        [DataObjectMethod(DataObjectMethodType.Select)]
        public static CiudadServidorEntity GetOne(int? Id)
        {
            CiudadServidorEntity result = ProviderSoftv.CiudadServidor.GetCiudadServidorById(Id);

            if (result.IdPlaza != null)
                result.Conexion = ProviderSoftv.Conexion.GetConexionById(result.IdPlaza);

            return result;
        }

        /// <summary>
        ///Get CiudadServidor By Id
        ///</summary>
        [DataObjectMethod(DataObjectMethodType.Select)]
        public static CiudadServidorEntity GetOneDeep(int? Id)
        {
            CiudadServidorEntity result = ProviderSoftv.CiudadServidor.GetCiudadServidorById(Id);

            if (result.IdPlaza != null)
                result.Conexion = ProviderSoftv.Conexion.GetConexionById(result.IdPlaza);

            return result;
        }

        public static List<CiudadServidorEntity> GetCiudadServidorByIdConexion(int? IdPlaza)
        {
            List<CiudadServidorEntity> entities = new List<CiudadServidorEntity>();
            entities = ProviderSoftv.CiudadServidor.GetCiudadServidorByIdConexion(IdPlaza);
            return entities ?? new List<CiudadServidorEntity>();
        }



        /// <summary>
        ///Get CiudadServidor
        ///</summary>
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public static SoftvList<CiudadServidorEntity> GetPagedList(int pageIndex, int pageSize)
        {
            SoftvList<CiudadServidorEntity> entities = new SoftvList<CiudadServidorEntity>();
            entities = ProviderSoftv.CiudadServidor.GetPagedList(pageIndex, pageSize);

            //List<ConexionEntity> lConexion = ProviderSoftv.Conexion.GetConexion(entities.Where(x => x.IdConexion.HasValue).Select(x => x.IdConexion.Value).Distinct().ToList());
            //lConexion.ForEach(XConexion => entities.Where(x => x.IdConexion.HasValue).Where(x => x.IdConexion == XConexion.IdConexion).ToList().ForEach(y => y.Conexion = XConexion));

            return entities ?? new SoftvList<CiudadServidorEntity>();
        }

        /// <summary>
        ///Get CiudadServidor
        ///</summary>
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public static SoftvList<CiudadServidorEntity> GetPagedList(int pageIndex, int pageSize, String xml)
        {
            SoftvList<CiudadServidorEntity> entities = new SoftvList<CiudadServidorEntity>();
            entities = ProviderSoftv.CiudadServidor.GetPagedList(pageIndex, pageSize, xml);

            //List<ConexionEntity> lConexion = ProviderSoftv.Conexion.GetConexion(entities.Where(x => x.IdConexion.HasValue).Select(x => x.IdConexion.Value).Distinct().ToList());
            //lConexion.ForEach(XConexion => entities.Where(x => x.IdConexion.HasValue).Where(x => x.IdConexion == XConexion.IdConexion).ToList().ForEach(y => y.Conexion = XConexion));

            return entities ?? new SoftvList<CiudadServidorEntity>();
        }


    }




    #region Customs Methods

    #endregion
}
