
using System;
using System.Collections.Generic;
using System.Text;
using System.Data;
using System.ComponentModel;
using System.Linq;
using Softv.Providers;
using Softv.Entities;
using Globals;

/// <summary>
/// Class                   : Softv.BAL.Client.cs
/// Generated by            : Class Generator (c) 2014
/// Description             : COLONIABussines
/// File                    : COLONIABussines.cs
/// Creation date           : 20/05/2016
/// Creation time           : 06:40 p. m.
///</summary>
namespace Softv.BAL
{

    [DataObject]
    [Serializable]
    public class COLONIA
    {

        #region Constructors
        public COLONIA() { }
        #endregion

        /// <summary>
        ///Adds COLONIA
        ///</summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
        public static int Add(COLONIAEntity objCOLONIA)
        {
            int result = ProviderSoftv.COLONIA.AddCOLONIA(objCOLONIA);
            return result;
        }

        /// <summary>
        ///Delete COLONIA
        ///</summary>
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public static int Delete(int? Clv_Colonia)
        {
            int resultado = ProviderSoftv.COLONIA.DeleteCOLONIA(Clv_Colonia);
            return resultado;
        }

        /// <summary>
        ///Update COLONIA
        ///</summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
        public static int Edit(COLONIAEntity objCOLONIA)
        {
            int result = ProviderSoftv.COLONIA.EditCOLONIA(objCOLONIA);
            return result;
        }

        /// <summary>
        ///Get COLONIA
        ///</summary>
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public static List<COLONIAEntity> GetAll()
        {
            List<COLONIAEntity> entities = new List<COLONIAEntity>();
            entities = ProviderSoftv.COLONIA.GetCOLONIA();

            //List<CVECAROLEntity> lCVECAROL = ProviderSoftv.CVECAROL.GetCVECAROL(entities.Where(x => x.Clv_Colonia.HasValue).Select(x => x.Clv_Colonia.Value).ToList());
            //lCVECAROL.ForEach(XCVECAROL => entities.Where(x => x.Clv_Colonia.HasValue).Where(x => x.Clv_Colonia == XCVECAROL.Clv_Colonia).ToList().ForEach(y => y.CVECAROL = XCVECAROL));

            //List<CVECOLCIUEntity> lCVECOLCIU = ProviderSoftv.CVECOLCIU.GetCVECOLCIU(entities.Where(x => x.Clv_Colonia.HasValue).Select(x => x.Clv_Colonia.Value).ToList());
            //lCVECOLCIU.ForEach(XCVECOLCIU => entities.Where(x => x.Clv_Colonia.HasValue).Where(x => x.Clv_Colonia == XCVECOLCIU.Clv_Colonia).ToList().ForEach(y => y.CVECOLCIU = XCVECOLCIU));

            return entities ?? new List<COLONIAEntity>();
        }

        /// <summary>
        ///Get COLONIA List<lid>
        ///</summary>
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public static List<COLONIAEntity> GetAll(List<int> lid)
        {
            List<COLONIAEntity> entities = new List<COLONIAEntity>();
            entities = ProviderSoftv.COLONIA.GetCOLONIA(lid);
            return entities ?? new List<COLONIAEntity>();
        }

        /// <summary>
        ///Get COLONIA By Id
        ///</summary>
        [DataObjectMethod(DataObjectMethodType.Select)]
        public static COLONIAEntity GetOne(int? Clv_Colonia)
        {
            COLONIAEntity result = ProviderSoftv.COLONIA.GetCOLONIAById(Clv_Colonia);

            if (result.Clv_Colonia != null)
                result.CLIENTE = ProviderSoftv.CLIENTE.GetCLIENTEById(result.Clv_Colonia);


            return result;
        }

        /// <summary>
        ///Get COLONIA By Id
        ///</summary>
        [DataObjectMethod(DataObjectMethodType.Select)]
        public static COLONIAEntity GetOneDeep(int? Clv_Colonia)
        {
            COLONIAEntity result = ProviderSoftv.COLONIA.GetCOLONIAById(Clv_Colonia);

            if (result.Clv_Colonia != null)
                result.CLIENTE = ProviderSoftv.CLIENTE.GetCLIENTEById(result.Clv_Colonia);


            return result;
        }

        public static List<COLONIAEntity> GetCOLONIAByIdColonia(int? Clv_Colonia)
        {
            List<COLONIAEntity> entities = new List<COLONIAEntity>();
            entities = ProviderSoftv.COLONIA.GetCOLONIAByIdColonia(Clv_Colonia);
            return entities ?? new List<COLONIAEntity>();
        }


        public static List<COLONIAEntity> GetCOLONIAByClv_Colonia(int? Clv_Colonia)
        {
            List<COLONIAEntity> entities = new List<COLONIAEntity>();
            entities = ProviderSoftv.COLONIA.GetCOLONIAByClv_Colonia(Clv_Colonia);
            return entities ?? new List<COLONIAEntity>();
        }



        /// <summary>
        ///Get COLONIA
        ///</summary>
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public static SoftvList<COLONIAEntity> GetPagedList(int pageIndex, int pageSize)
        {
            SoftvList<COLONIAEntity> entities = new SoftvList<COLONIAEntity>();
            entities = ProviderSoftv.COLONIA.GetPagedList(pageIndex, pageSize);

            List<CVECAROLEntity> lCVECAROL = ProviderSoftv.CVECAROL.GetCVECAROL(entities.Where(x => x.Clv_Colonia.HasValue).Select(x => x.Clv_Colonia.Value).Distinct().ToList());
            lCVECAROL.ForEach(XCVECAROL => entities.Where(x => x.Clv_Colonia.HasValue).Where(x => x.Clv_Colonia == XCVECAROL.Clv_Colonia).ToList().ForEach(y => y.CVECAROL = XCVECAROL));

            List<CVECOLCIUEntity> lCVECOLCIU = ProviderSoftv.CVECOLCIU.GetCVECOLCIU(entities.Where(x => x.Clv_Colonia.HasValue).Select(x => x.Clv_Colonia.Value).Distinct().ToList());
            lCVECOLCIU.ForEach(XCVECOLCIU => entities.Where(x => x.Clv_Colonia.HasValue).Where(x => x.Clv_Colonia == XCVECOLCIU.Clv_Colonia).ToList().ForEach(y => y.CVECOLCIU = XCVECOLCIU));

            return entities ?? new SoftvList<COLONIAEntity>();
        }

        /// <summary>
        ///Get COLONIA
        ///</summary>
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public static SoftvList<COLONIAEntity> GetPagedList(int pageIndex, int pageSize, String xml)
        {
            SoftvList<COLONIAEntity> entities = new SoftvList<COLONIAEntity>();
            entities = ProviderSoftv.COLONIA.GetPagedList(pageIndex, pageSize, xml);


            List<CVECAROLEntity> lCVECAROL = ProviderSoftv.CVECAROL.GetCVECAROL(entities.Where(x => x.Clv_Colonia.HasValue).Select(x => x.Clv_Colonia.Value).Distinct().ToList());
            lCVECAROL.ForEach(XCVECAROL => entities.Where(x => x.Clv_Colonia.HasValue).Where(x => x.Clv_Colonia == XCVECAROL.Clv_Colonia).ToList().ForEach(y => y.CVECAROL = XCVECAROL));

            List<CVECOLCIUEntity> lCVECOLCIU = ProviderSoftv.CVECOLCIU.GetCVECOLCIU(entities.Where(x => x.Clv_Colonia.HasValue).Select(x => x.Clv_Colonia.Value).Distinct().ToList());
            lCVECOLCIU.ForEach(XCVECOLCIU => entities.Where(x => x.Clv_Colonia.HasValue).Where(x => x.Clv_Colonia == XCVECOLCIU.Clv_Colonia).ToList().ForEach(y => y.CVECOLCIU = XCVECOLCIU));

            return entities ?? new SoftvList<COLONIAEntity>();
        }


    }




    #region Customs Methods

    #endregion
}
