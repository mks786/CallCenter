
    using System;
    using System.Text;
    using System.Data;
    using System.Collections.Generic;
    using System.Configuration;
    using System.Runtime.Remoting;
    using Softv.Entities;
    using SoftvConfiguration;
    using Globals;

    namespace Softv.Providers
    {
    /// <summary>
    /// Class                   : Softv.Providers.ProcesoEncuestaProvider
    /// Generated by            : Class Generator (c) 2014
    /// Description             : ProcesoEncuesta Provider
    /// File                    : ProcesoEncuestaProvider.cs
    /// Creation date           : 12/08/2016
    /// Creation time           : 12:44 p. m.
    /// </summary>
    public abstract class ProcesoEncuestaProvider : Globals.DataAccess
    {

    /// <summary>
    /// Instance of ProcesoEncuesta from DB
    /// </summary>
    private static ProcesoEncuestaProvider _Instance = null;

    private static ObjectHandle obj;
    /// <summary>
    /// Generates a ProcesoEncuesta instance
    /// </summary>
    public static ProcesoEncuestaProvider Instance
    {
    get
    {
    if (_Instance == null)
    {
    obj = Activator.CreateInstance(
    SoftvSettings.Settings.ProcesoEncuesta.Assembly,
    SoftvSettings.Settings.ProcesoEncuesta.DataClass);
    _Instance = (ProcesoEncuestaProvider)obj.Unwrap();
    }
    return _Instance;
    }
    }

    /// <summary>
    /// Provider's default constructor
    /// </summary>
    public ProcesoEncuestaProvider()
    {
    }
    /// <summary>
    /// Abstract method to add ProcesoEncuesta
    ///  /summary>
    /// <param name="ProcesoEncuesta"></param>
    /// <returns></returns>
    public abstract int AddProcesoEncuesta(ProcesoEncuestaEntity entity_ProcesoEncuesta);

    /// <summary>
    /// Abstract method to delete ProcesoEncuesta
    /// </summary>
    public abstract int DeleteProcesoEncuesta(int? IdProcesoEnc);

    /// <summary>
    /// Abstract method to update ProcesoEncuesta
    /// </summary>
    public abstract int EditProcesoEncuesta(ProcesoEncuestaEntity entity_ProcesoEncuesta);

    /// <summary>
    /// Abstract method to get all ProcesoEncuesta
    /// </summary>
    public abstract List<ProcesoEncuestaEntity> GetProcesoEncuesta();

    /// <summary>
    /// Abstract method to get all ProcesoEncuesta List<int> lid
    /// </summary>
    public abstract List<ProcesoEncuestaEntity> GetProcesoEncuesta(List<int> lid);

    /// <summary>
    /// Abstract method to get by id
    /// </summary>
    public abstract ProcesoEncuestaEntity GetProcesoEncuestaById(int? IdProcesoEnc);

    
          public abstract List<ProcesoEncuestaEntity> GetProcesoEncuestaByIdProcesoEnc(int? IdProcesoEnc);          
        

    /// <summary>
    ///Get ProcesoEncuesta
    ///</summary>
    public abstract SoftvList<ProcesoEncuestaEntity> GetPagedList(int pageIndex, int pageSize);

    /// <summary>
    ///Get ProcesoEncuesta
    ///</summary>
    public abstract SoftvList<ProcesoEncuestaEntity> GetPagedList(int pageIndex, int pageSize,String xml);

    /// <summary>
    /// Converts data from reader to entity
    /// </summary>
    protected virtual ProcesoEncuestaEntity GetProcesoEncuestaFromReader(IDataReader reader)
    {
    ProcesoEncuestaEntity entity_ProcesoEncuesta = null;
    try
    {
      entity_ProcesoEncuesta = new ProcesoEncuestaEntity();
    entity_ProcesoEncuesta.IdProcesoEnc = (int?)(GetFromReader(reader,"IdProcesoEnc"));
          entity_ProcesoEncuesta.NombreProceso = (String)(GetFromReader(reader,"NombreProceso", IsString : true));
        entity_ProcesoEncuesta.TipSer = (String)(GetFromReader(reader,"TipSer", IsString : true));
        entity_ProcesoEncuesta.TipoBusqueda = (String)(GetFromReader(reader,"TipoBusqueda", IsString : true));
        entity_ProcesoEncuesta.StatusTipBusq = (String)(GetFromReader(reader,"StatusTipBusq", IsString : true));
        entity_ProcesoEncuesta.TipoFecha = (String)(GetFromReader(reader,"TipoFecha", IsString : true));
        entity_ProcesoEncuesta.FechaInicio = (String)(GetFromReader(reader, "FechaInicio", IsString: true));
        entity_ProcesoEncuesta.FechaFin = (String)(GetFromReader(reader, "FechaFin", IsString: true));
          entity_ProcesoEncuesta.Encuesta = (String)(GetFromReader(reader,"Encuesta", IsString : true));
        entity_ProcesoEncuesta.StatusEncuesta = (String)(GetFromReader(reader,"StatusEncuesta", IsString : true));
        entity_ProcesoEncuesta.Usuario = (String)(GetFromReader(reader,"Usuario", IsString : true));
        entity_ProcesoEncuesta.IdEncuesta = (int)(GetFromReader(reader, "IdEncuesta"));
        entity_ProcesoEncuesta.Total = (int)(GetFromReader(reader, "Total"));
        
    }
    catch (Exception ex)
    {
    throw new Exception("Error converting ProcesoEncuesta data to entity", ex);
    }
    return entity_ProcesoEncuesta;
    }
    
    }

    #region Customs Methods
    
    #endregion
    }

  