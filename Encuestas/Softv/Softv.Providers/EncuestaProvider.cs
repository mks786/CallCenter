
using System;
using System.Text;
using System.Data;
using System.Collections.Generic;
using System.Configuration;
using System.Runtime.Remoting;
using Softv.Entities;
using SoftvConfiguration;
using Globals;

namespace Softv.Providers
{
    /// <summary>
    /// Class                   : Softv.Providers.EncuestaProvider
    /// Generated by            : Class Generator (c) 2014
    /// Description             : Encuesta Provider
    /// File                    : EncuestaProvider.cs
    /// Creation date           : 29/04/2016
    /// Creation time           : 05:28 p. m.
    /// </summary>
    public abstract class EncuestaProvider : Globals.DataAccess
    {

        /// <summary>
        /// Instance of Encuesta from DB
        /// </summary>
        private static EncuestaProvider _Instance = null;

        private static ObjectHandle obj;
        /// <summary>
        /// Generates a Encuesta instance
        /// </summary>
        public static EncuestaProvider Instance
        {
            get
            {
                if (_Instance == null)
                {
                    obj = Activator.CreateInstance(
                    SoftvSettings.Settings.Encuesta.Assembly,
                    SoftvSettings.Settings.Encuesta.DataClass);
                    _Instance = (EncuestaProvider)obj.Unwrap();
                }
                return _Instance;
            }
        }

        /// <summary>
        /// Provider's default constructor
        /// </summary>
        public EncuestaProvider()
        {
        }
        /// <summary>
        /// Abstract method to add Encuesta
        ///  /summary>
        /// <param name="Encuesta"></param>
        /// <returns></returns>
        public abstract int AddEncuesta(string data);


        /// <summary>
        /// Abstract method to delete Encuesta
        /// </summary>
        public abstract int DeleteEncuesta(int? IdEncuesta);

        /// <summary>
        /// Abstract method to update Encuesta
        /// </summary>
        public abstract int EditEncuesta(string data);

        /// <summary>
        /// Abstract method to get all Encuesta
        /// </summary>
        public abstract List<EncuestaEntity> GetEncuesta();

        /// <summary>
        /// Abstract method to get all Encuesta List<int> lid
        /// </summary>
        public abstract List<EncuestaEntity> GetEncuesta(List<int> lid);

        /// <summary>
        /// Abstract method to get by id
        /// </summary>
        public abstract EncuestaEntity GetEncuestaById(int? IdEncuesta);


        public abstract List<EncuestaEntity> GetEncuestaByIdUsuario(int? IdUsuario);

        public abstract List<EncuestaEntity> GetEncuestaByIdEncuesta(int? IdEncuesta);




        /// <summary>
        ///Get Encuesta
        ///</summary>
        public abstract SoftvList<EncuestaEntity> GetPagedList(int pageIndex, int pageSize);

        /// <summary>
        ///Get Encuesta
        ///</summary>
        public abstract SoftvList<EncuestaEntity> GetPagedList(int pageIndex, int pageSize, String xml);



        public abstract List<EstadisticaEncuesta> getestadisticas(int plaza, int idencuesta, DateTime finicio, DateTime ffin);


        /// <summary>
        /// Converts data from reader to entity
        /// </summary>
        protected virtual EncuestaEntity GetEncuestaFromReader(IDataReader reader)
        {
            EncuestaEntity entity_Encuesta = null;
            try
            {
                entity_Encuesta = new EncuestaEntity();
                entity_Encuesta.IdEncuesta = (int?)(GetFromReader(reader, "IdEncuesta"));
                entity_Encuesta.TituloEncuesta = (String)(GetFromReader(reader, "TituloEncuesta", IsString: true));
                entity_Encuesta.Descripcion = (String)(GetFromReader(reader, "Descripcion", IsString: true));
                entity_Encuesta.FechaCreacion = (String)(GetFromReader(reader, "FechaCreacion"));
                entity_Encuesta.IdUsuario = (int?)(GetFromReader(reader, "IdUsuario"));
                entity_Encuesta.Aplicada = (bool?)(GetFromReader(reader, "Aplicada"));

            }
            catch (Exception ex)
            {
                throw new Exception("Error converting Encuesta data to entity", ex);
            }
            return entity_Encuesta;
        }










        public abstract int AddEncuestaRel(String xml);








    }

    #region Customs Methods

    #endregion
}

