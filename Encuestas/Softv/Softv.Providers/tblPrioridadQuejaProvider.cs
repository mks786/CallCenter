
    using System;
    using System.Text;
    using System.Data;
    using System.Collections.Generic;
    using System.Configuration;
    using System.Runtime.Remoting;
    using Softv.Entities;
    using SoftvConfiguration;
    using Globals;

    namespace Softv.Providers
    {
    /// <summary>
    /// Class                   : Softv.Providers.tblPrioridadQuejaProvider
    /// Generated by            : Class Generator (c) 2014
    /// Description             : tblPrioridadQueja Provider
    /// File                    : tblPrioridadQuejaProvider.cs
    /// Creation date           : 08/06/2016
    /// Creation time           : 10:53 a. m.
    /// </summary>
    public abstract class tblPrioridadQuejaProvider : Globals.DataAccess
    {

    /// <summary>
    /// Instance of tblPrioridadQueja from DB
    /// </summary>
    private static tblPrioridadQuejaProvider _Instance = null;

    private static ObjectHandle obj;
    /// <summary>
    /// Generates a tblPrioridadQueja instance
    /// </summary>
    public static tblPrioridadQuejaProvider Instance
    {
    get
    {
    if (_Instance == null)
    {
    obj = Activator.CreateInstance(
    SoftvSettings.Settings.tblPrioridadQueja.Assembly,
    SoftvSettings.Settings.tblPrioridadQueja.DataClass);
    _Instance = (tblPrioridadQuejaProvider)obj.Unwrap();
    }
    return _Instance;
    }
    }

    /// <summary>
    /// Provider's default constructor
    /// </summary>
    public tblPrioridadQuejaProvider()
    {
    }
    /// <summary>
    /// Abstract method to add tblPrioridadQueja
    ///  /summary>
    /// <param name="tblPrioridadQueja"></param>
    /// <returns></returns>
    public abstract int AddtblPrioridadQueja(tblPrioridadQuejaEntity entity_tblPrioridadQueja);

    /// <summary>
    /// Abstract method to delete tblPrioridadQueja
    /// </summary>
    public abstract int DeletetblPrioridadQueja(int? clvPrioridadQueja);

    /// <summary>
    /// Abstract method to update tblPrioridadQueja
    /// </summary>
    public abstract int EdittblPrioridadQueja(tblPrioridadQuejaEntity entity_tblPrioridadQueja);

    /// <summary>
    /// Abstract method to get all tblPrioridadQueja
    /// </summary>
    public abstract List<tblPrioridadQuejaEntity> GettblPrioridadQueja();

    /// <summary>
    /// Abstract method to get all tblPrioridadQueja List<int> lid
    /// </summary>
    public abstract List<tblPrioridadQuejaEntity> GettblPrioridadQueja(List<int> lid);

    /// <summary>
    /// Abstract method to get by id
    /// </summary>
    public abstract tblPrioridadQuejaEntity GettblPrioridadQuejaById(int? clvPrioridadQueja);

    

    /// <summary>
    ///Get tblPrioridadQueja
    ///</summary>
    public abstract SoftvList<tblPrioridadQuejaEntity> GetPagedList(int pageIndex, int pageSize);

    /// <summary>
    ///Get tblPrioridadQueja
    ///</summary>
    public abstract SoftvList<tblPrioridadQuejaEntity> GetPagedList(int pageIndex, int pageSize,String xml);

    /// <summary>
    /// Converts data from reader to entity
    /// </summary>
    protected virtual tblPrioridadQuejaEntity GettblPrioridadQuejaFromReader(IDataReader reader)
    {
    tblPrioridadQuejaEntity entity_tblPrioridadQueja = null;
    try
    {
      entity_tblPrioridadQueja = new tblPrioridadQuejaEntity();
    entity_tblPrioridadQueja.clvPrioridadQueja = (int?)(GetFromReader(reader,"clvPrioridadQueja"));
          entity_tblPrioridadQueja.Descripcion = (String)(GetFromReader(reader,"Descripcion", IsString : true));
        
    }
    catch (Exception ex)
    {
    throw new Exception("Error converting tblPrioridadQueja data to entity", ex);
    }
    return entity_tblPrioridadQueja;
    }
    
    }

    #region Customs Methods
    
    #endregion
    }

  