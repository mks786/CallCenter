
using System;
using System.Text;
using System.Data;
using System.Collections.Generic;
using System.Configuration;
using System.Runtime.Remoting;
using Softv.Entities;
using SoftvConfiguration;
using Globals;

namespace Softv.Providers
{
    /// <summary>
    /// Class                   : Softv.Providers.BusquedaIndividualProvider
    /// Generated by            : Class Generator (c) 2014
    /// Description             : BusquedaIndividual Provider
    /// File                    : BusquedaIndividualProvider.cs
    /// Creation date           : 01/06/2016
    /// Creation time           : 11:39 a. m.
    /// </summary>
    public abstract class BusquedaIndividualProvider : Globals.DataAccess
    {

        /// <summary>
        /// Instance of BusquedaIndividual from DB
        /// </summary>
        private static BusquedaIndividualProvider _Instance = null;

        private static ObjectHandle obj;
        /// <summary>
        /// Generates a BusquedaIndividual instance
        /// </summary>
        public static BusquedaIndividualProvider Instance
        {
            get
            {
                if (_Instance == null)
                {
                    obj = Activator.CreateInstance(
                    SoftvSettings.Settings.BusquedaIndividual.Assembly,
                    SoftvSettings.Settings.BusquedaIndividual.DataClass);
                    _Instance = (BusquedaIndividualProvider)obj.Unwrap();
                }
                return _Instance;
            }
        }

        /// <summary>
        /// Provider's default constructor
        /// </summary>
        public BusquedaIndividualProvider()
        {
        }
        /// <summary>
        /// Abstract method to add BusquedaIndividual
        ///  /summary>
        /// <param name="BusquedaIndividual"></param>
        /// <returns></returns>
        public abstract int AddBusquedaIndividual(BusquedaIndividualEntity entity_BusquedaIndividual);

        /// <summary>
        /// Abstract method to delete BusquedaIndividual
        /// </summary>
        public abstract int DeleteBusquedaIndividual(int? Id);

        /// <summary>
        /// Abstract method to update BusquedaIndividual
        /// </summary>
        public abstract int EditBusquedaIndividual(BusquedaIndividualEntity entity_BusquedaIndividual);

        /// <summary>
        /// Abstract method to get all BusquedaIndividual
        /// </summary>
        public abstract List<BusquedaIndividualEntity> GetBusquedaIndividual();

        /// <summary>
        /// Abstract method to get all BusquedaIndividual List<int> lid
        /// </summary>
        public abstract List<BusquedaIndividualEntity> GetBusquedaIndividual(List<int> lid);

        /// <summary>
        /// Abstract method to get by id
        /// </summary>
        public abstract BusquedaIndividualEntity GetBusquedaIndividualById(int? Id);



        /// <summary>
        ///Get BusquedaIndividual
        ///</summary>
        public abstract SoftvList<BusquedaIndividualEntity> GetPagedList(int pageIndex, int pageSize);

        /// <summary>
        ///Get BusquedaIndividual
        ///</summary>
        public abstract SoftvList<BusquedaIndividualEntity> GetPagedList(int pageIndex, int pageSize, String xml);

        /// <summary>
        /// Converts data from reader to entity
        /// </summary>
        protected virtual BusquedaIndividualEntity GetBusquedaIndividualFromReader(IDataReader reader)
        {
            BusquedaIndividualEntity entity_BusquedaIndividual = null;
            try
            {
                entity_BusquedaIndividual = new BusquedaIndividualEntity();
                entity_BusquedaIndividual.Id = (int?)(GetFromReader(reader, "Id"));
                entity_BusquedaIndividual.Contrato = (int?)(GetFromReader(reader, "Contrato"));
                entity_BusquedaIndividual.Nombre = (String)(GetFromReader(reader, "Nombre", IsString: true));
                entity_BusquedaIndividual.Telefono = (String)(GetFromReader(reader, "Telefono", IsString: true));
                entity_BusquedaIndividual.Celular = (String)(GetFromReader(reader, "Celular", IsString: true));
                entity_BusquedaIndividual.Calle = (String)(GetFromReader(reader, "Calle", IsString: true));
                entity_BusquedaIndividual.Numero = (String)(GetFromReader(reader, "Numero", IsString: true));
                entity_BusquedaIndividual.Colonia = (String)(GetFromReader(reader, "Colonia", IsString: true));
                entity_BusquedaIndividual.Ciudad = (String)(GetFromReader(reader, "Ciudad", IsString: true));

            }
            catch (Exception ex)
            {
                throw new Exception("Error converting BusquedaIndividual data to entity", ex);
            }
            return entity_BusquedaIndividual;
        }

    }

    #region Customs Methods

    #endregion
}

