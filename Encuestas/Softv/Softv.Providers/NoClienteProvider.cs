
using System;
using System.Text;
using System.Data;
using System.Collections.Generic;
using System.Configuration;
using System.Runtime.Remoting;
using Softv.Entities;
using SoftvConfiguration;
using Globals;

namespace Softv.Providers
{
    /// <summary>
    /// Class                   : Softv.Providers.NoClienteProvider
    /// Generated by            : Class Generator (c) 2014
    /// Description             : NoCliente Provider
    /// File                    : NoClienteProvider.cs
    /// Creation date           : 14/06/2016
    /// Creation time           : 10:34 a. m.
    /// </summary>
    public abstract class NoClienteProvider : Globals.DataAccess
    {

        /// <summary>
        /// Instance of NoCliente from DB
        /// </summary>
        private static NoClienteProvider _Instance = null;

        private static ObjectHandle obj;
        /// <summary>
        /// Generates a NoCliente instance
        /// </summary>
        public static NoClienteProvider Instance
        {
            get
            {
                if (_Instance == null)
                {
                    obj = Activator.CreateInstance(
                    SoftvSettings.Settings.NoCliente.Assembly,
                    SoftvSettings.Settings.NoCliente.DataClass);
                    _Instance = (NoClienteProvider)obj.Unwrap();
                }
                return _Instance;
            }
        }

        /// <summary>
        /// Provider's default constructor
        /// </summary>
        public NoClienteProvider()
        {
        }
        /// <summary>
        /// Abstract method to add NoCliente
        ///  /summary>
        /// <param name="NoCliente"></param>
        /// <returns></returns>
        public abstract int AddNoCliente(NoClienteEntity entity_NoCliente);

        /// <summary>
        /// Abstract method to delete NoCliente
        /// </summary>
        public abstract int DeleteNoCliente(int? Id);

        /// <summary>
        /// Abstract method to update NoCliente
        /// </summary>
        public abstract int EditNoCliente(NoClienteEntity entity_NoCliente);

        /// <summary>
        /// Abstract method to get all NoCliente
        /// </summary>
        public abstract List<NoClienteEntity> GetNoCliente();

        /// <summary>
        /// Abstract method to get all NoCliente List<int> lid
        /// </summary>
        public abstract List<NoClienteEntity> GetNoCliente(List<int> lid);

        /// <summary>
        /// Abstract method to get by id
        /// </summary>
        public abstract NoClienteEntity GetNoClienteById(int? Id);



        /// <summary>
        ///Get NoCliente
        ///</summary>
        public abstract SoftvList<NoClienteEntity> GetPagedList(int pageIndex, int pageSize);

        /// <summary>
        ///Get NoCliente
        ///</summary>
        public abstract SoftvList<NoClienteEntity> GetPagedList(int pageIndex, int pageSize, String xml);

        /// <summary>
        /// Converts data from reader to entity
        /// </summary>
        protected virtual NoClienteEntity GetNoClienteFromReader(IDataReader reader)
        {
            NoClienteEntity entity_NoCliente = null;
            try
            {
                entity_NoCliente = new NoClienteEntity();
                entity_NoCliente.Id = (int?)(GetFromReader(reader, "Id"));
                entity_NoCliente.IdLlamada = (int?)(GetFromReader(reader, "IdLlamada"));
                entity_NoCliente.Nombre = (String)(GetFromReader(reader, "Nombre", IsString: true));
                entity_NoCliente.Direccion = (String)(GetFromReader(reader, "Direccion", IsString: true));
                entity_NoCliente.Telefono = (String)(GetFromReader(reader, "Telefono", IsString: true));
                entity_NoCliente.Celular = (String)(GetFromReader(reader, "Celular", IsString: true));
                entity_NoCliente.Email = (String)(GetFromReader(reader, "Email", IsString: true));
                entity_NoCliente.MotivoLlamada = (int?)(GetFromReader(reader, "MotivoLlamada"));

            }
            catch (Exception ex)
            {
                throw new Exception("Error converting NoCliente data to entity", ex);
            }
            return entity_NoCliente;
        }

    }

    #region Customs Methods

    #endregion
}

