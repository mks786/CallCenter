
using System;
using System.Text;
using System.Data;
using System.Collections.Generic;
using System.Configuration;
using System.Runtime.Remoting;
using Softv.Entities;
using SoftvConfiguration;
using Globals;

namespace Softv.Providers
{
    /// <summary>
    /// Class                   : Softv.Providers.DatosLlamadaProvider
    /// Generated by            : Class Generator (c) 2014
    /// Description             : DatosLlamada Provider
    /// File                    : DatosLlamadaProvider.cs
    /// Creation date           : 21/06/2016
    /// Creation time           : 10:18 a. m.
    /// </summary>
    public abstract class DatosLlamadaProvider : Globals.DataAccess
    {

        /// <summary>
        /// Instance of DatosLlamada from DB
        /// </summary>
        private static DatosLlamadaProvider _Instance = null;

        private static ObjectHandle obj;
        /// <summary>
        /// Generates a DatosLlamada instance
        /// </summary>
        public static DatosLlamadaProvider Instance
        {
            get
            {
                if (_Instance == null)
                {
                    obj = Activator.CreateInstance(
                    SoftvSettings.Settings.DatosLlamada.Assembly,
                    SoftvSettings.Settings.DatosLlamada.DataClass);
                    _Instance = (DatosLlamadaProvider)obj.Unwrap();
                }
                return _Instance;
            }
        }

        /// <summary>
        /// Provider's default constructor
        /// </summary>
        public DatosLlamadaProvider()
        {
        }
        /// <summary>
        /// Abstract method to add DatosLlamada
        ///  /summary>
        /// <param name="DatosLlamada"></param>
        /// <returns></returns>
        public abstract int AddDatosLlamada(DatosLlamadaEntity entity_DatosLlamada);

        /// <summary>
        /// Abstract method to delete DatosLlamada
        /// </summary>
        public abstract int DeleteDatosLlamada(int? Id);

        /// <summary>
        /// Abstract method to update DatosLlamada
        /// </summary>
        public abstract int EditDatosLlamada(DatosLlamadaEntity entity_DatosLlamada);

        /// <summary>
        /// Abstract method to get all DatosLlamada
        /// </summary>
        public abstract List<DatosLlamadaEntity> GetDatosLlamada();

        /// <summary>
        /// Abstract method to get all DatosLlamada List<int> lid
        /// </summary>
        public abstract List<DatosLlamadaEntity> GetDatosLlamada(List<int> lid);

        /// <summary>
        /// Abstract method to get by id
        /// </summary>
        public abstract DatosLlamadaEntity GetDatosLlamadaById(int? Id);



        /// <summary>
        ///Get DatosLlamada
        ///</summary>
        public abstract SoftvList<DatosLlamadaEntity> GetPagedList(int pageIndex, int pageSize);

        /// <summary>
        ///Get DatosLlamada
        ///</summary>
        public abstract SoftvList<DatosLlamadaEntity> GetPagedList(int pageIndex, int pageSize, String xml);

        /// <summary>
        /// Converts data from reader to entity
        /// </summary>
        protected virtual DatosLlamadaEntity GetDatosLlamadaFromReader(IDataReader reader)
        {
            DatosLlamadaEntity entity_DatosLlamada = null;
            try
            {
                entity_DatosLlamada = new DatosLlamadaEntity();
                entity_DatosLlamada.Id = (int?)(GetFromReader(reader, "Id"));
                entity_DatosLlamada.IdLlamada = (int?)(GetFromReader(reader, "IdLlamada"));
                entity_DatosLlamada.Contrato = (int?)(GetFromReader(reader, "Contrato"));
                entity_DatosLlamada.Fecha = (string)(GetFromReader(reader, "Fecha"));
                entity_DatosLlamada.Nombre = (String)(GetFromReader(reader, "Nombre", IsString: true));
                entity_DatosLlamada.Usuario = (String)(GetFromReader(reader, "Usuario", IsString: true));
                entity_DatosLlamada.TipoLlamada = (bool)(GetFromReader(reader, "TipoLlamada"));

            }
            catch (Exception ex)
            {
                throw new Exception("Error converting DatosLlamada data to entity", ex);
            }
            return entity_DatosLlamada;
        }

    }

    #region Customs Methods

    #endregion
}

