
using System;
using System.Text;
using System.Data;
using System.Collections.Generic;
using System.Configuration;
using System.Runtime.Remoting;
using Softv.Entities;
using SoftvConfiguration;
using Globals;

namespace Softv.Providers
{
    /// <summary>
    /// Class                   : Softv.Providers.EstadisticaProvider
    /// Generated by            : Class Generator (c) 2014
    /// Description             : Estadistica Provider
    /// File                    : EstadisticaProvider.cs
    /// Creation date           : 24/06/2016
    /// Creation time           : 01:55 p. m.
    /// </summary>
    public abstract class EstadisticaProvider : Globals.DataAccess
    {

        /// <summary>
        /// Instance of Estadistica from DB
        /// </summary>
        private static EstadisticaProvider _Instance = null;

        private static ObjectHandle obj;
        /// <summary>
        /// Generates a Estadistica instance
        /// </summary>
        public static EstadisticaProvider Instance
        {
            get
            {
                if (_Instance == null)
                {
                    obj = Activator.CreateInstance(
                    SoftvSettings.Settings.Estadistica.Assembly,
                    SoftvSettings.Settings.Estadistica.DataClass);
                    _Instance = (EstadisticaProvider)obj.Unwrap();
                }
                return _Instance;
            }
        }

        /// <summary>
        /// Provider's default constructor
        /// </summary>
        public EstadisticaProvider()
        {
        }
        /// <summary>
        /// Abstract method to add Estadistica
        ///  /summary>
        /// <param name="Estadistica"></param>
        /// <returns></returns>
     

        /// <summary>
        /// Abstract method to get all Estadistica
        /// </summary>
        public abstract List<EstadisticaEntity> GetEstadistica(int plaza, int idencuesta, DateTime finicio, DateTime ffin);

      
        //public abstract List<EstadisticaEntity> GetEstadisticasEncuestas(int plaza, int idencuesta, DateTime finicio, DateTime ffin);




        /// <summary>
        /// Converts data from reader to entity
        /// </summary>
        protected virtual EstadisticaEntity GetEstadisticaFromReader(IDataReader reader)
        {
            EstadisticaEntity entity_Estadistica = null;
            try
            {
                entity_Estadistica = new EstadisticaEntity();
                entity_Estadistica.IdEstadistica = (int?)(GetFromReader(reader, "IdEstadistica"));
                entity_Estadistica.NombreEncuesta = (String)(GetFromReader(reader, "NombreEncuesta", IsString: true));
                entity_Estadistica.Pregunta = (String)(GetFromReader(reader, "Pregunta", IsString: true));
                entity_Estadistica.Respuesta = (String)(GetFromReader(reader, "Respuesta", IsString: true));
                entity_Estadistica.Cantidad = (int?)(GetFromReader(reader, "Cantidad"));

            }
            catch (Exception ex)
            {
                throw new Exception("Error converting Estadistica data to entity", ex);
            }
            return entity_Estadistica;
        }

    }

    #region Customs Methods

    #endregion
}

