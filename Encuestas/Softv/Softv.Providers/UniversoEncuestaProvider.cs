
    using System;
    using System.Text;
    using System.Data;
    using System.Collections.Generic;
    using System.Configuration;
    using System.Runtime.Remoting;
    using Softv.Entities;
    using SoftvConfiguration;
    using Globals;

    namespace Softv.Providers
    {
    /// <summary>
    /// Class                   : Softv.Providers.UniversoEncuestaProvider
    /// Generated by            : Class Generator (c) 2014
    /// Description             : UniversoEncuesta Provider
    /// File                    : UniversoEncuestaProvider.cs
    /// Creation date           : 12/08/2016
    /// Creation time           : 12:44 p. m.
    /// </summary>
    public abstract class UniversoEncuestaProvider : Globals.DataAccess
    {

    /// <summary>
    /// Instance of UniversoEncuesta from DB
    /// </summary>
    private static UniversoEncuestaProvider _Instance = null;

    private static ObjectHandle obj;
    /// <summary>
    /// Generates a UniversoEncuesta instance
    /// </summary>
    public static UniversoEncuestaProvider Instance
    {
    get
    {
    if (_Instance == null)
    {
    obj = Activator.CreateInstance(
    SoftvSettings.Settings.UniversoEncuesta.Assembly,
    SoftvSettings.Settings.UniversoEncuesta.DataClass);
    _Instance = (UniversoEncuestaProvider)obj.Unwrap();
    }
    return _Instance;
    }
    }

    /// <summary>
    /// Provider's default constructor
    /// </summary>
    public UniversoEncuestaProvider()
    {
    }
    /// <summary>
    /// Abstract method to add UniversoEncuesta
    ///  /summary>
    /// <param name="UniversoEncuesta"></param>
    /// <returns></returns>
    public abstract int AddUniversoEncuesta(UniversoEncuestaEntity entity_UniversoEncuesta);

    /// <summary>
    /// Abstract method to delete UniversoEncuesta
    /// </summary>
    public abstract int DeleteUniversoEncuesta(int? Id);

    /// <summary>
    /// Abstract method to update UniversoEncuesta
    /// </summary>
    public abstract int EditUniversoEncuesta(UniversoEncuestaEntity entity_UniversoEncuesta);







    public abstract int ActualizarUniverso(int? Id);






    /// <summary>
    /// Abstract method to get all UniversoEncuesta
    /// </summary>
    public abstract List<UniversoEncuestaEntity> GetUniversoEncuesta();

    /// <summary>
    /// Abstract method to get all UniversoEncuesta List<int> lid
    /// </summary>
    public abstract List<UniversoEncuestaEntity> GetUniversoEncuesta(List<int> lid);

    /// <summary>
    /// Abstract method to get by id
    /// </summary>
    public abstract UniversoEncuestaEntity GetUniversoEncuestaById(int? Id);

    
          public abstract List<UniversoEncuestaEntity> GetUniversoEncuestaByIdProcesoEnc(int? IdProcesoEnc);          
        

    /// <summary>
    ///Get UniversoEncuesta
    ///</summary>
    public abstract SoftvList<UniversoEncuestaEntity> GetPagedList(int pageIndex, int pageSize);

    /// <summary>
    ///Get UniversoEncuesta
    ///</summary>
    public abstract SoftvList<UniversoEncuestaEntity> GetPagedList(int pageIndex, int pageSize,String xml);

    /// <summary>
    /// Converts data from reader to entity
    /// </summary>
    protected virtual UniversoEncuestaEntity GetUniversoEncuestaFromReader(IDataReader reader)
    {
    UniversoEncuestaEntity entity_UniversoEncuesta = null;
    try
    {
      entity_UniversoEncuesta = new UniversoEncuestaEntity();
    entity_UniversoEncuesta.Id = (int?)(GetFromReader(reader,"Id"));
          entity_UniversoEncuesta.IdProcesoEnc = (int?)(GetFromReader(reader,"IdProcesoEnc"));
          entity_UniversoEncuesta.Contrato = (long?)(GetFromReader(reader,"Contrato"));
          entity_UniversoEncuesta.Nombre = (String)(GetFromReader(reader,"Nombre", IsString : true));
        entity_UniversoEncuesta.Tel = (String)(GetFromReader(reader,"Tel", IsString : true));
        entity_UniversoEncuesta.Cel = (String)(GetFromReader(reader,"Cel", IsString : true));
        entity_UniversoEncuesta.Aplicada = (bool?)(GetFromReader(reader,"Aplicada"));
        entity_UniversoEncuesta.IdPlaza = (int?)(GetFromReader(reader, "IdPlaza"));
        entity_UniversoEncuesta.Ciudad = (String)(GetFromReader(reader, "Ciudad", IsString: true));
          
    }
    catch (Exception ex)
    {
    throw new Exception("Error converting UniversoEncuesta data to entity", ex);
    }
    return entity_UniversoEncuesta;
    }
    
    }

    #region Customs Methods
    
    #endregion
    }

  