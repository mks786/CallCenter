
using System;
using System.Collections.Generic;
using System.Text;
using System.Data;
using System.Linq;
using System.Data.SqlClient;
using Softv.Entities;
using Softv.Providers;
using SoftvConfiguration;
using Globals;

namespace Softv.DAO
{
    /// <summary>
    /// Class                   : Softv.DAO.BusquedaIndividualData
    /// Generated by            : Class Generator (c) 2014
    /// Description             : BusquedaIndividual Data Access Object
    /// File                    : BusquedaIndividualDAO.cs
    /// Creation date           : 01/06/2016
    /// Creation time           : 11:39 a. m.
    ///</summary>
    public class BusquedaIndividualData : BusquedaIndividualProvider
    {
        /// <summary>
        ///</summary>
        /// <param name="BusquedaIndividual"> Object BusquedaIndividual added to List</param>
        public override int AddBusquedaIndividual(BusquedaIndividualEntity entity_BusquedaIndividual)
        {
            int result = 0;
            using (SqlConnection connection = new SqlConnection(SoftvSettings.Settings.BusquedaIndividual.ConnectionString))
            {

                SqlCommand comandoSql = CreateCommand("Softv_BusquedaIndividualAdd", connection);

                AssingParameter(comandoSql, "@Id", null, pd: ParameterDirection.Output, IsKey: true);

                AssingParameter(comandoSql, "@Contrato", entity_BusquedaIndividual.Contrato);

                AssingParameter(comandoSql, "@Nombre", entity_BusquedaIndividual.Nombre);

                AssingParameter(comandoSql, "@Telefono", entity_BusquedaIndividual.Telefono);

                AssingParameter(comandoSql, "@Celular", entity_BusquedaIndividual.Celular);

                AssingParameter(comandoSql, "@Calle", entity_BusquedaIndividual.Calle);

                AssingParameter(comandoSql, "@Numero", entity_BusquedaIndividual.Numero);

                AssingParameter(comandoSql, "@Colonia", entity_BusquedaIndividual.Colonia);

                AssingParameter(comandoSql, "@Ciudad", entity_BusquedaIndividual.Ciudad);

                try
                {
                    if (connection.State == ConnectionState.Closed)
                        connection.Open();
                    result = ExecuteNonQuery(comandoSql);
                }
                catch (Exception ex)
                {
                    throw new Exception("Error adding BusquedaIndividual " + ex.Message, ex);
                }
                finally
                {
                    connection.Close();
                }
                result = (int)comandoSql.Parameters["@IdBusquedaIndividual"].Value;
            }
            return result;
        }

        /// <summary>
        /// Deletes a BusquedaIndividual
        ///</summary>
        /// <param name="">  Id to delete </param>
        public override int DeleteBusquedaIndividual(int? Id)
        {
            int result = 0;
            using (SqlConnection connection = new SqlConnection(SoftvSettings.Settings.BusquedaIndividual.ConnectionString))
            {

                SqlCommand comandoSql = CreateCommand("Softv_BusquedaIndividualDelete", connection);

                AssingParameter(comandoSql, "@Id", Id);

                try
                {
                    if (connection.State == ConnectionState.Closed)
                        connection.Open();
                    result = ExecuteNonQuery(comandoSql);
                }
                catch (Exception ex)
                {
                    throw new Exception("Error deleting BusquedaIndividual " + ex.Message, ex);
                }
                finally
                {
                    if (connection != null)
                        connection.Close();
                }
            }
            return result;
        }

        /// <summary>
        /// Edits a BusquedaIndividual
        ///</summary>
        /// <param name="BusquedaIndividual"> Objeto BusquedaIndividual a editar </param>
        public override int EditBusquedaIndividual(BusquedaIndividualEntity entity_BusquedaIndividual)
        {
            int result = 0;
            using (SqlConnection connection = new SqlConnection(SoftvSettings.Settings.BusquedaIndividual.ConnectionString))
            {

                SqlCommand comandoSql = CreateCommand("Softv_BusquedaIndividualEdit", connection);

                AssingParameter(comandoSql, "@Id", entity_BusquedaIndividual.Id);

                AssingParameter(comandoSql, "@Contrato", entity_BusquedaIndividual.Contrato);

                AssingParameter(comandoSql, "@Nombre", entity_BusquedaIndividual.Nombre);

                AssingParameter(comandoSql, "@Telefono", entity_BusquedaIndividual.Telefono);

                AssingParameter(comandoSql, "@Celular", entity_BusquedaIndividual.Celular);

                AssingParameter(comandoSql, "@Calle", entity_BusquedaIndividual.Calle);

                AssingParameter(comandoSql, "@Numero", entity_BusquedaIndividual.Numero);

                AssingParameter(comandoSql, "@Colonia", entity_BusquedaIndividual.Colonia);

                AssingParameter(comandoSql, "@Ciudad", entity_BusquedaIndividual.Ciudad);

                try
                {
                    if (connection.State == ConnectionState.Closed)
                        connection.Open();

                    result = int.Parse(ExecuteNonQuery(comandoSql).ToString());

                }
                catch (Exception ex)
                {
                    throw new Exception("Error updating BusquedaIndividual " + ex.Message, ex);
                }
                finally
                {
                    if (connection != null)
                        connection.Close();
                }
            }
            return result;
        }

        /// <summary>
        /// Gets all BusquedaIndividual
        ///</summary>
        public override List<BusquedaIndividualEntity> GetBusquedaIndividual()
        {
            List<BusquedaIndividualEntity> BusquedaIndividualList = new List<BusquedaIndividualEntity>();
            using (SqlConnection connection = new SqlConnection(SoftvSettings.Settings.BusquedaIndividual.ConnectionString))
            {

                SqlCommand comandoSql = CreateCommand("Softv_BusquedaIndividualGet", connection);
                IDataReader rd = null;
                try
                {
                    if (connection.State == ConnectionState.Closed)
                        connection.Open();
                    rd = ExecuteReader(comandoSql);

                    while (rd.Read())
                    {
                        BusquedaIndividualList.Add(GetBusquedaIndividualFromReader(rd));
                    }
                }
                catch (Exception ex)
                {
                    throw new Exception("Error getting data BusquedaIndividual " + ex.Message, ex);
                }
                finally
                {
                    if (connection != null)
                        connection.Close();
                    if (rd != null)
                        rd.Close();
                }
            }
            return BusquedaIndividualList;
        }

        /// <summary>
        /// Gets all BusquedaIndividual by List<int>
        ///</summary>
        public override List<BusquedaIndividualEntity> GetBusquedaIndividual(List<int> lid)
        {
            List<BusquedaIndividualEntity> BusquedaIndividualList = new List<BusquedaIndividualEntity>();
            using (SqlConnection connection = new SqlConnection(SoftvSettings.Settings.BusquedaIndividual.ConnectionString))
            {
                DataTable IdDT = BuildTableID(lid);

                SqlCommand comandoSql = CreateCommand("Softv_BusquedaIndividualGetByIds", connection);
                AssingParameter(comandoSql, "@IdTable", IdDT);

                IDataReader rd = null;
                try
                {
                    if (connection.State == ConnectionState.Closed)
                        connection.Open();
                    rd = ExecuteReader(comandoSql);

                    while (rd.Read())
                    {
                        BusquedaIndividualList.Add(GetBusquedaIndividualFromReader(rd));
                    }
                }
                catch (Exception ex)
                {
                    throw new Exception("Error getting data BusquedaIndividual " + ex.Message, ex);
                }
                finally
                {
                    if (connection != null)
                        connection.Close();
                    if (rd != null)
                        rd.Close();
                }
            }
            return BusquedaIndividualList;
        }

        /// <summary>
        /// Gets BusquedaIndividual by
        ///</summary>
        public override BusquedaIndividualEntity GetBusquedaIndividualById(int? Id)
        {
            using (SqlConnection connection = new SqlConnection(SoftvSettings.Settings.BusquedaIndividual.ConnectionString))
            {

                SqlCommand comandoSql = CreateCommand("Softv_BusquedaIndividualGetById", connection);
                BusquedaIndividualEntity entity_BusquedaIndividual = null;


                AssingParameter(comandoSql, "@Id", Id);

                IDataReader rd = null;
                try
                {
                    if (connection.State == ConnectionState.Closed)
                        connection.Open();
                    rd = ExecuteReader(comandoSql, CommandBehavior.SingleRow);
                    if (rd.Read())
                        entity_BusquedaIndividual = GetBusquedaIndividualFromReader(rd);
                }
                catch (Exception ex)
                {
                    throw new Exception("Error getting data BusquedaIndividual " + ex.Message, ex);
                }
                finally
                {
                    if (connection != null)
                        connection.Close();
                    if (rd != null)
                        rd.Close();
                }
                return entity_BusquedaIndividual;
            }

        }



        /// <summary>
        ///Get BusquedaIndividual
        ///</summary>
        public override SoftvList<BusquedaIndividualEntity> GetPagedList(int pageIndex, int pageSize)
        {
            SoftvList<BusquedaIndividualEntity> entities = new SoftvList<BusquedaIndividualEntity>();
            using (SqlConnection connection = new SqlConnection(SoftvSettings.Settings.BusquedaIndividual.ConnectionString))
            {

                SqlCommand comandoSql = CreateCommand("Softv_BusquedaIndividualGetPaged", connection);

                AssingParameter(comandoSql, "@pageIndex", pageIndex);
                AssingParameter(comandoSql, "@pageSize", pageSize);
                IDataReader rd = null;
                try
                {
                    if (connection.State == ConnectionState.Closed)
                        connection.Open();
                    rd = ExecuteReader(comandoSql);
                    while (rd.Read())
                    {
                        entities.Add(GetBusquedaIndividualFromReader(rd));
                    }
                }
                catch (Exception ex)
                {
                    throw new Exception("Error getting data BusquedaIndividual " + ex.Message, ex);
                }
                finally
                {
                    if (connection != null)
                        connection.Close();
                    if (rd != null)
                        rd.Close();
                }
                entities.totalCount = GetBusquedaIndividualCount();
                return entities ?? new SoftvList<BusquedaIndividualEntity>();
            }
        }

        /// <summary>
        ///Get BusquedaIndividual
        ///</summary>
        public override SoftvList<BusquedaIndividualEntity> GetPagedList(int pageIndex, int pageSize, String xml)
        {
            SoftvList<BusquedaIndividualEntity> entities = new SoftvList<BusquedaIndividualEntity>();
            using (SqlConnection connection = new SqlConnection(SoftvSettings.Settings.BusquedaIndividual.ConnectionString))
            {

                SqlCommand comandoSql = CreateCommand("Softv_BusquedaIndividualGetPagedXml", connection);

                AssingParameter(comandoSql, "@pageSize", pageSize);
                AssingParameter(comandoSql, "@pageIndex", pageIndex);
                AssingParameter(comandoSql, "@xml", xml);
                IDataReader rd = null;
                try
                {
                    if (connection.State == ConnectionState.Closed)
                        connection.Open();
                    rd = ExecuteReader(comandoSql);
                    while (rd.Read())
                    {
                        entities.Add(GetBusquedaIndividualFromReader(rd));
                    }
                }
                catch (Exception ex)
                {
                    throw new Exception("Error getting data BusquedaIndividual " + ex.Message, ex);
                }
                finally
                {
                    if (connection != null)
                        connection.Close();
                    if (rd != null)
                        rd.Close();
                }
                entities.totalCount = GetBusquedaIndividualCount(xml);
                return entities ?? new SoftvList<BusquedaIndividualEntity>();
            }
        }

        /// <summary>
        ///Get Count BusquedaIndividual
        ///</summary>
        public int GetBusquedaIndividualCount()
        {
            int result = 0;
            using (SqlConnection connection = new SqlConnection(SoftvSettings.Settings.BusquedaIndividual.ConnectionString))
            {

                SqlCommand comandoSql = CreateCommand("Softv_BusquedaIndividualGetCount", connection);
                try
                {
                    if (connection.State == ConnectionState.Closed)
                        connection.Open();
                    result = (int)ExecuteScalar(comandoSql);


                }
                catch (Exception ex)
                {
                    throw new Exception("Error getting data BusquedaIndividual " + ex.Message, ex);
                }
                finally
                {
                    if (connection != null)
                        connection.Close();
                }
            }
            return result;
        }


        /// <summary>
        ///Get Count BusquedaIndividual
        ///</summary>
        public int GetBusquedaIndividualCount(String xml)
        {
            int result = 0;
            using (SqlConnection connection = new SqlConnection(SoftvSettings.Settings.BusquedaIndividual.ConnectionString))
            {

                SqlCommand comandoSql = CreateCommand("Softv_BusquedaIndividualGetCountXml", connection);

                AssingParameter(comandoSql, "@xml", xml);
                try
                {
                    if (connection.State == ConnectionState.Closed)
                        connection.Open();
                    result = (int)ExecuteScalar(comandoSql);


                }
                catch (Exception ex)
                {
                    throw new Exception("Error getting data BusquedaIndividual " + ex.Message, ex);
                }
                finally
                {
                    if (connection != null)
                        connection.Close();
                }
            }
            return result;
        }

        #region Customs Methods

        #endregion
    }
}
